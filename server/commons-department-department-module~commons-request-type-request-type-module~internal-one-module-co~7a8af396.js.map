{"version":3,"sources":["./src/app/shared/module/general-internal/general-internal.service.ts","./src/app/shared/services/others.ts","./src/app/shared/module/general-internal/general-internal-entry-delete/general-internal-entry-delete.component.ts","./src/app/shared/module/general-internal/general-internal-entry-delete/general-internal-entry-delete.component.html","./src/app/shared/module/general-internal/general-internal-entry-change.service.ts","./src/app/shared/component/notification/notification-message.service.ts","./src/app/shared/module/general-internal/general-internal-form.service.ts","./src/app/shared/module/general-internal/general-internal-entry-detail/general-internal-entry-detail.component.ts","./src/app/shared/module/general-internal/general-internal-entry-detail/general-internal-entry-detail.component.html","./src/app/shared/module/general-internal/general-internal-entry-create/general-internal-entry-create.component.ts","./src/app/shared/module/general-internal/general-internal-entry-create/general-internal-entry-create.component.html","./src/app/shared/module/general-internal/general-internal-entry-update/general-internal-entry-update.component.ts","./src/app/shared/module/general-internal/general-internal-entry-update/general-internal-entry-update.component.html","./src/app/shared/module/general-internal/general-internal-form-input-validator/general-internal-form-input-validator.component.ts","./src/app/shared/module/general-internal/general-internal-form-input-validator/general-internal-form-input-validator.component.html","./src/app/shared/module/general-internal/general-internal.module.ts","./src/app/shared/module/general-internal/general-internal-form-input/general-internal-form-input.component.ts","./src/app/shared/module/general-internal/general-internal-form-input/general-internal-form-input.component.html","./src/app/shared/services/dynamic-control-validator.ts"],"names":[],"mappings":"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","file":"commons-department-department-module~commons-request-type-request-type-module~internal-one-module-co~7a8af396.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class GeneralInternalService {\n\n  constructor() { \n\n  }\n\n}\n","export function nullRemover(data) : { [key : string] : any } {\r\n\r\n  let entry : { [key : string] : any };\r\n\r\n  for (let i in data) {\r\n\r\n    if (data[i] == null) {\r\n\r\n      data[i] = '';\r\n    }\r\n  }\r\n\r\n  entry = data;\r\n\r\n  return entry;\r\n\r\n}\r\n\r\n\r\nexport function checkFormChanges(entry : { [key : string] : any } , body : { [key : string] : any } , this$) : boolean {\r\n\r\n\t\tfor (let chrs in entry) {\r\n\r\n\t\t\t\tif((entry[chrs] != body[chrs] && (body[chrs] !== null && body[chrs] !== undefined && body.hasOwnProperty(chrs) == true))) { \r\n\r\n\t\t\t\t\tthis$.isFormModified = true;\r\n\r\n\t\t\t\t\tbreak; } }\r\n\r\n     let $$entry = Object.keys(entry);\r\n\r\n     let $$$entry = Object.keys(body);\r\n\r\n    const found = $$$entry.some((r) => {\r\n      \r\n        if (!($$entry.indexOf(r) > -1)) {\r\n\r\n            this$.isFormModified = true; } });\r\n\r\n    return this$.isFormModified;\r\n\t}","import { Component , EventEmitter , Input , OnInit , Output } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { General } from '../general';\nimport { GeneralInternal } from '../general-internal';\nimport { GeneralInternalEntryChangeService } from '../general-internal-entry-change.service';\nimport { NotificationMessageService } from '../../../component/notification/notification-message.service';\n\n@Component({\n\n  'selector' : 'app-general-internal-entry-delete',\n\n  'templateUrl' : './general-internal-entry-delete.component.html',\n\n  'styleUrls' : ['./general-internal-entry-delete.component.css'] ,\n\n  'providers' : [NotificationMessageService]\n\n})\n\nexport class GeneralInternalEntryDeleteComponent implements OnInit {\n\n  constructor(private giecs : GeneralInternalEntryChangeService , private ns : NotificationMessageService) { \n\n  \tthis.entryChangesOb = this.giecs.isEntryChanged$\n\n  \t\t.subscribe((deleted : boolean) => {\n\n  \t\t\t\tif (deleted == false) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n \t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} is not deleted.`); }\n\n  \t\t\t\telse if (deleted == true) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} is deleted.`); } });\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  ngOnDestroy() : void {\n\n    if(this.entryChangesOb != null) this.entryChangesOb.unsubscribe();\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('system-guideline') public systemGuideline : string;\n\n  @Input() public view : string;\n\n  @Input() public entry : GeneralInternal;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input() public placeholder : any;\n\n  @Input('no-edit') public noEdit : boolean;\n  \n\n  @Output() public processEntry : EventEmitter<{ [key : string] : any }> = new EventEmitter<{ [key : string] : any }>(); \n\n\n  public isFormModified : boolean = false;\n\n  public formMessage : string = 'Form will not be submitted and entry will not be deleted if data are unchanged since when they were retrieved from the database.';\n\n  public isFormProcessing : boolean = false;\n\n  public isFormSubmitted : boolean = false;\n\n  public entryChangesOb : Subscription;\n\n\n  public changeEntry(body : { [key : string] : any}) : boolean {\n\n    let isConfirmed = confirm('Are you sure you want to proceed with this action?');\n\n    if (isConfirmed) {\n\n\t    this.isFormSubmitted = true;\n\n\t    this.isFormProcessing = true;\n\t\t\t\n\t\t\tthis.processEntry.emit(body); }\n\n     else { return false };\n\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n\n}\n","\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<ng-container *ngIf ='entryForm'>\n\n\t<div id ='entry-delete' [formGroup] ='entryForm' >\n\n\t\t<div id ='entry-detail'>\n\n\t\t\t<app-general-internal-form-input [system-type] ='systemType' [entry-form] ='entryForm' [e-others] ='eothers' [placeholder] ='placeholder' [no-edit] ='noEdit' > </app-general-internal-form-input> \n\n\t\t<ng-content> </ng-content>\n\n\t\t\t<button *ngIf ='!isFormProcessing' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'\n\n\t\t\t(click) ='changeEntry(entryForm.value)' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</div>\n\n\t\t</div>\n\n</ng-container>\n\n\t\t<div *ngIf ='systemType' class ='entry-options'>\n\n\t\t\t<h3> Entry Options </h3>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'detail']\" class ='entry-option center'> {{systemType}} Detail </a>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'update']\" class ='entry-option center'> {{systemType}} Update </a>\n\n\t\t</div>\n","import { Injectable } from '@angular/core';\nimport { Observable , Subject } from 'rxjs';\n\n@Injectable()\n\nexport class GeneralInternalEntryChangeService {\n\n  constructor() { \n\n  }\n\n  public isEntryChanged : Subject<boolean> = new Subject<boolean>();\n\n  public isEntryChanged$ : Observable<boolean> = this.isEntryChanged.asObservable();\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class NotificationMessageService {\n\n  public notificationAvailable : boolean = false;\n\n  public notificationMessage : string = '';\n\n  constructor() { \n\n  }\n\n  public removeNotification() : void {\n\n     this.notificationAvailable = false;\n\n     this.notificationMessage = null\n  }\n\n  addNotification(message : string) : void {\n\n  \tthis.notificationMessage = message;\n  }\n\n  notificationStatus() : boolean {\n\n  \treturn this.notificationAvailable;\n  }\n\n  setNotificationStatus(status : boolean) : void {\n\n  \tthis.notificationAvailable = status;\n  }\n\n  getNotificationMessage() : string {\n\n  \treturn this.notificationMessage;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup , FormBuilder , Validators } from '@angular/forms';\n\n@Injectable()\n\nexport class GeneralInternalFormService {\n\n  constructor(private fb : FormBuilder) { \n\n  }\n\n  public foreignValidator = [Validators.required , Validators.max(90000000)];\n\n  public entryForm() : FormGroup {\n\n  \tlet form : FormGroup = this.fb.group({\n\n  \t\t'name' : ['' , {'validators' : [Validators.required , Validators.minLength(3) , Validators.maxLength(150)] } ] ,\n\n  \t\t'description' : ['' , {'validators' : [Validators.required , Validators.minLength(10) , Validators.maxLength(250)] } ] ,\n\n\t    'status' : ['' , {'validators' : this.foreignValidator } ] });\n\n  \treturn form;\n  }\n\n\n}\n","import { Component , Input , OnInit } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-general-internal-entry-detail',\n\n  'templateUrl' : './general-internal-entry-detail.component.html',\n\n  'styleUrls' : ['./general-internal-entry-detail.component.css']\n\n})\n\nexport class GeneralInternalEntryDetailComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input() public entry : any;\n\n}\n","<div *ngIf ='entry' id ='entry-view'>\n\n\t<div id ='entry-detail'>\n\n\t<table>\n\n\t\t<colgroup>\n\n\t\t\t<col class ='parameter'>\n\t\t\t<col class ='data'>\n\n\t\t</colgroup>\n\n\t\t<tbody>\n\n\t\t\t<ng-container *ngIf ='entry?.name'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Name : </th>\n\t\t\t\t<td> {{entry?.name}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.created_on'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Created At : </th>\n\t\t\t\t<td> {{entry?.created_on | date : 'fullDate'}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.updated_on'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Updated At : </th>\n\t\t\t\t<td> {{entry?.updated_on | date : 'fullDate'}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.description'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Description : </th>\n\t\t\t\t<td> {{entry?.description}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\n\t\t<ng-content> </ng-content>\n\n\n\t\t\t<ng-container *ngIf ='entry?.status'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Status : </th>\n\t\t\t\t<td> {{entry?.status}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t</tbody>\n\n\t</table>\n\n\t\t\t<div class ='entry-options'>\n\n\t\t\t\t<h3> Entry Options </h3>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'update']\" class ='entry-option center'> {{systemType}} Update </a>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'delete']\" class ='entry-option center'> {{systemType}} Delete </a>\n\n\t\t</div>\n\n</div>\n\n</div>","import { Component , EventEmitter , Input , OnInit , Output } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { GeneralInternalEntryChangeService } from '../general-internal-entry-change.service';\nimport { NotificationMessageService } from '../../../component/notification/notification-message.service';\n\n@Component({\n\n  'selector' : 'app-general-internal-entry-create',\n\n  'templateUrl' : './general-internal-entry-create.component.html',\n\n  'styleUrls' : ['./general-internal-entry-create.component.css'] ,\n\n  'providers' : [NotificationMessageService]\n\n})\n\nexport class GeneralInternalEntryCreateComponent implements OnInit {\n\n  constructor(private giecs : GeneralInternalEntryChangeService , private ns : NotificationMessageService) { \n\n  \tthis.entryChangesOb = this.giecs.isEntryChanged$\n\n  \t\t.subscribe((created : boolean) => {\n\n  \t\t\t\tif (created == false) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n \t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} is not added.`); }\n\n  \t\t\t\telse if (created == true) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} is added.`); } });\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  ngOnDestroy() : void {\n\n    if(this.entryChangesOb != null) this.entryChangesOb.unsubscribe();\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('system-guideline') public systemGuideline : string;\n\n  @Input() public view : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input('e-others') public eothers : any;\n\n  @Input() public placeholder : any;\n\n  @Input('no-edit') public noEdit : boolean;\n  \n\n  @Output() public processEntry : EventEmitter<{ [key : string] : any }> = new EventEmitter<{ [key : string] : any }>(); \n\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false;\n\n  public entryChangesOb : Subscription;\n\n\n  public createEntry(body : { [key : string] : any}) : void {\n\n    this.isFormSubmitted = true;\n\n    this.isFormProcessing = true;\n\n    this.processEntry.emit(body);\n\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n\n}\n","\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<ng-container *ngIf ='entryForm'>\n\n\t\t<div [formGroup] ='entryForm'>\n\n\t\t\t<app-general-internal-form-input [system-type] ='systemType' [entry-form] ='entryForm' [e-others] ='eothers' [placeholder] ='placeholder' [no-edit] ='noEdit' > </app-general-internal-form-input> \n\n\t\t<ng-content> </ng-content>\n\n\t\t\t<button *ngIf ='!isFormProcessing' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'\n\n\t\t\t(click) ='createEntry(entryForm.value)' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</div>\n\n</ng-container>\n","import { Component , EventEmitter , Input , OnInit , Output } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { General } from '../general';\nimport { GeneralInternal } from '../general-internal';\nimport { nullRemover , checkFormChanges } from '../../../services/others';\nimport { GeneralInternalEntryChangeService } from '../general-internal-entry-change.service';\nimport { NotificationMessageService } from '../../../component/notification/notification-message.service';\n\n@Component({\n\n  'selector' : 'app-general-internal-entry-update',\n\n  'templateUrl' : './general-internal-entry-update.component.html',\n\n  'styleUrls' : ['./general-internal-entry-update.component.css'] ,\n\n  'providers' : [NotificationMessageService]\n\n})\n\nexport class GeneralInternalEntryUpdateComponent implements OnInit {\n\n  constructor(private giecs : GeneralInternalEntryChangeService , private ns : NotificationMessageService) { \n\n  \tthis.entryChangesOb = this.giecs.isEntryChanged$\n\n  \t\t.subscribe((updated : boolean) => {\n\n  \t\t\t\tif (updated == false) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n \t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} is not updated.`); }\n\n  \t\t\t\telse if (updated == true) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} is updated.`); } });\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  ngOnDestroy() : void {\n\n    if(this.entryChangesOb != null) this.entryChangesOb.unsubscribe();\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('system-guideline') public systemGuideline : string;\n\n  @Input() public view : string;\n\n  @Input() public entry : GeneralInternal;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input('e-others') public eothers : any;\n\n  @Input() public placeholder : any;\n\n  @Input('no-edit') public noEdit : boolean;\n  \n\n  @Output() public processEntry : EventEmitter<{ [key : string] : any }> = new EventEmitter<{ [key : string] : any }>(); \n\n\n  public isFormModified : boolean = false;\n\n  public formMessage : string = 'Form will not be submitted and entry will not be updated if data are unchanged since when they were retrieved from the database.';\n\n  public isFormProcessing : boolean = false;\n\n  public isFormSubmitted : boolean = false;\n\n  public entryChangesOb : Subscription;\n\n\n  public confirmChanges(entry : General , body : General) : boolean {\n\n    checkFormChanges(entry , body , this);\n\n    return this.isFormModified;\n  }\n\n\n  public changeEntry(body : { [key : string] : any}) : void {\n\n    this.isFormProcessing = true;\n\n    this.confirmChanges(this.entry , body);\n\n    if (this.isFormModified == true) {\n\n      this.isFormSubmitted = true;\n\n      this.processEntry.emit(body); }\n\n    else { \n\n      this.isFormProcessing = false;\n\n      false; }\n\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n\n}\n","\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<p *ngIf ='!isFormModified'> <b class ='bold'> Form Message : </b> {{formMessage}} </p>\n\n<ng-container *ngIf ='entryForm'>\n\n\t<div id ='entry-update' [formGroup] ='entryForm' >\n\n\t\t<div id ='entry-detail'>\n\n\t\t\t<app-general-internal-form-input [system-type] ='systemType' [entry-form] ='entryForm' [e-others] ='eothers' [placeholder] ='placeholder' [no-edit] ='noEdit' > </app-general-internal-form-input> \n\n\t\t<ng-content> </ng-content>\n\n\t\t\t<button *ngIf ='!isFormProcessing' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'\n\n\t\t\t(click) ='changeEntry(entryForm.value)' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</div>\n\n\t\t</div>\n\n</ng-container>\n\n\t\t<div *ngIf ='systemType' class ='entry-options'>\n\n\t\t\t<h3> Entry Options </h3>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'detail']\" class ='entry-option center'> {{systemType}} Detail </a>\n\n\t\t\t<a [routerLink] =\"['../../../' , 'entry' , entry?.slug , 'delete']\" class ='entry-option center'> {{systemType}} Delete </a>\n\n\t\t</div>\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeAnimation } from '../../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-internal-form-input-validator',\n\n  'templateUrl' : './general-internal-form-input-validator.component.html',\n\n  'styleUrls' : ['./general-internal-form-input-validator.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralInternalFormInputValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input() public name : FormControl;\n\n  @Input() public status : FormControl;\n\n  @Input() public description : FormControl;\n\n}\n","\n<ng-container *ngIf ='name'>\n\n\t<div @fadeAnimation *ngIf ='name.invalid && (name.touched || name.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='name.errors?.required'> Name of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='name.errors?.required || name.errors?.minlength'> Name of {{systemType}} cannot be less than 3 characters in length </li>\n\t\t\t<li *ngIf ='name.errors?.required || name.errors?.maxlength'> Name of {{systemType}} cannot be greater than 150 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='status'>\n\n\t<div @fadeAnimation *ngIf ='status.invalid && (status.touched || status.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='status.errors?.required'> Status of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='status.errors?.max'> Status of {{systemType}} cannot be greater than specified length </li>\n\t\t\t<li *ngIf ='status.errors?.Status'> Status of {{systemType}} should be available from existing record before it can be considered valid </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n<ng-container *ngIf ='description'>\n\n<div @fadeAnimation *ngIf ='description.invalid && (description.touched || description.dirty)' class ='validation-error'>\n\n\t<ul>\n\n\t\t<li *ngIf ='description.errors?.required'> Description of {{systemType}} should be provided and cannot be empty </li>\n\t\t<li *ngIf ='description.errors?.required || description.errors?.minlength'> Description of {{systemType}} cannot be less than 10 characters in length </li>\n\t\t<li *ngIf ='description.errors?.required || description.errors?.maxlength'> Description of {{systemType}} cannot be greater than 250 characters in length </li>\n\n\t</ul>\n\n</div>\n\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GeneralModule } from '../../../general/general.module';\nimport { GeneralServicesModule } from '../../services/general-services.module';\n\nimport { GeneralInternalFormInputValidatorComponent } from './general-internal-form-input-validator/general-internal-form-input-validator.component';\nimport { GeneralInternalFormInputComponent } from './general-internal-form-input/general-internal-form-input.component';\nimport { GeneralInternalEntryCreateComponent } from './general-internal-entry-create/general-internal-entry-create.component';\n\nimport { GeneralInternalService } from './general-internal.service';\nimport { GeneralInternalEntryChangeService } from './general-internal-entry-change.service';\nimport { GeneralInternalFormService } from './general-internal-form.service';\nimport { GeneralInternalEntryDetailComponent } from './general-internal-entry-detail/general-internal-entry-detail.component';\nimport { GeneralInternalEntryUpdateComponent } from './general-internal-entry-update/general-internal-entry-update.component';\nimport { GeneralInternalEntryDeleteComponent } from './general-internal-entry-delete/general-internal-entry-delete.component';\n\n@NgModule({\n\n  declarations: [\n\n  GeneralInternalFormInputValidatorComponent,\n  GeneralInternalFormInputComponent,\n  GeneralInternalEntryCreateComponent,\n  GeneralInternalEntryDetailComponent,\n  GeneralInternalEntryUpdateComponent,\n  GeneralInternalEntryDeleteComponent\n\n  ],\n  \n  imports: [\n\n    CommonModule,\n    RouterModule.forChild([]),\n    ReactiveFormsModule,\n    GeneralModule,\n    GeneralServicesModule\n  ],\n\n  providers : [\n\n  \tGeneralInternalService,\n  \tGeneralInternalEntryChangeService,\n  \tGeneralInternalFormService\n  ] ,\n\n  exports : [\n\n\t  GeneralInternalEntryCreateComponent,\n    GeneralInternalEntryDetailComponent,\n    GeneralInternalEntryUpdateComponent,\n    GeneralInternalEntryDeleteComponent\n  ]\n\n})\n\nexport class GeneralInternalModule { \n\n}\n","import { Component , EventEmitter , Input , OnInit , Output } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\n\n@Component({\n\n  'selector' : 'app-general-internal-form-input',\n\n  'templateUrl' : './general-internal-form-input.component.html',\n\n  'styleUrls' : ['./general-internal-form-input.component.css']\n\n})\n\nexport class GeneralInternalFormInputComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input('e-others') public eothers : any;\n\n  @Input() public placeholder : any;\n\n  @Input('no-edit') public noEdit : boolean;\n\n\n  get name() : FormControl {\n\n  \treturn this.entryForm.get('name') as FormControl;\n  }\n\n  get description() : FormControl {\n\n    return this.entryForm.get('description') as FormControl;\n  }\n\n  get status() : FormControl {\n\n    return this.entryForm.get('status') as FormControl;\n  }\n\n}\n","\t\t<div [formGroup] ='entryForm'>\n\n\t\t\t<ng-container *ngIf ='name'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='name' class ='form-label bold'> Name * : </label>\n\n\t\t\t\t<input type ='text' id ='name' required ='required' name ='name' [placeholder] ='placeholder?.name' formControlName ='name' class ='form-control' [readOnly] ='noEdit'>\n\n\t\t\t\t<app-general-internal-form-input-validator *ngIf ='name' [system-type] ='systemType' [name] ='name'> </app-general-internal-form-input-validator>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='description'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='description' class ='form-label bold'> Description * : </label>\n\n\t\t\t\t<textarea id ='description' name ='description' [placeholder] ='placeholder?.description' required ='required' formControlName ='description' class ='form-control form-textarea' [readOnly] ='noEdit' >\n\t\t\t\t\t\n\t\t\t\t</textarea>\n\n\t\t\t\t<app-general-internal-form-input-validator *ngIf ='description' [system-type] = 'systemType' [description] ='description'> </app-general-internal-form-input-validator>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\n\t\t<ng-content> </ng-content>\n\n\n\t\t\t<ng-container *ngIf ='status && eothers && eothers.Status && eothers.Status.length > 0'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='status' class ='form-label bold'> Status * : </label>\n\n\t\t\t\t<select name ='status' id ='status' required ='required' class ='form-control' formControlName ='status' [readOnly] ='noEdit' >\n\n\t\t\t\t\t<option [value] =''> </option> \n\n\t\t\t\t\t<option *ngFor ='let status of eothers.Status' [value] ='status._id'> {{status.word}} </option> \n\n\t\t\t\t</select>\n\n\t\t\t\t<app-general-internal-form-input-validator *ngIf ='status' [system-type] = 'systemType' [status] ='status'> </app-general-internal-form-input-validator>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\n\t\t</div>\n\n","import { ValidatorFn , AbstractControl , ValidationErrors } from '@angular/forms';\r\n\r\n\r\nexport function dynamicDataValidator(entries , name) : ValidatorFn {\r\n\r\n\treturn (control : AbstractControl) : ValidationErrors | null => {\r\n\r\n    let entry = control.value;\r\n\r\n    let data = entries.map((item) => item._id);\r\n\r\n    if (typeof data[0] == 'number') { entry = +entry; }\r\n\r\n  \treturn entry != '' && data.indexOf(entry) < 0 ? {[name] : {'value' : entry , 'name' : name} } : null;\r\n\t\r\n\t}\r\n\r\n}"],"sourceRoot":"webpack:///"}