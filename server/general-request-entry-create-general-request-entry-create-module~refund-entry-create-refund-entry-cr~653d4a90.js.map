{"version":3,"sources":["./src/app/shared/component/request-entry-create/request-entry-create.module.ts","./src/app/shared/component/request-entry-create/request-entry-create-form.service.ts","./src/app/shared/component/request-entry-create/request-entry-create-validator/request-entry-create-validator.component.ts","./src/app/shared/component/request-entry-create/request-entry-create-validator/request-entry-create-validator.component.html","./src/app/shared/component/request-entry-create/request-entry-create.service.ts","./src/app/shared/guards/is-student.guard.ts","./src/app/shared/component/request-entry-create/request-entry-create/request-entry-create.component.ts","./src/app/shared/component/request-entry-create/request-entry-create/request-entry-create.component.html"],"names":[],"mappings":"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","file":"general-request-entry-create-general-request-entry-create-module~refund-entry-create-refund-entry-cr~653d4a90.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AttachmentModule } from '../../module/attachment/attachment.module';\nimport { GuidelineModule } from '../../module/guideline/guideline.module';\nimport { GeneralModule } from '../../../general/general.module';\n\nimport { RequestEntryCreateComponent } from './request-entry-create/request-entry-create.component';\nimport { RequestEntryCreateValidatorComponent } from './request-entry-create-validator/request-entry-create-validator.component';\n\nimport { RequestEntryCreateFormService } from './request-entry-create-form.service';\nimport { RequestEntryCreateService } from './request-entry-create.service';\n\n@NgModule({\n\n  declarations: [\n\n  \tRequestEntryCreateComponent,\n  \tRequestEntryCreateValidatorComponent\n\n  ],\n\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AttachmentModule,\n    GuidelineModule,\n    GeneralModule\n  ] ,\n\n  providers : [\n\n\t\tRequestEntryCreateFormService,\n    RequestEntryCreateService\n  ],\n\n  exports : [\n\n    RequestEntryCreateComponent\n  ]\n\n})\n\nexport class RequestEntryCreateModule { \n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup , FormBuilder , Validators } from '@angular/forms';\n\n@Injectable()\n\nexport class RequestEntryCreateFormService {\n\n  constructor(private fb : FormBuilder) { \n\n  }\n\n  public entryCreateForm() : FormGroup {\n\n  \tlet form : FormGroup = this.fb.group({\n\n  \t\t'message' : ['' , {'validators' : [Validators.required , Validators.minLength(10) , Validators.maxLength(1000)] } ] \n\n  \t});\n\n  \treturn form;\n  }\n\n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeAnimation } from '../../../../animations';\n\n@Component({\n\n  'selector' : 'app-request-entry-create-validator',\n\n  'templateUrl' : './request-entry-create-validator.component.html',\n\n  'styleUrls' : ['./request-entry-create-validator.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class RequestEntryCreateValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input() public message : FormControl;\n\n}\n","<ng-container *ngIf ='message'>\n\n\t<div @fadeAnimation *ngIf ='message.invalid && (message.touched || message.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='message.errors?.required'> Message of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='message.errors?.required || message.errors?.minlength'> Message of {{systemType}} cannot be less than 10 characters in length </li>\n\t\t\t<li *ngIf ='message.errors?.required || message.errors?.maxlength'> Message of {{systemType}} cannot be greater than 1000 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>","import { Injectable } from '@angular/core';\nimport { Observable , Subject } from 'rxjs';\n\n@Injectable()\n\nexport class RequestEntryCreateService {\n\n  constructor() { \n\n  }\n\n  public isEntryCreated : Subject<boolean> = new Subject<boolean>();\n\n  public isEntryCreated$ : Observable<boolean> = this.isEntryCreated.asObservable();\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate , ActivatedRouteSnapshot , Router , RouterStateSnapshot , UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class IsStudentGuard implements CanActivate {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\t}\n\n  canActivate(\n\n    route: ActivatedRouteSnapshot,\n\n    state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    return this.verifyMemberPrivilege();\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  public verifyMemberPrivilege() : boolean | UrlTree {\n\n    let role = this.aus.userMinorDetails.role;\n\n    let allowedMembers = ['student' , 'departmentPresident' , 'facultyPresident'];\n\n    if (allowedMembers.indexOf(role) < 0) { this.router.navigate(['unauthorized']);\n\n      return false;  }\n\n    else { return true; }\n\n  }\n  \n}\n","import { Component , ElementRef , EventEmitter , Input , OnInit , Output , QueryList , ViewChildren } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { RequestEntryCreateService } from '../request-entry-create.service';\nimport { NotificationMessageService } from '../../../component/notification/notification-message.service';\nimport { AttachmentUploadComponent } from '../../../module/attachment/attachment-upload/attachment-upload.component';\n\n@Component({\n\n  'selector' : 'app-request-entry-create',\n\n  'templateUrl' : './request-entry-create.component.html',\n\n  'styleUrls' : ['./request-entry-create.component.css'] ,\n\n  'providers' : [NotificationMessageService]\n\n})\n\nexport class RequestEntryCreateComponent implements OnInit {\n\n  constructor(private recs : RequestEntryCreateService , private ns : NotificationMessageService) { \n\n  \tthis.entryCreatedOb = this.recs.isEntryCreated$\n\n  \t\t.subscribe((created : boolean) => {\n\n  \t\t\t\tif (created == false) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n \t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} is not added.`); }\n\n  \t\t\t\telse if (created == true) {\n\n \t\t\t\t\tthis.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} is added.`);\n\n          if (this.attachments != null && this.attachments.length > 0) {\n\n    \t\t\tthis.attachments.forEach((item : AttachmentUploadComponent) => {\n\n      if (item.currentlyUploading == true && item.cancelFile != null) { item.cancelFile.unsubscribe(); \n\n        item.formSubmittedUploadCancel(); } }); } } });\n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  ngOnDestroy() : void {\n\n    if(this.entryCreatedOb != null) this.entryCreatedOb.unsubscribe();\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('system-guideline') public systemGuideline : string;\n\n  @Input() public view : string;\n\n  @Input('entry-create-form') public entryCreateForm : FormGroup;\n\n\n  @Input('input-file-control') public inputFileControl : { [key : string] : string }[];\n\n  @Input('attachment-config') public attachmentConfig : { [key : string] : string };\n\n  @Input('upload-config-u') public uploadConfigU : { [key : string] : string };\n\n  @ViewChildren('attachments') attachments : QueryList<AttachmentUploadComponent>;\n\n  @ViewChildren('fileAttachment') fileInputs : QueryList<ElementRef>;\n\n  @Output() public processEntry : EventEmitter<{ [key : string] : any }> = new EventEmitter<{ [key : string] : any }>(); \n\n\n  public submission : boolean = false;\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false;\n\n  public entryCreatedOb : Subscription;\n\n  public $myFiles : { [key : string] : string | number }[] = [];\n\n\n  public createEntry(body : { [key : string] : any}) : void {\n\n    this.submission = true;\n\n    if (body != null) body.documents = [];\n\n    if (this.attachments != null && this.attachments.length > 0) {\n\n    this.attachments.forEach((item : AttachmentUploadComponent) => {\n\n      if (item.$$file != null && item.$$file.location) { body.documents.push(item.$$file); } }); }\n\n    this.isFormSubmitted = true;\n\n    this.isFormProcessing = true;\n\n    this.processEntry.emit(body);\n\n  }\n\n  public pushFile(file) {\n\n    this.$myFiles.push(file);\n  }\n\n  get message() : FormControl {\n\n  \treturn this.entryCreateForm.get('message') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryCreateForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n\n}\n","\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<ng-container *ngIf ='entryCreateForm'>\n\n<div *ngIf ='systemGuideline' id ='guidelines'>\n\n<app-request-entry-create-file-guideline [view] ='view' [system-guideline] ='systemGuideline'> </app-request-entry-create-file-guideline>\n\n</div>\n\n\t<div id ='request-form-max'>\n\n\t\t<div [formGroup] ='entryCreateForm'>\n\n\t\t\t<div *ngIf ='message' class ='form-group'>\n\n\t\t\t\t<label for ='message' class ='form-label bold'> Message * : </label>\n\n\t\t\t\t<textarea id ='message' name ='message' placeholder ='Request for a resolution' required ='required' autocomplete ='new-message'\n\n\t\t\t\tformControlName ='message' class ='form-control form-textarea'> </textarea>\n\n\t\t\t\t<app-request-entry-create-validator *ngIf ='message' [system-type] ='systemType' [message] ='message'> </app-request-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<ng-container *ngIf ='inputFileControl'>\n\n\t\t<app-attachment-upload [theControl] ='props.key' [theForm] ='entryCreateForm' [submission] = 'submission' [attachment-name] ='attachmentConfig.name' [attachment-type] ='attachmentConfig.type' \n\n\t\t[end-points] ='uploadConfigU' [myProps] ='props' [myNumber] ='i + 1' (myFile) ='pushFile($event)' *ngFor ='let props of inputFileControl; let i =index;' #attachments> </app-attachment-upload>\n\n\t</ng-container>\n\n\t\t\t<button *ngIf ='!isFormProcessing' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'\n\n\t\t\t(click) ='createEntry(entryCreateForm.value)' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</div>\n\n\t</div>\n\n</ng-container>\n"],"sourceRoot":"webpack:///"}