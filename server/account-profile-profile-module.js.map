{"version":3,"sources":["./src/app/shared/services/password-validators.service.ts","./src/app/account/profile/profile.module.ts","./src/app/shared/guards/is-admin.guard.ts","./src/app/account/profile/profile-deactivate/profile-deactivate.component.ts","./src/app/account/profile/profile-deactivate/profile-deactivate.component.html","./src/app/shared/directives/general-directives/lowercase.directive.ts","./src/app/account/profile/profile-homepage/profile-homepage.component.ts","./src/app/account/profile/profile-homepage/profile-homepage.component.html","./src/app/shared/services/verify-username.service.ts","./src/app/shared/services/email-address-validators.service.ts","./src/app/account/profile/general.ts","./src/app/shared/directives/general-directives/general-directives.module.ts","./src/app/account/profile/profile-reactivate/profile-reactivate.component.ts","./src/app/account/profile/profile-reactivate/profile-reactivate.component.html","./src/app/account/profile/profile-dashboard/profile-dashboard.component.ts","./src/app/account/profile/profile-dashboard/profile-dashboard.component.html","./src/app/account/profile/profile-input-fields/profile-input-fields.component.ts","./src/app/account/profile/profile-input-fields/profile-input-fields.component.html","./src/app/account/profile/user-other.ts","./src/app/account/profile/profile.service.ts","./src/app/account/profile/profile-update/profile-update.component.ts","./src/app/account/profile/profile-update/profile-update.component.html","./src/app/account/profile/profile-routing.module.ts","./src/app/shared/services/verify-email.service.ts","./src/app/shared/guards/authentication.guard.ts","./src/app/account/profile/profile-form.service.ts","./src/app/account/profile/profile-entry-type-dashboard/profile-entry-type-dashboard.component.ts","./src/app/account/profile/profile-entry-type-dashboard/profile-entry-type-dashboard.component.html","./src/app/account/profile/profile-validator/profile-validator.component.ts","./src/app/account/profile/profile-validator/profile-validator.component.html","./src/app/account/profile/profile-detail/profile-detail.component.ts","./src/app/account/profile/profile-detail/profile-detail.component.html","./src/app/account/profile/change-password/change-password.component.ts","./src/app/account/profile/change-password/change-password.component.html","./src/app/shared/services/dynamic-control-validator.ts","./src/app/shared/directives/general-directives/capitalize.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAO,SAAS,uBAAuB;IAErC,OAAO,CAAC,OAAyB,EAA4B,EAAE;QAE7D,IAAI,YAAY,GAAG,CAAC,WAAW,EAAG,YAAY,EAAG,OAAO,EAAG,QAAQ,CAAC,CAAC;QAErE,IAAI,KAAK,GAAG,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;QAE/B,IAAI,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEhD,OAAO,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,gBAAgB,EAAG,EAAC,OAAO,EAAG,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC,CAAC,IAAI;IAEpF,CAAC;AAEH,CAAC;AAEM,SAAS,wBAAwB;IAEvC,OAAO,CAAC,KAAiB,EAA4B,EAAE;QAEpD,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAElF,IAAI,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAErF,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAErF,IAAI,SAAS,EAAE;YAAE,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAC,kBAAkB,EAAG,IAAI,EAAG,UAAU,EAAG,IAAI,EAAG,WAAW,EAAG,IAAI,EAAG,WAAW,EAAG,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAE1L,OAAO,IAAI,CAAC;SAET;IAEL,CAAC;AAEH,CAAC;AAGM,SAAS,8BAA8B;IAE7C,OAAO,CAAC,KAAiB,EAA4B,EAAE;QAEpD,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAElF,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE/E,IAAI,CAAC,QAAQ;YAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAErF,IAAI,WAAW,EAAE;YAAE,WAAW,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,eAAe,EAAG,IAAI,EAAG,UAAU,EAAG,IAAI,EAAG,WAAW,EAAG,IAAI,EAAG,WAAW,EAAG,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAE/L,OAAO,IAAI,CAAC;SAET;IAEL,CAAC;AAEH,CAAC;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACM;AAEiC;AACzB;AACkD;AAC/C;AAGyB;AACG;AACT;AACA;AACY;AACA;AACT;AACM;AAGzC;AACS;AACwC;AACuB;;AAqCpH,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBARZ;QAEZ,yEAAkB;QAClB,gEAAc;KACb,YAdQ;YAEP,4DAAY;YACZ,kEAAmB;YACnB,qEAAa;YACb,uHAAuB;YACvB,8FAAqB;YACrB,4EAAoB;SACrB;mIAUU,aAAa,mBA/BxB,wGAAyB;QACzB,+FAAsB;QACtB,gGAAsB;QACtB,4GAA0B;QAC1B,4GAA0B;QAC1B,mGAAuB;QACvB,yGAAyB;QACzB,iHAA2B;QAC3B,qGAAwB;QACxB,wIAAkC,aAMhC,4DAAY;QACZ,kEAAmB;QACnB,qEAAa;QACb,uHAAuB;QACvB,8FAAqB;QACrB,4EAAoB;6FAWX,aAAa;cAlCzB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBAEd,wGAAyB;oBACzB,+FAAsB;oBACtB,gGAAsB;oBACtB,4GAA0B;oBAC1B,4GAA0B;oBAC1B,mGAAuB;oBACvB,yGAAyB;oBACzB,iHAA2B;oBAC3B,qGAAwB;oBACxB,wIAAkC;iBAEjC;gBAED,OAAO,EAAE;oBAEP,4DAAY;oBACZ,kEAAmB;oBACnB,qEAAa;oBACb,uHAAuB;oBACvB,8FAAqB;oBACrB,4EAAoB;iBACrB;gBAED,SAAS,EAAG;oBAEZ,yEAAkB;oBAClB,gEAAc;iBACb;aAEF;;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAWpC,MAAM,YAAY;IAExB,YAAoB,GAA2B,EAAW,MAAe;QAArD,QAAG,GAAH,GAAG,CAAwB;QAAW,WAAM,GAAN,MAAM,CAAS;IAGzE,CAAC;IAEA,WAAW,CAAC,KAA6B,EAAG,KAA0B;QAEpE,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACtC,CAAC;IAEM,qBAAqB;QAE3B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC;QAE1C,IAAI,cAAc,GAAG,CAAC,WAAW,EAAG,eAAe,EAAG,oBAAoB,CAAC,CAAC;QAE5E,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YAE9E,OAAO,KAAK,CAAC;SAAE;aAEX;YAAE,OAAO,IAAI,CAAC;SAAE;IAEtB,CAAC;IAED,gBAAgB,CAAC,KAA6B,EAAG,KAA0B;QAEzE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAG,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,OAAO;QAEL,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAEtC,CAAC;;wEAnCU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAJR,MAAM;6FAIV,YAAY;cANxB,wDAAU;eAAC;gBAEV,YAAY,EAAG,MAAM;aAEtB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAGR;AAK4C;AACH;;;;;;;;;;;;;;ICTpF,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;;IAE9B,6FAAiK;IAApC,kXAAkC;IAAE,4DAA0B;;;IAAnI,kGAAmC;;;IAE3F,yFAAyF;;;IAA9C,+EAAgB;;;IAE3D,qFAAgF;;;IAA5C,kFAAmB;;;IAMpD,0FAAiJ;;;IAAnG,0FAA2B;;;;IAEzE,6EAA2I;IAAA,mEAAO;IAAA,4DAAS;;;IAArF,oJAAuC;IAAC,yFAA0B;;;IAExI,oEAA6B;IAAA,gJAAoF;IAAA,4DAAI;;;;IARvH,yEAEC;IAAA,0EAEC;IAFiE,kWAA8C;IAE/G,uKAAiJ;IAEjJ,mIAA2J;IAE3J,wHAAqH;IAEtH,4DAAO;IAER,4DAAM;;;IAVoC,0DAAwB;IAAxB,uFAAwB;IAErC,0DAAiB;IAAjB,mFAAiB;IAEnC,0DAAwB;IAAxB,0FAAwB;IAE7B,0DAAsB;IAAtB,wFAAsB;;ADOtB,MAAM,0BAA0B;IAErC,YAAoB,GAAwB,EAAU,MAAe,EAAU,EAAmB,EAE/E,EAAwB,EAAW,KAAsB,EAAU,GAA0B;QAF5F,QAAG,GAAH,GAAG,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAU,OAAE,GAAF,EAAE,CAAiB;QAE/E,OAAE,GAAF,EAAE,CAAsB;QAAW,UAAK,GAAL,KAAK,CAAiB;QAAU,QAAG,GAAH,GAAG,CAAuB;QAIzG,eAAU,GAAY,MAAM,CAAC;QAE9B,UAAK,GAAY,GAAG,IAAI,CAAC,UAAU,qBAAqB,CAAC;QAMxD,YAAO,GAAa,KAAK;QAEzB,SAAI,GAAY,KAAK,CAAC;QAEvB,oBAAe,GAAa,KAAK;QAEhC,qBAAgB,GAAa,KAAK;IAhBzC,CAAC;IAsBD,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ;aAEhB,IAAI,CAED,gEAAS,CAAC,CAAC,MAAiB,EAAE,EAAE;YAE9B,OAAO,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAAC,CAAC,CAAC,CAEzC;aAEF,SAAS,CAAC,CAAC,MAAa,EAAE,EAAE;YAE9B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEb,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,UAAU,EAAG,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAC,EAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEzF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAAE;iBAEnB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAE9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;gBAE1C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBAEpB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEO,eAAe;QAEpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC;aAEnC,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAE9B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAElB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAE9B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,iCAAiC,IAAI,CAAC,UAAU,4BAA4B,CAAC,CAAC;aAAE;iBAEpG,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;gBAElD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,+BAA+B,IAAI,CAAC,UAAU,wBAAwB,CAAC,CAAC;gBAEhG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IAEpC,CAAC;IAEM,YAAY,CAAC,IAAI;QAEtB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAG,SAAS,CAAE,CAAC,CAAC;QAAE,CAAC,EAAG,IAAI,CAAC;IACrE,CAAC;IAED,IAAI,aAAa;QAEhB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAgB,CAAC;IAC3D,CAAC;IAED,IAAI,eAAe;QAElB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAgB,CAAC;IAC7D,CAAC;IAED,IAAI,WAAW;QAEb,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,IAAI,qBAAqB;QAEvB,OAAO,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,mBAAmB;QAErB,OAAO,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC;IAC1C,CAAC;IAEM,kBAAkB;QAEtB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IAC/B,CAAC;;oGAhIS,0BAA0B;0GAA1B,0BAA0B,uHAJvB,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;QCnB5D,oHAAmC;QAEnC,8JAA2L;QAE3L,gKAAyF;QAEzF,wJAAgF;QAE/E,sHAYM;;QApBF,2EAAY;QAES,0DAA4B;QAA5B,2FAA4B;QAE3B,0DAAc;QAAd,6EAAc;QAElB,0DAAW;QAAX,0EAAW;QAE3B,0DAAY;QAAZ,2EAAY;;6FDeN,0BAA0B;cAZtC,uDAAS;eAAC;gBAET,UAAU,EAAG,wBAAwB;gBAErC,aAAa,EAAG,qCAAqC;gBAErD,WAAW,EAAG,CAAC,oCAAoC,CAAC;gBAEpD,WAAW,EAAG,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;aAE3D;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAsE;;AAQ/D,MAAM,kBAAkB;IAE7B,YAAmB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;IAElC,CAAC;IAE6B,SAAS,CAAC,KAAc;QAAW,IAAI,CAAC,GAAG,CAAC,CAAC;QAE1E,IAAI,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAG,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAE5E,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;IAEtC,CAAC;IAED,QAAQ;IAER,CAAC;;oFAhBU,kBAAkB;kGAAlB,kBAAkB;0IAAlB,eAAW;;6FAAX,kBAAkB;cAN9B,uDAAS;eAAC;gBAET,UAAU,EAAG,gBAAgB;aAE9B;wGAQ+B,SAAS;kBAAtC,0DAAY;mBAAC,OAAO;;;;;;;;;;;;;;ACdvB;AAAA;AAAA;AAAA;AAAA;AAAmD;AAEI;;;AAchD,MAAM,wBAAwB;IAEnC;IAEA,CAAC;IAED,QAAQ;IAET,CAAC;IAEO,gBAAgB,CAAC,MAAoB;QAE1C,OAAO,MAAM,IAAI,MAAM,CAAC,kBAAkB,IAAI,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC;IACpF,CAAC;;gGAbU,wBAAwB;wGAAxB,wBAAwB;QCfrC,sEAEA;QAAA,oFAAyD;QAEzD,4DAAM;;;QAJD,sGAAmD;ySDWvC,CAAC,4DAAgB,CAAC;6FAItB,wBAAwB;cAZpC,uDAAS;eAAC;gBAET,UAAU,EAAG,sBAAsB;gBAEnC,aAAa,EAAG,mCAAmC;gBAEnD,WAAW,EAAG,CAAC,kCAAkC,CAAC;gBAElD,YAAY,EAAG,CAAC,4DAAgB,CAAC;aAElC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAuC;AAEmG;AAInI,SAAS,oBAAoB,CAAC,WAAW,EAAG,IAAI,EAAG,WAAW,EAAG,SAAS;IAE9E,OAAO,CAAC,OAAyB,EAA2E,EAAE;QAE5G,IAAI,CAAC,OAAO,CAAC,KAAK;YAAE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAE1B,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,IAAI,qBAAqB,KAAK,EAAE,CAAC;QAEzD,IAAI,OAAO,GAAG,EAAC,iBAAiB,EAAG,EAAC,OAAO,EAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAEhE,IAAI,YAAY,GAAG,IAAI,CAAC;QAErB,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAE7B,6DAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,GAAG,OAAO,QAAQ,IAAI,YAAY,EAAC,CAAC,CAAC,EAEzD,2DAAI,CAAC,CAAC,CAAC,EAEP,4DAAK,CAAC,IAAI,CAAC,EAEX,gEAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAAG,YAAY,GAAG,QAAQ,CAAC;YAEhD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC,CAAC,EAE3B,0DAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,GAAG,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAE,EAE9E,4DAAK,EAAE,EAEP,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,+CAAE,CAAC,OAAO,CAAC,CAAC,CAAE,CAAC,CAAC,CAE9C;IACT,CAAC;AAEH,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAO,SAAS,qBAAqB,CAAC,aAAsB;IAE3D,OAAO,CAAC,OAAyB,EAA4B,EAAE;QAE9D,MAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEhD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,eAAe,EAAG,EAAC,OAAO,EAAG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;IAAC,CAAC;AACzE,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAO,MAAM,cAAc,GAAY,wHAAwH,CAAC;AAEzJ,MAAM,YAAY,GAAY,0CAA0C,CAAC;;;;;;;;;;;;;ACRhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEY;AACE;;AAwBtD,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,kBAbzB;YAEP,4DAAY;SACb;mIAUU,uBAAuB,mBAlBjC,uEAAkB;QAClB,yEAAmB,aAMlB,4DAAY,aAKb,uEAAkB;QAClB,yEAAmB;6FAKT,uBAAuB;cArBnC,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBAEb,uEAAkB;oBAClB,yEAAmB;iBACnB;gBAGD,OAAO,EAAE;oBAEP,4DAAY;iBACb;gBAED,OAAO,EAAG;oBAET,uEAAkB;oBAClB,yEAAmB;iBACnB;aAEF;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAGR;AAK4C;AACH;;;;;;;;;;;;;;ICTpF,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;;IAE9B,6FAAiK;IAApC,kXAAkC;IAAE,4DAA0B;;;IAAnI,kGAAmC;;;IAE3F,yFAAyF;;;IAA9C,+EAAgB;;;IAE3D,qFAAgF;;;IAA5C,kFAAmB;;;IAMpD,0FAAiJ;;;IAAnG,0FAA2B;;;;IAEzE,6EAA2I;IAAA,mEAAO;IAAA,4DAAS;;;IAArF,oJAAuC;IAAC,yFAA0B;;;IAExI,oEAA6B;IAAA,gJAAoF;IAAA,4DAAI;;;;IARvH,yEAEC;IAAA,0EAEC;IAFiE,kWAA8C;IAE/G,uKAAiJ;IAEjJ,mIAA2J;IAE3J,wHAAqH;IAEtH,4DAAO;IAER,4DAAM;;;IAVoC,0DAAwB;IAAxB,uFAAwB;IAErC,0DAAiB;IAAjB,mFAAiB;IAEnC,0DAAwB;IAAxB,0FAAwB;IAE7B,0DAAsB;IAAtB,wFAAsB;;ADOtB,MAAM,0BAA0B;IAErC,YAAoB,GAAwB,EAAU,MAAe,EAAU,EAAmB,EAE/E,EAAwB,EAAW,KAAsB,EAAU,GAA0B;QAF5F,QAAG,GAAH,GAAG,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAU,OAAE,GAAF,EAAE,CAAiB;QAE/E,OAAE,GAAF,EAAE,CAAsB;QAAW,UAAK,GAAL,KAAK,CAAiB;QAAU,QAAG,GAAH,GAAG,CAAuB;QAIzG,eAAU,GAAY,MAAM,CAAC;QAE7B,UAAK,GAAY,GAAG,IAAI,CAAC,UAAU,qBAAqB,CAAC;QAMzD,YAAO,GAAa,KAAK;QAEzB,SAAI,GAAY,KAAK,CAAC;QAEtB,oBAAe,GAAa,KAAK;QAEjC,qBAAgB,GAAa,KAAK;IAhBzC,CAAC;IAsBD,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ;aAEhB,IAAI,CAED,gEAAS,CAAC,CAAC,MAAiB,EAAE,EAAE;YAE9B,OAAO,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAAC,CAAC,CAAC,CAEzC;aAEF,SAAS,CAAC,CAAC,MAAa,EAAE,EAAE;YAEzB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAElB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,UAAU,EAAG,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAC,EAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEzF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAAE;iBAEnB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;gBAE1C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBAEpB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEM,eAAe;QAEpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC;aAEnC,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAE9B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAElB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAE9B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,iCAAiC,IAAI,CAAC,UAAU,4BAA4B,CAAC,CAAC;aAAE;iBAEpG,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;gBAElD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,+BAA+B,IAAI,CAAC,UAAU,wBAAwB,CAAC,CAAC;gBAEhG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IAEpC,CAAC;IAEM,YAAY,CAAC,IAAI;QAEtB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAG,SAAS,CAAE,CAAC,CAAC;QAAE,CAAC,EAAG,IAAI,CAAC;IACrE,CAAC;IAED,IAAI,aAAa;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAgB,CAAC;IAC5D,CAAC;IAED,IAAI,eAAe;QAEjB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAgB,CAAC;IAC9D,CAAC;IAED,IAAI,WAAW;QAEb,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,IAAI,qBAAqB;QAEvB,OAAO,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,mBAAmB;QAErB,OAAO,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC;IAC1C,CAAC;IAEM,kBAAkB;QAEtB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IAC/B,CAAC;;oGAhIS,0BAA0B;0GAA1B,0BAA0B,uHAJvB,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;QCnB5D,oHAAmC;QAEnC,8JAA2L;QAE3L,gKAAyF;QAEzF,wJAAgF;QAE/E,sHAYM;;QApBF,2EAAY;QAES,0DAA4B;QAA5B,2FAA4B;QAE3B,0DAAc;QAAd,6EAAc;QAElB,0DAAW;QAAX,0EAAW;QAE3B,0DAAY;QAAZ,2EAAY;;6FDeN,0BAA0B;cAZtC,uDAAS;eAAC;gBAET,UAAU,EAAG,wBAAwB;gBAErC,aAAa,EAAG,qCAAqC;gBAErD,WAAW,EAAG,CAAC,oCAAoC,CAAC;gBAEpD,WAAW,EAAG,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;aAE3D;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;;;;;;;ICAnD,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;IAE9B,qFAAgF;;;IAA5C,kFAAmB;;;;IAMtD,qEAEC;IAAA,uEAAmD;IAAA,6EAAiB;IAAA,4DAAI;IAEzE,4DAAK;;IAFD,0DAA8B;IAA9B,6IAA8B;;;;;;;;;;IANnC,yEAEA;IAAA,qEAEC;IAAA,yHAIK;IAEL,qEAEC;IAAA,uEAA+C;IAAA,uDAAsB;IAAA,4DAAI;IAE1E,4DAAK;IAEL,qEAEC;IAAA,uEAA+C;IAAA,uDAAsB;IAAA,4DAAI;IAE1E,4DAAK;IAEL,qEAEC;IAAA,wEAAmD;IAAA,wDAA0B;IAAA,4DAAI;IAElF,4DAAK;IAEL,sEAEC;IAAA,wEAAmD;IAAA,wDAA0B;IAAA,4DAAI;IAElF,4DAAK;IAEL,sEAEC;IAAA,wEAA8D;IAAA,6EAAgB;IAAA,4DAAI;IAEnF,4DAAK;IAEL,sEAEC;IAAA,wEAAqD;IAAA,kFAAqB;IAAA,4DAAI;IAE/E,4DAAK;IAEL,sEAEC;IAAA,wEAAyD;IAAA,8EAAiB;IAAA,4DAAI;IAE/E,4DAAK;IAIN,4DAAK;IAEL,4DAAM;;;IApDA,0DAAgB;IAAhB,kFAAgB;IAQjB,0DAA0B;IAA1B,8IAA0B;IAAkB,0DAAsB;IAAtB,oGAAsB;IAMlE,0DAA0B;IAA1B,8IAA0B;IAAkB,0DAAsB;IAAtB,oGAAsB;IAMlE,0DAA8B;IAA9B,8IAA8B;IAAkB,0DAA0B;IAA1B,wGAA0B;IAM1E,0DAA8B;IAA9B,8IAA8B;IAAkB,0DAA0B;IAA1B,wGAA0B;IAM1E,0DAAyC;IAAzC,8IAAyC;IAMzC,0DAAgC;IAAhC,8IAAgC;IAMhC,0DAAoC;IAApC,8IAAoC;;ADvClC,MAAM,yBAAyB;IAEpC,YAAoB,GAA2B;QAA3B,QAAG,GAAH,GAAG,CAAwB;QAQxC,eAAU,GAAY,SAAS,CAAC;QAEhC,UAAK,GAAY,SAAS,CAAC;QAE3B,SAAI,GAAY,KAAK,CAAC;IAV7B,CAAC;IAED,QAAQ;IAER,CAAC;IAQD,IAAI,SAAS;QAEX,OAAO,CAAC,WAAW,EAAG,eAAe,EAAG,oBAAoB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC/F,CAAC;;kGAnBU,yBAAyB;yGAAzB,yBAAyB;QCbtC,mHAAmC;QAEnC,uJAAgF;QAEhF,uHAwDM;;QA5DD,2EAAY;QAEM,0DAAW;QAAX,0EAAW;QAE5B,0DAAiB;QAAjB,gFAAiB;;6FDSV,yBAAyB;cAVrC,uDAAS;eAAC;gBAET,UAAU,EAAG,uBAAuB;gBAEpC,aAAa,EAAG,oCAAoC;gBAEpD,WAAW,EAAG,CAAC,mCAAmC,CAAC;aAEpD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;;;;;;;ICY1D,sFAAoI;;;IAAtF,0FAA2B;;;IAR1E,yEAEC;IAAA,2EAAsD;IAAA,8EAAkB;IAAA,4DAAQ;IAEhF,sEAIA;IAAA,gLAAoI;IAErI,4DAAM;;;IAFmB,0DAAoB;IAApB,sFAAoB;;;IAY5C,uFAA0I;;;IAA1F,0FAA2B;;;IAR5E,yEAEC;IAAA,2EAAwD;IAAA,8EAAkB;IAAA,4DAAQ;IAElF,sEAIA;IAAA,iLAA0I;IAE3I,4DAAM;;;IAFmB,0DAAsB;IAAtB,wFAAsB;;;IAxB/C,wEAEA;IAAA,yEAEA;IAAA,sIAUM;IAEN,sIAUM;IAEN,4DAAM;IAEN,qEAAe;;;IA5BV,0DAAwB;IAAxB,uFAAwB;IAEvB,0DAAoB;IAApB,sFAAoB;IAYpB,0DAAsB;IAAtB,wFAAsB;;ADDrB,MAAM,2BAA2B;IAEtC;IAEA,CAAC;IAED,QAAQ;IAER,CAAC;IASD,IAAI,aAAa;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAgB,CAAC;IAC5D,CAAC;IAED,IAAI,eAAe;QAEjB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAgB,CAAC;IAC9D,CAAC;;sGAzBU,2BAA2B;2GAA3B,2BAA2B;QCfxC,yIA8Be;;QA9BA,2EAAY;;6FDed,2BAA2B;cAVvC,uDAAS;eAAC;gBAET,UAAU,EAAG,0BAA0B;gBAEvC,aAAa,EAAG,uCAAuC;gBAEvD,WAAW,EAAG,CAAC,sCAAsC,CAAC;aAEvD;sCAa8B,UAAU;kBAAtC,mDAAK;mBAAC,aAAa;YAEQ,SAAS;kBAApC,mDAAK;mBAAC,YAAY;YAEH,KAAK;kBAApB,mDAAK;;;;;;;;;;;;;;AE9BR;AAAA;AAAO,MAAM,SAAS;IAYrB,YAAY,IAAI;QAEf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAElD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAExC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IAEnD,CAAC;CAED;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACb;AACiB;AAIF;;;;AAM/C,MAAM,cAAc;IAEzB,YAAoB,IAAiB,EAA8B,SAAe,EAAW,GAA0B;QAAnG,SAAI,GAAJ,IAAI,CAAa;QAA8B,cAAS,GAAT,SAAS,CAAM;QAAW,QAAG,GAAH,GAAG,CAAuB;QAIhH,OAAE,GAAY,MAAM,CAAC;QAErB,eAAU,GAAY,MAAM,CAAC;IAJpC,CAAC;IAMM,UAAU;QAEhB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,wBAAwB,CAAC;QAErE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC;aAE9B,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAElC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,aAAa;QAEnB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,eAAe,CAAC;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC;aAE9B,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAElC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,aAAa;QAEnB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,eAAe,CAAC;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC;aAE9B,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAElC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,cAAc,CAAC,GAAY,EAAG,IAAW;QAE/C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,eAAe,CAAC;QAE5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,EAAG,IAAI,CAAC;aAErC,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAEnC,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,GAAG,OAAO,EAAC,SAAS,EAAG,IAAI,EAAG,OAAO,EAAG,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,EAEtE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,cAAc,CAAC,QAAkB;QAEvC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,wBAAwB,CAAC;QAErE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,EAAG,QAAQ,CAAC;aAEzC,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAE9B,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,GAAG,OAAO,EAAC,SAAS,EAAG,IAAI,EAAG,OAAO,EAAG,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,EAE3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,iBAAiB;QAEvB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,mBAAmB,CAAC;QAEhE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC;aAE9B,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAElC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,kBAAkB,CAAC,IAAW;QAEpC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,mBAAmB,CAAC;QAEhE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,EAAG,IAAI,CAAC;aAErC,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAE9B,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,GAAG,OAAO,EAAC,SAAS,EAAG,IAAI,EAAG,OAAO,EAAG,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,EAE3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAGM,iBAAiB;QAEvB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,mBAAmB,CAAC;QAEhE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC;aAE9B,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAElC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,kBAAkB,CAAC,IAAW;QAEpC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,mBAAmB,CAAC;QAEhE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,EAAG,IAAI,CAAC;aAErC,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAE9B,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,GAAG,OAAO,EAAC,SAAS,EAAG,IAAI,EAAG,OAAO,EAAG,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,EAE3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEM,cAAc,CAAC,IAAW;QAEhC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,iCAAiC,CAAC;QAE9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,EAAG,IAAI,CAAC;aAErC,IAAI,CAEH,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAE9B,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,GAAG,OAAO,EAAC,SAAS,EAAG,IAAI,EAAG,OAAO,EAAG,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,EAE3E,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAG,IAAI,CAAC,CAAC,CACrE;IAEJ,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAG,MAAW;QAExD,OAAO,CAAC,KAAyB,EAAkB,EAAE;YAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;YAEzE,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QAE/B,CAAC;IACL,CAAC;;4EAlLU,cAAc,kLAEuB,wDAAS;iGAF9C,cAAc,WAAd,cAAc;6FAAd,cAAc;cAF1B,wDAAU;;sBAIgC,oDAAM;uBAAC,wDAAS;;;;;;;;;;;;;;ACd3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAGR;AAED;AAK6C;AACH;;;;;;;;;;;;;;;ICXpF,qEAAqB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;IAE/B,qFAAgF;;;IAA5C,kFAAmB;;;IAEvD,yFAAyF;;;IAA9C,+EAAgB;;;;IAE3D,6FAAiK;IAApC,8WAAkC;IAAE,4DAA0B;;;IAAnI,kGAAmC;;;IAI3F,oEAA6B;IAAA,wEAAkB;IAAA,2EAAe;IAAA,4DAAI;IAAC,uDAAgB;IAAA,4DAAI;;;IAApB,0DAAgB;IAAhB,8FAAgB;;;IAc/E,uFAA2H;;;IAAhF,2FAA2B;;;IARvE,0EAEC;IAAA,4EAAmD;IAAA,2EAAe;IAAA,4DAAQ;IAE1E,uEAIA;IAAA,mKAA2H;IAE5H,4DAAM;;;IAFmB,0DAAiB;IAAjB,mFAAiB;;;IAYzC,uFAAwH;;;IAA9E,2FAA2B;;;IARtE,0EAEC;IAAA,4EAAkD;IAAA,0EAAc;IAAA,4DAAQ;IAExE,uEAIA;IAAA,mKAAwH;IAEzH,4DAAM;;;IAFmB,0DAAgB;IAAhB,kFAAgB;;;IAUxC,uFAA4G;;;IAAtE,2FAA2B;;;IANlE,0EAEC;IAAA,4EAA8C;IAAA,sEAAU;IAAA,4DAAQ;IAEhE,+EAA8I;IAAA;IAAA,4DAAW;IAEzJ,mKAA4G;IAE7G,4DAAM;;;IAFmB,0DAAY;IAAZ,+EAAY;;;IAcnC,6EAAwE;IAAA,uDAAe;IAAA,4DAAS;;;IAA9C,gFAAoB;IAAE,0DAAe;IAAf,0FAAe;;;IAIxF,uFAA4G;;;IAAtE,2FAA2B;;;IAdlE,wEAEA;IAAA,0EAEC;IAAA,4EAA8C;IAAA,sEAAU;IAAA,4DAAQ;IAEhE,6EAEC;IAAA,wEAA8B;IAE9B,8IAAgG;IAEjG,4DAAS;IAET,4KAA4G;IAE7G,4DAAM;IAEP,qEAAe;;;IARe,0DAAqB;IAArB,+FAAqB;IAIzB,0DAAY;IAAZ,+EAAY;;;IAiBnC,6EAA+E;IAAA,uDAAiB;IAAA,4DAAS;;;IAAlD,kFAAsB;IAAE,0DAAiB;IAAjB,4FAAiB;;;IAIjG,uFAAkH;;;IAA1E,2FAA2B;;;IAdpE,wEAEA;IAAA,0EAEC;IAAA,4EAAgD;IAAA,wEAAY;IAAA,4DAAQ;IAEpE,6EAEC;IAAA,wEAA8B;IAE9B,8IAAyG;IAE1G,4DAAS;IAET,4KAAkH;IAEnH,4DAAM;IAEP,qEAAe;;;IARiB,0DAAwB;IAAxB,kGAAwB;IAI9B,0DAAc;IAAd,iFAAc;;;;IAMvC,6EAA2I;IAAA,mEAAO;IAAA,4DAAS;;;IAArF,qJAAuC;IAAC,0FAA0B;;;IAExI,oEAA6B;IAAA,gJAAoF;IAAA,4DAAI;;;;;IArFxH,yEAEA;IAAA,oHAAuF;IAEtF,yEAEC;IAAA,2EAEC;IAFyH,0VAA0C;IAEnK,yHAUM;IAEN,yHAUM;IAEN,yHAQM;IAEN,0IAkBc;IAGd,0IAkBc;IAEd,+HAA2J;IAE3J,sHAAqH;IAEtH,4DAAO;IAEP,2EAEC;IAAA,sEAAK;IAAA,2EAAc;IAAA,4DAAK;IAExB,yEAAkG;IAAA,yEAAY;IAAA,4DAAI;IAEnH,4DAAM;IAER,4DAAM;IAEN,4DAAM;;;IAjGF,0DAAsB;IAAtB,wFAAsB;IAIyE,0DAAwB;IAAxB,uFAAwB;IAElH,0DAAiB;IAAjB,mFAAiB;IAYjB,0DAAgB;IAAhB,kFAAgB;IAYhB,0DAAY;IAAZ,8EAAY;IAUH,0DAAoF;IAApF,wRAAoF;IAqBpF,0DAA0F;IAA1F,iSAA0F;IAoBhG,0DAAwB;IAAxB,0FAAwB;IAE7B,0DAAsB;IAAtB,wFAAsB;IAQvB,0DAAgE;IAAhE,8IAAgE;;AD5E/D,MAAM,sBAAsB;IAEjC,YAAmB,MAAe,EAAU,EAAmB,EAAU,EAAwB,EAAW,KAAsB,EAE/G,GAA0B,EAAU,GAAwB;QAF5D,WAAM,GAAN,MAAM,CAAS;QAAU,OAAE,GAAF,EAAE,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAsB;QAAW,UAAK,GAAL,KAAK,CAAiB;QAE/G,QAAG,GAAH,GAAG,CAAuB;QAAU,QAAG,GAAH,GAAG,CAAqB;QAKxE,eAAU,GAAY,MAAM,CAAC;QAE7B,gBAAW,GAAe,IAAI,CAAC;QAEhC,UAAK,GAAY,GAAG,IAAI,CAAC,UAAU,SAAS,CAAC;QAI7C,mBAAc,GAAa,KAAK,CAAC;QAEjC,gBAAW,GAAY,kIAAkI,CAAC;QAMzJ,YAAO,GAAa,KAAK;QAIzB,qBAAgB,GAAa,KAAK;QAEnC,oBAAe,GAAa,KAAK;IAxBvC,CAAC;IA8BD,QAAQ;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAE1C,IAAI,CAAC,KAAK,CAAC,QAAQ;aAEhB,IAAI,CAED,gEAAS,CAAC,CAAC,MAAiB,EAAE,EAAE,GAAG,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CACtE;aAEF,SAAS,CAAC,CAAC,MAAgC,EAAE,EAAE;YAEjD,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEb,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,UAAU,EAAG,YAAY,EAAC,EAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAE3E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAAE;iBAEnB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAE9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;gBAEzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBAEtB,IAAI,CAAC,WAAW,GAAG,IAAI,qDAAS,CAAC,MAAM,CAAC,CAAC;gBAEzC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEvD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAEA,WAAW;QAET,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACnC,CAAC;IAEK,WAAW,CAAC,IAAW;QAE7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAE3B,IAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,EAAE;gBAEzF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,MAAM;aAAE;SAAE;QAEb,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAEhC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC;iBAExC,SAAS,CAAC,CAAC,MAAiC,EAAE,EAAE;gBAEhD,IAAI,MAAM,IAAI,IAAI,EAAE;oBAEd,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAElC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAE9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAEvB,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,uDAAuD,CAAC,CAAC;iBAAE;gBAEzF,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;oBAExC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAE7B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,iDAAiD,CAAC,CAAC;oBAEhF,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAAE;YAAC,CAAC,CAAC,CAAC;SAAE;aAEvC;YAEJ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAAE;IAElC,CAAC;IAEO,aAAa,CAAC,IAAI;QAEvB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAG,SAAS,CAAC,CAAC,CAAC;QAAE,CAAC,EAAG,IAAI,CAAC;IACpE,CAAC;IAED,IAAI,qBAAqB;QAEvB,OAAO,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,mBAAmB;QAErB,OAAO,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC;IAC1C,CAAC;IAEM,kBAAkB;QAEtB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IAC/B,CAAC;IAEF,IAAI,UAAU;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAgB,CAAC;IAC3D,CAAC;IAED,IAAI,SAAS;QAET,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAgB,CAAC;IAC1D,CAAC;IAED,IAAI,KAAK;QAEL,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAgB,CAAC;IACtD,CAAC;IAED,IAAI,OAAO;QAEP,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC;IACxD,CAAC;IAED,IAAI,KAAK;QAEL,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAgB,CAAC;IACtD,CAAC;IAED,IAAI,WAAW;QAEb,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,CAAC;;4FAhLU,sBAAsB;sGAAtB,sBAAsB,mHAJnB,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;QCrB5D,gHAAoC;QAEpC,oJAAgF;QAEhF,4JAAyF;QAEzF,0JAA2L;QAE3L,oHAmGM;;QA3GD,2EAAY;QAEM,0DAAW;QAAX,0EAAW;QAEP,0DAAc;QAAd,6EAAc;QAEf,0DAA4B;QAA5B,2FAA4B;QAEhD,0DAAY;QAAZ,2EAAY;;6FDiBL,sBAAsB;cAZlC,uDAAS;eAAC;gBAET,UAAU,EAAG,oBAAoB;gBAEjC,aAAa,EAAG,iCAAiC;gBAEjD,WAAW,EAAG,CAAC,gCAAgC,CAAC;gBAEhD,WAAW,EAAG,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;aAE3D;;;;;;;;;;;;;;AEvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEe;AACuB;AACb;AAEuB;AACN;AACA;AACY;AACA;AACT;AACM;AAC+B;;;AAE3H,MAAM,MAAM,GAAW;IAEtB,EAAC,MAAM,EAAG,EAAE;QAEX,WAAW,EAAG,qGAAwB;QAEvC,aAAa,EAAG,CAAC,uFAAmB,CAAC;QAErC,SAAS,EAAG,CAAC,uFAAmB,CAAC;QAEjC,UAAU,EAAG;YAEX,EAAC,MAAM,EAAG,EAAE;gBAEZ,kBAAkB,EAAG,CAAC,uFAAmB,CAAC;gBAEzC,UAAU,EAAG;oBAEX,EAAC,MAAM,EAAG,EAAE,EAAG,WAAW,EAAG,yGAAyB,EAAE;oBAExD,EAAE,MAAM,EAAG,YAAY,EAAG,WAAW,EAAG,wIAAkC,EAAG,aAAa,EAAG,CAAC,0EAAY,CAAC,GAAI;oBAE/G,EAAE,MAAM,EAAG,kBAAkB,EAAG,cAAc,EAAG,GAAG,EAAE,CAAC,qcAAgF,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iCAAiC,CAAC,EAAE;oBAExL,EAAE,MAAM,EAAG,cAAc,EAAG,cAAc,EAAG,GAAG,EAAE,CAAC,6aAAwE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,6BAA6B,CAAC,EAAE;oBAExK,EAAE,MAAM,EAAG,iBAAiB,EAAG,WAAW,EAAG,kGAAuB,EAAE;oBAEtE,EAAE,MAAM,EAAG,QAAQ,EAAG,WAAW,EAAG,+FAAsB,EAAE;oBAE5D,EAAE,MAAM,EAAG,QAAQ,EAAG,WAAW,EAAG,+FAAsB,EAAE;oBAE5D,EAAE,MAAM,EAAG,YAAY,EAAG,WAAW,EAAG,2GAA0B,EAAE;oBAEpE,EAAE,MAAM,EAAG,YAAY,EAAG,WAAW,EAAG,2GAA0B,EAAE;iBAErE,EAAC;SACH,EAAC;CAEH,CAAC;AAUK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBANtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAE9B,4DAAY;mIAIX,oBAAoB,uFAJrB,4DAAY;6FAIX,oBAAoB;cARhC,sDAAQ;eAAC;gBAER,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAExC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAExB;;;;;;;;;;;;;;AC3DD;AAAA;AAAA;AAAA;AAAuC;AACmG;AAMnI,SAAS,wBAAwB,CAAC,qBAAqB,EAAG,IAAI,EAAG,WAAW,EAAG,SAAS;IAE5F,OAAO,CAAC,OAAyB,EAA2E,EAAE;QAE5G,IAAI,CAAC,OAAO,CAAC,KAAK;YAAE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAE1B,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,IAAI,yBAAyB,KAAK,EAAE,CAAC;QAE7D,IAAI,OAAO,GAAG,EAAC,qBAAqB,EAAG,EAAC,OAAO,EAAG,OAAO,CAAC,KAAK,EAAE,EAAE;QAEnE,IAAI,gBAAgB,GAAG,IAAI,CAAC;QAEzB,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAE7B,6DAAM,CAAC,CAAC,YAAY,EAAE,EAAE,GAAG,OAAO,YAAY,IAAI,gBAAgB,EAAC,CAAC,CAAC,EAErE,2DAAI,CAAC,CAAC,CAAC,EAEP,4DAAK,CAAC,IAAI,CAAC,EAEX,gEAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAAG,gBAAgB,GAAG,YAAY,CAAC;YAE7D,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAAC,CAAC,CAAC,EAE1B,0DAAG,CAAC,CAAC,YAAsB,EAAE,EAAE,GAAG,OAAO,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAE,EAEtF,4DAAK,EAAE,EAEP,iEAAU,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,+CAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAE7C;IACN,CAAC;AAEN,CAAC;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAWpC,MAAM,mBAAmB;IAE/B,YAAoB,GAA2B,EAAW,MAAe;QAArD,QAAG,GAAH,GAAG,CAAwB;QAAW,WAAM,GAAN,MAAM,CAAS;IAGzE,CAAC;IAEA,WAAW,CAAC,KAA6B,EAAG,KAA0B;QAErE,MAAM,GAAG,GAAY,KAAK,CAAC,GAAG,CAAC;QAE9B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,gBAAgB,CAAC,KAA6B,EAAG,KAA0B;QAEzE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,EAAG,KAAK,CAAC,CAAC;IACzC,CAAC;IAED,OAAO,CAAC,KAAa;QAEnB,MAAM,GAAG,GAAY,KAAK,CAAC,IAAI,CAAC;QAEhC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEM,WAAW,CAAC,GAAY;QAE3B,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;aAEtC;YAAE,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,GAAG,CAAC;YAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAExC;IACL,CAAC;;sFAnCU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAJf,MAAM;6FAIV,mBAAmB;cAN/B,wDAAU;eAAC;gBAEV,YAAY,EAAG,MAAM;aAEtB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAC8C;AAClC;AAGV;AACI;AAC6B;AACQ;AACyD;AACnE;AACC;;;;;AAI/E,MAAM,kBAAkB;IAE7B,YAAmB,IAA4B,EAAU,EAAgB,EAEtD,IAAiB,EAA6B,SAAe;QAF7D,SAAI,GAAJ,IAAI,CAAwB;QAAU,OAAE,GAAF,EAAE,CAAc;QAEtD,SAAI,GAAJ,IAAI,CAAa;QAA6B,cAAS,GAAT,SAAS,CAAM;QAIzE,kBAAa,GAAS,EAAE,CAAC;QAEzB,oBAAe,GAAwC;YAE5D,iBAAiB,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAE9F,OAAO,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAErF,cAAc,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAG,+GAAqB,CAAC,qDAAY,CAAC,CAAE;YAElI,sBAAsB,EAAG,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAE7E,UAAU,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAG,4GAAuB,EAAE,CAAC;SAEpH;QAEM,mBAAc,GAAa;YAEhC,OAAO,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE1D,SAAS,EAAG,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAE7D,CAAC;QAEK,uBAAkB,GAAa;YAEpC,cAAc,EAAG,CAAC,sGAAwB,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,IAAI,EAAG,gEAAW,EAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE5G,UAAU,EAAG,CAAC,qGAAoB,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,IAAI,EAAG,gEAAW,EAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrG;IA/BD,CAAC;IAiCM,gBAAgB,CAAC,IAAa;QAEnC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,aAAa;QAElB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAEnB,YAAY,EAAG,CAAC,EAAE,EAAG,EAAC,YAAY,EAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAE;YAE7E,WAAW,EAAG,CAAC,EAAE,EAAG,EAAC,YAAY,EAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAE;YAE5E,OAAO,EAAG,CAAC,EAAE,EAAG,EAAC,YAAY,EAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAE;YAE9D,SAAS,EAAG,CAAC,EAAE,EAAG,EAAC,YAAY,EAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAE;YAE3E,OAAO,EAAG,CAAC,EAAE,EAAG,EAAC,YAAY,EAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;SAAE,CAAE,CAAC;IAE/E,CAAC;IAEM,cAAc;QAEpB,IAAI,IAAI,GAAG,IAAI,wDAAS,CAAC;YAEzB,UAAU,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAEhE,cAAc,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAEpE,kBAAkB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;SAEvE,EAAG,CAAC,6GAAwB,EAAE,EAAG,mHAA8B,EAAE,CAAC,CAAC,CAAC;QAErE,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,aAAa;QAElB,IAAI,IAAI,GAAG,IAAI,wDAAS,CAAC;YAEvB,YAAY,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAE;YAE1E,WAAW,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAE;YAEzE,eAAe,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAE;YAE1E,iBAAiB,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAE;SAAE,CAAE,CAAC;QAE3F,OAAO,IAAI,CAAC;IACd,CAAC;IAGM,eAAe,CAAC,KAAe,EAAG,IAAgB;QAEvD,IAAI,KAAK,IAAI,IAAI,EAAE;YAEnB,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;gBAEvB,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBAElC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;gBAE3C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAG,uGAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAEtJ,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;aACvE;YAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAAE;IAElC,CAAC;IAGM,cAAc,CAAC,QAAmB,EAAG,IAAgB;QAE1D,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAE7C,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAAG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAE3D,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAAC,CAAC,CAAC,CAAC;SAAE;IAC3D,CAAC;IAEM,qBAAqB,CAAC,QAAmB,EAAG,IAAgB;QAEjE,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAE7C,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAE3B,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;oBAErB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,oBAAoB,EAAE,CAAC;oBAEzC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC;iBAAE;YAAC,CAAC,CAAC,CAAC;YAEjD,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAAE;IAEtC,CAAC;IAEM,SAAS,CAAC,IAAa;QAE5B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAElC,CAAC;IAEM,iBAAiB,CAAC,OAAgB,EAAG,QAAsB;QAE9D,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,OAAO,GAAG,SAAS,CAAC,EAAG,IAAI,EAAC,EAAG,EAAC,WAAW,EAAG,IAAI,EAAC,CAAC,CAAC;QAE1E,QAAQ,CAAC,sBAAsB,CAAC,EAAC,UAAU,EAAG,IAAI,EAAG,WAAW,EAAG,IAAI,EAAC,CAAC,CAAC;IAE9E,CAAC;;oFApJU,kBAAkB,6bAIkB,wDAAS;qGAJ7C,kBAAkB,WAAlB,kBAAkB;6FAAlB,kBAAkB;cAF9B,wDAAU;;sBAM+B,oDAAM;uBAAC,wDAAS;;;;;;;;;;;;;;ACnB1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;;;;;;;ICAnD,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;IAE9B,qFAAgF;;;IAA5C,kFAAmB;;;;;;;IAEvD,yEAEA;IAAA,qEAEC;IAAA,qEAEC;IAAA,uEAAgD;IAAA,0EAAc;IAAA,4DAAI;IAEnE,4DAAK;IAEL,qEAEC;IAAA,uEAAyD;IAAA,mFAAuB;IAAA,4DAAI;IAErF,4DAAK;IAEL,qEAEC;IAAA,uEAAyD;IAAA,oFAAuB;IAAA,4DAAI;IAErF,4DAAK;IAEL,sEAEC;IAAA,wEAAgD;IAAA,2EAAc;IAAA,4DAAI;IAEnE,4DAAK;IAEN,4DAAK;IAEL,4DAAM;;IAxBD,0DAA2B;IAA3B,6IAA2B;IAM3B,0DAAoC;IAApC,6IAAoC;IAMpC,0DAAoC;IAApC,6IAAoC;IAMpC,0DAA2B;IAA3B,6IAA2B;;ADfzB,MAAM,kCAAkC;IAE7C,YAAoB,GAA2B;QAA3B,QAAG,GAAH,GAAG,CAAwB;QAQxC,eAAU,GAAY,SAAS,CAAC;QAEhC,UAAK,GAAY,SAAS,CAAC;QAE3B,SAAI,GAAY,KAAK,CAAC;IAV7B,CAAC;IAED,QAAQ;IAER,CAAC;IAQD,IAAI,SAAS;QAEX,OAAO,CAAC,WAAW,EAAG,eAAe,EAAG,oBAAoB,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC/F,CAAC;;oHAnBU,kCAAkC;kHAAlC,kCAAkC;QCb/C,4HAAmC;QAEnC,gKAAgF;QAEhF,+HA8BM;;QAlCD,2EAAY;QAEM,0DAAW;QAAX,0EAAW;QAE5B,0DAAiB;QAAjB,gFAAiB;;6FDSV,kCAAkC;cAV9C,uDAAS;eAAC;gBAET,UAAU,EAAG,kCAAkC;gBAE/C,aAAa,EAAG,+CAA+C;gBAE/D,WAAW,EAAG,CAAC,8CAA8C,CAAC;aAE/D;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAA2D;;;;ICMxD,qEAA0C;IAAA,uDAAoE;IAAA,4DAAK;;;IAAzE,0DAAoE;IAApE,mJAAoE;;;IAC9G,qEAA0E;IAAA,uDAAwE;IAAA,4DAAK;;;IAA7E,0DAAwE;IAAxE,uJAAwE;;;IAClJ,qEAA0E;IAAA,uDAA4E;IAAA,4DAAK;;;IAAjF,0DAA4E;IAA5E,2JAA4E;;;IANxJ,yEAEC;IAAA,qEAEC;IAAA,wIAAmH;IACnH,wIAAuJ;IACvJ,wIAA2J;IAE5J,4DAAK;IAEN,4DAAM;;;IANC,0DAAkC;IAAlC,6IAAkC;IAClC,0DAAkE;IAAlE,iOAAkE;IAClE,0DAAkE;IAAlE,iOAAkE;;;IAR1E,wEAEC;IAAA,oIAUM;IAEP,qEAAe;;;IAZR,0DAAqE;IAArE,qJAAqE;;;IAqBzE,qEAAyC;IAAA,uDAAmE;IAAA,4DAAK;;;IAAxE,0DAAmE;IAAnE,kJAAmE;;;IAC5G,qEAAwE;IAAA,uDAAuE;IAAA,4DAAK;;;IAA5E,0DAAuE;IAAvE,sJAAuE;;;IAC/I,qEAAwE;IAAA,uDAA2E;IAAA,4DAAK;;;IAAhF,0DAA2E;IAA3E,0JAA2E;;;IANrJ,yEAEC;IAAA,qEAEC;IAAA,wIAAiH;IACjH,wIAAoJ;IACpJ,wIAAwJ;IAEzJ,4DAAK;IAEN,4DAAM;;;IANC,0DAAiC;IAAjC,6IAAiC;IACjC,0DAAgE;IAAhE,iOAAgE;IAChE,0DAAgE;IAAhE,iOAAgE;;;IARxE,wEAEC;IAAA,oIAUM;IAEP,qEAAe;;;IAZR,0DAAkE;IAAlE,kJAAkE;;;IAqBtE,qEAA6C;IAAA,uDAAuE;IAAA,4DAAK;;;IAA5E,0DAAuE;IAAvE,sJAAuE;;;IACpH,qEAAgF;IAAA,uDAA2E;IAAA,4DAAK;;;IAAhF,0DAA2E;IAA3E,0JAA2E;;;IAC3J,qEAAgF;IAAA,uDAA+E;IAAA,4DAAK;;;IAApF,0DAA+E;IAA/E,8JAA+E;;;IAC/J,qEAAoF;IAAA,oJAAwF;IAAA,4DAAK;;;IACjL,qEAAyD;IAAA,uLAA2H;IAAA,4DAAK;;;IAR3L,yEAEC;IAAA,qEAEC;IAAA,wIAAyH;IACzH,wIAAgK;IAChK,wIAAoK;IACpK,wIAAiL;IACjL,wIAAyL;IAE1L,4DAAK;IAEN,4DAAM;;;IARC,0DAAqC;IAArC,qJAAqC;IACrC,0DAAwE;IAAxE,iPAAwE;IACxE,0DAAwE;IAAxE,iPAAwE;IACxE,0DAA4E;IAA5E,qPAA4E;IAC5E,0DAAiD;IAAjD,iKAAiD;;;IAVzD,wEAEC;IAAA,oIAYM;IAEP,qEAAe;;;IAdR,0DAA8E;IAA9E,8JAA8E;;;IAuBlF,qEAAqC;IAAA,uDAA+D;IAAA,4DAAK;;;IAApE,0DAA+D;IAA/D,8IAA+D;;;IACpG,qEAA0D;IAAA,uDAAgE;IAAA,4DAAK;;;IAArE,0DAAgE;IAAhE,+IAAgE;;;IAC1H,qEAAkC;IAAA,uDAAmG;IAAA,4DAAK;;;IAAxG,0DAAmG;IAAnG,kLAAmG;;;IANvI,yEAEC;IAAA,qEAEC;IAAA,wIAAyG;IACzG,wIAA+H;IAC/H,wIAA0I;IAE3I,4DAAK;IAEN,4DAAM;;;IANC,0DAA6B;IAA7B,qIAA6B;IAC7B,0DAAkD;IAAlD,2MAAkD;IAClD,0DAA0B;IAA1B,kIAA0B;;;IARlC,wEAEC;IAAA,oIAUM;IAEP,qEAAe;;;IAZR,0DAAsD;IAAtD,sIAAsD;;;IAqB1D,qEAAuC;IAAA,uDAAiE;IAAA,4DAAK;;;IAAtE,0DAAiE;IAAjE,gJAAiE;;;IACxG,qEAA8D;IAAA,uDAAkE;IAAA,4DAAK;;;IAAvE,0DAAkE;IAAlE,iJAAkE;;;IAChI,qEAAsC;IAAA,uDAAqG;IAAA,4DAAK;;;IAA1G,0DAAqG;IAArG,oLAAqG;;;IAN7I,yEAEC;IAAA,qEAEC;IAAA,wIAA6G;IAC7G,wIAAqI;IACrI,wIAAgJ;IAEjJ,4DAAK;IAEN,4DAAM;;;IANC,0DAA+B;IAA/B,yIAA+B;IAC/B,0DAAsD;IAAtD,mNAAsD;IACtD,0DAA8B;IAA9B,wIAA8B;;;IARtC,wEAEC;IAAA,oIAUM;IAEP,qEAAe;;;IAZR,0DAA4D;IAA5D,4IAA4D;;;IAqBhE,qEAA+C;IAAA,uDAAyE;IAAA,4DAAK;;;IAA9E,0DAAyE;IAAzE,wJAAyE;;;IACxH,qEAAoF;IAAA,uDAA6E;IAAA,4DAAK;;;IAAlF,0DAA6E;IAA7E,4JAA6E;;;IACjK,qEAAoF;IAAA,uDAAiF;IAAA,4DAAK;;;IAAtF,0DAAiF;IAAjF,gKAAiF;;;IANvK,yEAEC;IAAA,qEAEC;IAAA,wIAA6H;IAC7H,wIAAsK;IACtK,wIAA0K;IAE3K,4DAAK;IAEN,4DAAM;;;IANC,0DAAuC;IAAvC,yJAAuC;IACvC,0DAA4E;IAA5E,yPAA4E;IAC5E,0DAA4E;IAA5E,yPAA4E;;;IARpF,wEAEC;IAAA,oIAUM;IAEP,qEAAe;;;IAZR,0DAAoF;IAApF,oKAAoF;;;IAqBxF,qEAAwC;IAAA,uDAAkE;IAAA,4DAAK;;;IAAvE,0DAAkE;IAAlE,iJAAkE;;;IAC1G,qEAAsE;IAAA,uDAAsE;IAAA,4DAAK;;;IAA3E,0DAAsE;IAAtE,qJAAsE;;;IAC5I,qEAAsE;IAAA,uDAA0E;IAAA,4DAAK;;;IAA/E,0DAA0E;IAA1E,yJAA0E;;;IAChJ,qEAA8C;IAAA,uDAAuH;IAAA,4DAAK;;;IAA5H,0DAAuH;IAAvH,sMAAuH;;;IAPvK,yEAEC;IAAA,qEAEC;IAAA,wIAA+G;IAC/G,wIAAiJ;IACjJ,wIAAqJ;IACrJ,wIAA0K;IAE3K,4DAAK;IAEN,4DAAM;;;IAPC,0DAAgC;IAAhC,2IAAgC;IAChC,0DAA8D;IAA9D,6NAA8D;IAC9D,0DAA8D;IAA9D,6NAA8D;IAC9D,0DAAsC;IAAtC,iJAAsC;;;IAT9C,wEAEC;IAAA,oIAWM;IAEP,qEAAe;;;IAbR,0DAA+D;IAA/D,+IAA+D;;;IAqBnE,qEAA4C;IAAA,uDAAsE;IAAA,4DAAK;;;IAA3E,0DAAsE;IAAtE,qJAAsE;;;IAClH,qEAA8E;IAAA,uDAA0E;IAAA,4DAAK;;;IAA/E,0DAA0E;IAA1E,yJAA0E;;;IACxJ,qEAA8E;IAAA,uDAA8E;IAAA,4DAAK;;;IAAnF,0DAA8E;IAA9E,6JAA8E;;;IAC5J,qEAAkD;IAAA,uDAA+H;IAAA,4DAAK;;;IAApI,0DAA+H;IAA/H,8MAA+H;;;IACjL,qEAAiD;IAAA,uDAAuE;IAAA,4DAAK;;;IAA5E,0DAAuE;IAAvE,sJAAuE;;;IAR1H,yEAEC;IAAA,qEAEC;IAAA,wIAAuH;IACvH,wIAA6J;IAC7J,wIAAiK;IACjK,wIAAsL;IACtL,wIAA6H;IAE9H,4DAAK;IAEN,4DAAM;;;IARC,0DAAoC;IAApC,mJAAoC;IACpC,0DAAsE;IAAtE,6OAAsE;IACtE,0DAAsE;IAAtE,6OAAsE;IACtE,0DAA0C;IAA1C,yJAA0C;IAC1C,0DAAyC;IAAzC,wJAAyC;;;IAVjD,wEAEC;IAAA,oIAYM;IAEP,qEAAe;;;IAdR,0DAA2E;IAA3E,2JAA2E;;;IAsB/E,qEAAgD;IAAA,uDAA+E;IAAA,4DAAK;;;IAApF,0DAA+E;IAA/E,8JAA+E;;;IAC/H,qEAAsF;IAAA,uDAAmF;IAAA,4DAAK;;;IAAxF,0DAAmF;IAAnF,kKAAmF;;;IACzK,qEAAsF;IAAA,uDAAuF;IAAA,4DAAK;;;IAA5F,0DAAuF;IAAvF,sKAAuF;;;IAC7K,qEAAsD;IAAA,uDAA4I;IAAA,4DAAK;;;IAAjJ,0DAA4I;IAA5I,2NAA4I;;;IAClM,qEAAwD;IAAA,uDAA0F;IAAA,4DAAK;;;IAA/F,0DAA0F;IAA1F,mLAA0F;;;IARpJ,yEAEC;IAAA,qEAEC;IAAA,wIAAoI;IACpI,wIAA8K;IAC9K,wIAAkL;IAClL,wIAAuM;IACvM,wIAAuJ;IAExJ,4DAAK;IAEN,4DAAM;;;IARC,0DAAwC;IAAxC,2JAAwC;IACxC,0DAA8E;IAA9E,6PAA8E;IAC9E,0DAA8E;IAA9E,6PAA8E;IAC9E,0DAA8C;IAA9C,iKAA8C;IAC9C,0DAAgD;IAAhD,mKAAgD;;;IAVxD,wEAEC;IAAA,oIAYM;IAEP,qEAAe;;;IAdR,0DAAuF;IAAvF,uKAAuF;;ADhIvF,MAAM,yBAAyB;IAEpC;IAEA,CAAC;IAED,QAAQ;IAER,CAAC;;kGARU,yBAAyB;yGAAzB,yBAAyB;QCbtC,uIAce;QAGf,uIAce;QAGf,uIAgBe;QAGf,uIAce;QAGf,uIAce;QAGf,uIAce;QAGf,uIAee;QAEf,uIAgBe;QAEf,uIAgBe;;QA3JA,gFAAiB;QAiBjB,0DAAgB;QAAhB,+EAAgB;QAiBhB,0DAAoB;QAApB,mFAAoB;QAmBpB,0DAAY;QAAZ,2EAAY;QAiBZ,0DAAc;QAAd,6EAAc;QAiBd,0DAAsB;QAAtB,qFAAsB;QAiBtB,0DAAe;QAAf,8EAAe;QAiBf,0DAAmB;QAAnB,kFAAmB;QAkBnB,0DAAuB;QAAvB,sFAAuB;;6FD9HzB,yBAAyB;cAVrC,uDAAS;eAAC;gBAET,UAAU,EAAG,uBAAuB;gBAEpC,aAAa,EAAG,oCAAoC;gBAEpD,WAAW,EAAG,CAAC,mCAAmC,CAAC;aAEpD;sCAYuB,UAAU;kBAA/B,mDAAK;mBAAC,aAAa;YAEC,UAAU;kBAA9B,mDAAK;mBAAC,YAAY;YAEC,SAAS;kBAA5B,mDAAK;mBAAC,WAAW;YAEM,aAAa;kBAApC,mDAAK;mBAAC,eAAe;YAEI,eAAe;kBAAxC,mDAAK;mBAAC,iBAAiB;YAED,YAAY;kBAAlC,mDAAK;mBAAC,cAAc;YAEM,gBAAgB;kBAA1C,mDAAK;mBAAC,kBAAkB;YAEhB,OAAO;kBAAf,mDAAK;YAEG,KAAK;kBAAb,mDAAK;YAEG,QAAQ;kBAAhB,mDAAK;;;;;;;;;;;;;;AEzCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAMR;AAC4C;;;;;;;;;ICPvF,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;IAE9B,qFAAgF;;;IAA5C,kFAAmB;;;IAEvD,yFAAyF;;;IAA9C,+EAAgB;;;IAiBxD,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,4EAAgB;IAAA,4DAAK;IAC7C,yEAA2B;IAAA,qEAAmF;IAAA,4DAAK;IAEpH,4DAAK;IAEN,qEAAe;;;IAJmB,0DAA+B;IAA/B,iMAA+B;IAAC,6FAAqB;IAAC,oFAAqB;;;IAM5G,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,4EAAgB;IAAA,4DAAK;IAC7C,qEAAK;IAAA,uDAAe;IAAA,4DAAK;IAE1B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAe;IAAf,0HAAe;;;IAMrB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,yEAAa;IAAA,4DAAK;IAC1C,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAEjC,4DAAK;IAEN,qEAAe;;;IAJR,0DAAsB;IAAtB,iIAAsB;;;IAM5B,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,wEAAY;IAAA,4DAAK;IACzC,qEAAK;IAAA,uDAAqB;IAAA,4DAAK;IAEhC,4DAAK;IAEN,qEAAe;;;IAJR,0DAAqB;IAArB,gIAAqB;;;IAM3B,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,4EAAgB;IAAA,4DAAK;IAC7C,qEAAK;IAAA,uDAAyB;IAAA,4DAAK;IAEpC,4DAAK;IAEN,qEAAe;;;IAJR,0DAAyB;IAAzB,oIAAyB;;;IAM/B,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,yEAAa;IAAA,4DAAK;IAC1C,qEAAK;IAAA,uDAAsB;IAAA,4DAAK;IAEjC,4DAAK;IAEN,qEAAe;;;IAJR,0DAAsB;IAAtB,iIAAsB;;;IAM5B,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,sEAAU;IAAA,4DAAK;IACvC,qEAAK;IAAA,uDAAmB;IAAA,4DAAK;IAE9B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAmB;IAAnB,gIAAmB;;;IAMzB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,oEAAQ;IAAA,4DAAK;IACrC,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAE5B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAiB;IAAjB,8HAAiB;;;IAMvB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,mEAAO;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAE3B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAgB;IAAhB,6HAAgB;;;IAMtB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,sEAAU;IAAA,4DAAK;IACvC,qEAAK;IAAA,uDAAmB;IAAA,4DAAK;IAE9B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAmB;IAAnB,gIAAmB;;;IAMzB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,mEAAO;IAAA,4DAAK;IACpC,qEAAK;IAAA,uDAAgB;IAAA,4DAAK;IAE3B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAgB;IAAhB,6HAAgB;;;IAMtB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,qEAAS;IAAA,4DAAK;IACtC,qEAAK;IAAA,uDAAkB;IAAA,4DAAK;IAE7B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAkB;IAAlB,+HAAkB;;;IAMxB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,mFAAuB;IAAA,4DAAK;IACpD,qEAAK;IAAA,uDAAgC;IAAA,4DAAK;IAE3C,4DAAK;IAEN,qEAAe;;;IAJR,0DAAgC;IAAhC,6IAAgC;;;IAMtC,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,uFAA2B;IAAA,4DAAK;IACxD,qEAAK;IAAA,uDAAoC;IAAA,4DAAK;IAE/C,4DAAK;IAEN,qEAAe;;;IAJR,0DAAoC;IAApC,iJAAoC;;;IAM1C,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,sFAA0B;IAAA,4DAAK;IACvD,qEAAK;IAAA,uDAA2B;IAAA,4DAAK;IAEtC,4DAAK;IAEN,qEAAe;;;IAJR,0DAA2B;IAA3B,wIAA2B;;;IAMjC,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,yEAAa;IAAA,4DAAK;IAC1C,qEAAK;IAAA,uDAA0C;;IAAA,4DAAK;IAErD,4DAAK;IAEN,qEAAe;;;IAJR,0DAA0C;IAA1C,gNAA0C;;;IAMhD,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,oEAAQ;IAAA,4DAAK;IACrC,qEAAK;IAAA,uDAAiB;IAAA,4DAAK;IAE5B,4DAAK;IAEN,qEAAe;;;IAJR,0DAAiB;IAAjB,8HAAiB;;;IAMvB,wEAEA;IAAA,qEAEC;IAAA,yEAAwB;IAAA,wEAAY;IAAA,4DAAK;IACzC,yEAAyB;IAAA,qEAA+E;IAAA,4DAAK;IAE9G,4DAAK;IAEN,qEAAe;;;IAJiB,0DAA2B;IAA3B,+LAA2B;IAAC,8FAAqB;IAAC,qFAAqB;;;;IA/MzG,yEAEC;IAAA,yEAEA;IAAA,wEAEC;IAAA,2EAEC;IAAA,oEACA;IAAA,oEAED;IAAA,4DAAW;IAEX,wEAEC;IAAA,0IASc;IAEd,0IASc;IAEd,0IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEd,4IASc;IAEf,4DAAQ;IAET,4DAAQ;IAEN,2EAEC;IAAA,sEAAK;IAAA,2EAAc;IAAA,4DAAK;IAEzB,yEAAkG;IAAA,4EAAe;IAAA,4DAAI;IAEtH,4DAAM;IAER,4DAAM;IAEN,4DAAM;;;IApNY,0DAA2B;IAA3B,0HAA2B;IAW3B,0DAAiB;IAAjB,gHAAiB;IAWjB,0DAAwB;IAAxB,uHAAwB;IAWxB,0DAAuB;IAAvB,sHAAuB;IAWvB,0DAA2B;IAA3B,0HAA2B;IAW3B,0DAAwB;IAAxB,uHAAwB;IAWxB,0DAAqB;IAArB,oHAAqB;IAWrB,0DAAmB;IAAnB,kHAAmB;IAWnB,0DAAkB;IAAlB,iHAAkB;IAWlB,0DAAqB;IAArB,oHAAqB;IAWrB,0DAAkB;IAAlB,iHAAkB;IAWlB,0DAAoB;IAApB,mHAAoB;IAWpB,0DAAkC;IAAlC,iIAAkC;IAWlC,0DAAsC;IAAtC,qIAAsC;IAWtC,0DAA6B;IAA7B,4HAA6B;IAW7B,0DAAwB;IAAxB,uHAAwB;IAWxB,0DAAmB;IAAnB,kHAAmB;IAWnB,0DAAuB;IAAvB,sHAAuB;IAmBnC,0DAAgE;IAAhE,8IAAgE;;AD9M/D,MAAM,sBAAsB;IAEjC,YAAoB,KAAsB,EAAW,GAA0B,EAAW,EAAmB;QAAzF,UAAK,GAAL,KAAK,CAAiB;QAAW,QAAG,GAAH,GAAG,CAAuB;QAAW,OAAE,GAAF,EAAE,CAAiB;QAItG,eAAU,GAAY,MAAM,CAAC;QAE7B,UAAK,GAAY,GAAG,IAAI,CAAC,UAAU,SAAS,CAAC;QAE7C,SAAI,GAAY,KAAK,CAAC;QAMtB,YAAO,GAAa,KAAK;IAZhC,CAAC;IAcD,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ;aAEhB,IAAI,CAED,gEAAS,CAAC,CAAC,MAAiB,EAAE,EAAE,GAAG,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CACtE;aAEF,SAAS,CAAC,CAAC,MAAa,EAAE,EAAE;YAE9B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEb,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,UAAU,EAAG,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAC,EAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEzF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAAE;iBAEnB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEvB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IACpC,CAAC;;4FAtCU,sBAAsB;sGAAtB,sBAAsB,mHAJnB,CAAC,4FAAoB,CAAC;QCjBtC,gHAAmC;QAEnC,oJAAgF;QAEhF,4JAAyF;QAEzF,oHAmOM;;QAzOD,2EAAY;QAEM,0DAAW;QAAX,0EAAW;QAEP,0DAAc;QAAd,6EAAc;QAEnC,0DAAY;QAAZ,2EAAY;;6FDeL,sBAAsB;cAZlC,uDAAS;eAAC;gBAET,UAAU,EAAG,oBAAoB;gBAEjC,aAAa,EAAG,iCAAiC;gBAEjD,WAAW,EAAG,CAAC,gCAAgC,CAAC;gBAEhD,WAAW,EAAG,CAAC,4FAAoB,CAAC;aAErC;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAGR;AAM4C;AACH;;;;;;;;;;;;;;;ICVpF,qEAAoB;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,wFAAU;;;;IAE9B,6FAAgK;IAAnC,+WAAkC;IAAC,4DAA0B;;;IAAlI,kGAAmC;;;IAE3F,yFAAyF;;;IAA9C,+EAAgB;;;IAE3D,qFAAgF;;;IAA5C,kFAAmB;;;IAYpD,uFAAsH;;;IAA7E,2FAA2B;;;IANrE,0EAEC;IAAA,4EAAiD;IAAA,+EAAmB;IAAA,4DAAQ;IAE5E,uEAEA;IAAA,oKAAsH;IAEvH,4DAAM;;;IAFmB,0DAAe;IAAf,iFAAe;;;IAUvC,uFAAmI;;;IAArF,2FAA2B;;;IAN1E,0EAEC;IAAA,4EAAqD;IAAA,2EAAe;IAAA,4DAAQ;IAE5E,uEAEA;IAAA,oKAAmI;IAEpI,4DAAM;;;IAFoB,0DAAmB;IAAnB,qFAAmB;;;IAU5C,uFAA8I;;;IAA5F,2FAA2B;;;IAN9E,0EAEC;IAAA,4EAAyD;IAAA,+EAAmB;IAAA,4DAAQ;IAEpF,uEAEA;IAAA,oKAA8I;IAE/I,4DAAM;;;IAFoB,0DAAuB;IAAvB,yFAAuB;;;;IAIhD,6EAA2I;IAAA,mEAAO;IAAA,4DAAS;;;IAArF,qJAAuC;IAAC,0FAA0B;;;IAExI,oEAA6B;IAAA,gJAAoF;IAAA,4DAAI;;;;IApCxH,yEAEA;IAAA,0EAEE;IAFiE,8VAA6C;IAE9G,0HAQM;IAEN,0HAQM;IAEN,0HAQM;IAEL,gIAA2J;IAE3J,qHAAqH;IAEvH,4DAAO;IAER,4DAAM;;;IAtCoC,0DAAwB;IAAxB,uFAAwB;IAE1D,0DAAe;IAAf,iFAAe;IAUf,0DAAmB;IAAnB,qFAAmB;IAUnB,0DAAuB;IAAvB,yFAAuB;IAUnB,0DAAwB;IAAxB,0FAAwB;IAE7B,0DAAsB;IAAtB,wFAAsB;;ADpBtB,MAAM,uBAAuB;IAElC,YAAoB,GAAwB,EAAU,MAAe,EAAU,EAAmB,EAE/E,EAAwB,EAAW,IAA4B,EAAW,KAAsB,EAEhG,GAA0B;QAJzB,QAAG,GAAH,GAAG,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAS;QAAU,OAAE,GAAF,EAAE,CAAiB;QAE/E,OAAE,GAAF,EAAE,CAAsB;QAAW,SAAI,GAAJ,IAAI,CAAwB;QAAW,UAAK,GAAL,KAAK,CAAiB;QAEhG,QAAG,GAAH,GAAG,CAAuB;QAItC,eAAU,GAAY,MAAM,CAAC;QAE7B,UAAK,GAAY,iBAAiB,CAAC;QAEnC,SAAI,GAAY,IAAI,CAAC;QAMrB,YAAO,GAAa,KAAK;QAEzB,oBAAe,GAAa,KAAK;QAEjC,qBAAgB,GAAa,KAAK;IAhBzC,CAAC;IAsBD,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ;aAEhB,IAAI,CAED,gEAAS,CAAC,CAAC,MAAiB,EAAE,EAAE;YAE9B,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;QAAC,CAAC,CAAC,CAClC;aAEF,SAAS,CAAC,CAAC,MAAa,EAAE,EAAE;YAEzB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAElB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,UAAU,EAAG,GAAG,IAAI,CAAC,UAAU,QAAQ,EAAC,EAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAEzF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aAAE;iBAEnB,IAAI,MAAM,IAAI,IAAI,EAAE;gBAEvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;gBAEvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IAE3D,CAAC;IAED,WAAW;QAET,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACnC,CAAC;IAEM,cAAc,CAAC,IAA+B;QAEnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAE7B,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC;aAEzB,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAE9B,IAAI,MAAM,IAAI,IAAI,EAAE;gBAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAEjD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAE9B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,iCAAiC,IAAI,CAAC,UAAU,wBAAwB,CAAC,CAAC;aAAE;iBAEhG,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;gBAElD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAE7B,IAAI,CAAC,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,+BAA+B,IAAI,CAAC,UAAU,oBAAoB,CAAC,CAAC;gBAE5F,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAAE;QAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAEM,YAAY,CAAC,IAAI;QAEtB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YAEnC,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAAE,CAAC,EAAG,IAAI,CAAC;IAC3D,CAAC;IAED,IAAI,QAAQ;QAEV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAgB,CAAC;IACvD,CAAC;IAED,IAAI,YAAY;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAgB,CAAC;IAC1D,CAAC;IAED,IAAI,gBAAgB;QAElB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAgB,CAAC;IAC/D,CAAC;IAED,IAAI,WAAW;QAEd,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI,qBAAqB;QAEvB,OAAO,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,mBAAmB;QAErB,OAAO,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC;IAC1C,CAAC;IAEM,kBAAkB;QAEtB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC;IAChC,CAAC;;8FAzIU,uBAAuB;uGAAvB,uBAAuB,oHAJpB,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;QCpB5D,iHAAmC;QAEnC,2JAA0L;QAE1L,6JAAyF;QAEzF,qJAAgF;QAEhF,mHAwCM;;QAhDD,2EAAY;QAES,0DAA4B;QAA5B,2FAA4B;QAE3B,0DAAc;QAAd,6EAAc;QAElB,0DAAW;QAAX,0EAAW;QAE5B,0DAAW;QAAX,0EAAW;;6FDgBJ,uBAAuB;cAZnC,uDAAS;eAAC;gBAET,UAAU,EAAG,qBAAqB;gBAElC,aAAa,EAAG,kCAAkC;gBAElD,WAAW,EAAG,CAAC,iCAAiC,CAAC;gBAEjD,WAAW,EAAG,CAAC,yFAAmB,EAAG,4FAAoB,CAAC;aAE3D;;;;;;;;;;;;;;AEnBD;AAAA;AAAO,SAAS,oBAAoB,CAAC,OAAO,EAAG,IAAI;IAElD,OAAO,CAAC,OAAyB,EAA4B,EAAE;QAE5D,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAE1B,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;YAAE,KAAK,GAAG,CAAC,KAAK,CAAC;SAAE;QAEpD,OAAO,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,EAAG,EAAC,OAAO,EAAG,KAAK,EAAG,MAAM,EAAG,IAAI,EAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAEvG,CAAC;AAEF,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAsE;;AAQ/D,MAAM,mBAAmB;IAE9B,YAAmB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;IAElC,CAAC;IAE6B,UAAU,CAAC,KAAc;QAAW,IAAI,CAAC,GAAG,CAAC,CAAC;QAE3E,IAAI,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;aAEpE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEhG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;IAEtC,CAAC;IAED,QAAQ;IAER,CAAC;;sFAlBU,mBAAmB;mGAAnB,mBAAmB;2IAAnB,gBAAY;;6FAAZ,mBAAmB;cAN/B,uDAAS;eAAC;gBAET,UAAU,EAAG,iBAAiB;aAE/B;wGAQ+B,UAAU;kBAAvC,0DAAY;mBAAC,OAAO","file":"account-profile-profile-module.js","sourcesContent":["import { AbstractControl , FormGroup , ValidatorFn , ValidationErrors } from '@angular/forms';\n\nexport function simplePasswordValidator() : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n    \n    let passwordList = ['123456789' , '1234567890' , '12345' , 'abcdef'];\n\n    let entry = '' + control.value;\n\n    let passwordValid = passwordList.indexOf(entry);\n\n    return passwordValid > -1 ? {'simplePassword' : {'value' : control.value} } : null\n  \n  }\n\n}\n\nexport function confirmPasswordValidator() {\n\n return (group : FormGroup) : ValidationErrors | null => {\n\n    let password = group.get('new_password') ? group.get('new_password').value : null;\n\n    let cPassword = group.get('confirm_password') ? group.get('confirm_password') : null;\n\n    if (!password) password = group.get('password') ? group.get('password').value : null;\n\n    if (cPassword) { cPassword.value != password ? cPassword.setErrors({'confirm_password' : true , 'required' : true , 'minLength' : true , 'maxLength' : true}) : cPassword.setErrors(null); \n\n    return null;\n\n      }\n  \n  }\n\n}\n\n\nexport function currentAndNewPasswordValidator() {\n\n return (group : FormGroup) : ValidationErrors | null => {\n\n    let password = group.get('new_password') ? group.get('new_password').value : null;\n\n    let newPassword = group.get('new_password') ? group.get('new_password') : null;\n\n    if (!password) password = group.get('password') ? group.get('password').value : null;\n\n    if (newPassword) { newPassword.value == password ? newPassword.setErrors({'currentAndNew' : true , 'required' : true , 'minLength' : true , 'maxLength' : true}) : newPassword.setErrors(null); \n\n    return null;\n\n      }\n  \n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { GeneralServicesModule } from '../../shared/services/general-services.module';\nimport { GeneralModule } from '../../general/general.module';\nimport { GeneralDirectivesModule } from '../../shared/directives/general-directives/general-directives.module';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\n\nimport { ProfileHomepageComponent } from './profile-homepage/profile-homepage.component';\nimport { ProfileDashboardComponent } from './profile-dashboard/profile-dashboard.component';\nimport { ProfileDetailComponent } from './profile-detail/profile-detail.component';\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\nimport { ProfileDeactivateComponent } from './profile-deactivate/profile-deactivate.component';\nimport { ProfileReactivateComponent } from './profile-reactivate/profile-reactivate.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ProfileValidatorComponent } from './profile-validator/profile-validator.component';\n\n\nimport { ProfileService } from './profile.service';\nimport { ProfileFormService } from './profile-form.service';\nimport { ProfileInputFieldsComponent } from './profile-input-fields/profile-input-fields.component';\nimport { ProfileEntryTypeDashboardComponent } from './profile-entry-type-dashboard/profile-entry-type-dashboard.component';\n\n\n@NgModule({\n  declarations: [\n\n  ProfileDashboardComponent, \n  ProfileDetailComponent, \n  ProfileUpdateComponent, \n  ProfileDeactivateComponent, \n  ProfileReactivateComponent, \n  ChangePasswordComponent, \n  ProfileValidatorComponent,\n  ProfileInputFieldsComponent,\n  ProfileHomepageComponent,\n  ProfileEntryTypeDashboardComponent,\n\n  ],\n\n  imports: [\n\n    CommonModule,\n    ReactiveFormsModule,\n    GeneralModule,\n    GeneralDirectivesModule,\n    GeneralServicesModule,\n    ProfileRoutingModule,\n  ] ,\n\n  providers : [\n\n  ProfileFormService,\n  ProfileService,\n  ]\n\n})\n\nexport class ProfileModule { \n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate , CanActivateChild , CanLoad , ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree , Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class IsAdminGuard implements CanActivate {\n\t\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\n\t}\n\n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    return this.verifyMemberPrivilege();\n  }\n\n  public verifyMemberPrivilege() : boolean | UrlTree {\n\n  \tlet role = this.aus.userMinorDetails.role;\n\n  \tlet allowedMembers = ['moderator' , 'administrator' , 'superAdministrator'];\n\n  \tif (allowedMembers.indexOf(role) < 0) { this.router.navigate(['unauthorized']);\n\n  \t\treturn false;\t}\n\n  \telse { return true; }\n\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad() : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.verifyMemberPrivilege();\n\n  }\n  \n}\n","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap , Router } from '@angular/router';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../user';\nimport { General } from '../general';\nimport { ProfileService } from '../profile.service';\nimport { ProfileFormService } from '../profile-form.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n\n  'selector' : 'app-profile-deactivate',\n\n  'templateUrl' : './profile-deactivate.component.html',\n\n  'styleUrls' : ['./profile-deactivate.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class ProfileDeactivateComponent implements OnInit {\n\n  constructor(private pfs : ProfileFormService , public router : Router , public ps : ProfileService , \n\n              public ns : NotificationService , private route : ActivatedRoute , public ems : ErrorMessagesService) { \n\n  }\n\n  public systemType : string = 'User';\n\n\tpublic title : string = `${this.systemType} Account Deactivate`;\n\n\tpublic entry : User;\n\n\tpublic error : General;\n\n  public isError : boolean = false\n\n  public view : string = 'udp';\n\n\tpublic isFormSubmitted : boolean = false\n\n  public isFormProcessing : boolean = false\n\n  public entryForm : FormGroup;\n\n  public entryChangesT : any;\n\n  ngOnInit(): void {\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            return this.ps.deactivateProfile(); })\n        \n        )\n\n      .subscribe((result : User) => {\n\n\t\t\t\t\tif (result == null) {\n\n            this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); \n\n            this.isError = true; }\n\n          else if (result != null) {\n\n\t\t\t\t\tthis.entryForm = this.pfs.statusProfile();\n\n\t\t\t\t\tthis.entry = result;\n\n\t\t\t\t\tthis.entryForm.patchValue(this.entry); } });\n\t}\n\n  public deactivateEntry() : void {\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.ps.deactivateProfile$(this.entry)\n      \n      .subscribe((result : General) => { \n\n        if (result == null) {\n\n          this.isFormSubmitted = false;\n\n          this.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} Entry is not deactivated.`); }\n\n         else if (result != null && result.updated == true) {\n\n          this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} Entry is deactivated.`);\n\n          this.entryChanges({}); } });\n\n  }\n\n  public entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['account' , 'profile' ]);  } , 5000) \n  }\n\n  get email_address() : FormControl {\n\n  \treturn this.entryForm.get('email_address') as FormControl;\n  }\n\n  get identity_number() : FormControl {\n\n  \treturn this.entryForm.get('identity_number') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n   }\n\n}","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n\t<div *ngIf ='entry' id ='entry-detail'>\n\n\t\t<form method ='post' autocomplete ='off' [formGroup] ='entryForm' (ngSubmit) ='deactivateEntry(entryForm.value)'>\n\n\t\t\t<app-profile-input-fields *ngIf ='systemType' [system-type] ='systemType' [entry] ='entry' [entry-form] ='entryForm'> </app-profile-input-fields>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</form>\n\n\t</div>\n","import { Directive , ElementRef , HostListener } from '@angular/core';\n\n@Directive({\n  \n  'selector' : '[appLowercase]'\n\n})\n\nexport class LowercaseDirective {\n\n  constructor(public el : ElementRef) { \n\n  }\n\n  @HostListener('input') public lowercase(field : string) : void { let i = 0;\n\n  \tlet $entry = this.el.nativeElement.value.replace(/\\s+/g , '').toLowerCase();\n\n  \tthis.el.nativeElement.value = $entry;\n\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","import { Component , OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-profile-homepage',\n\n  'templateUrl' : './profile-homepage.component.html',\n\n  'styleUrls' : ['./profile-homepage.component.css'] ,\n\n  'animations' : [slideInAnimation]\n\n})\n\nexport class ProfileHomepageComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n\t}\n\n  public getAnimationData(outlet: RouterOutlet) {\n\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n\n\n}\n","\n<div [@routeAnimation] ='getAnimationData(routerOutlet)'>\n\n<router-outlet #routerOutlet ='outlet' > </router-outlet>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Observable , of } from 'rxjs';\nimport { General } from '../interfaces/general';\nimport { catchError , filter , first , map , switchMap , delay , tap , take , debounceTime , distinctUntilChanged } from 'rxjs/operators';\nimport { AsyncValidator , AsyncValidatorFn , AbstractControl , ValidationErrors } from '@angular/forms'\n\n\nexport function usernameVerification(authService , http , httpHeaders , apiConfig) : AsyncValidatorFn {\n\n   return (control : AbstractControl) : Promise<ValidationErrors | null> | Observable<ValidationErrors | null> =>  {\n\n     if (!control.dirty) return of(null);\n\n    let entry = control.value;\n\n    let link = `${apiConfig.host}/confirm/username/${entry}`;\n\n    let $result = {'UsernameService' : {'value' : control.value } }; \n\n    let lastUsername = null;\n\n       return control.valueChanges.pipe(\n\n          filter((username) => { return username != lastUsername }) ,\n\n          take(1) ,\n\n          delay(3000) ,\n\n          switchMap((username) => { lastUsername = username;\n\n            return http.get(link); }) ,\n\n          map((username : General) => { return username.isAvailable ? null : $result } ) ,\n\n          first() ,\n\n          catchError((error) => { return of($result);  })\n                \n          )\n  }\n\n}","import { AbstractControl , ValidationErrors , ValidatorFn } from '@angular/forms';\n\nexport function emailAddressValidator(email_address : RegExp) : ValidatorFn {\n\n\treturn (control : AbstractControl) : ValidationErrors | null => {\n\n\t\tconst entry = email_address.test(control.value);\n\n\t\treturn !entry ? {'email_address' : {'value' : control.value } } : null }\n\t}\n","export interface General {\r\n\r\n\t[key : string] : any;\r\n\r\n}\r\n\r\nexport const forbiddenNames : RegExp = /moderator|administrator|superAdministrator|hod|deanstudent|departmentPresident|facultyPresident|bursar|lecturer|staff/i;\r\n\r\nexport const emailAddress : RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LowercaseDirective } from './lowercase.directive';\nimport { CapitalizeDirective } from './capitalize.directive';\n\n\n@NgModule({\n  declarations: [\n\n  \tLowercaseDirective,\n  \tCapitalizeDirective\n  ],\n\n\n  imports: [\n    \n    CommonModule\n  ],\n\n  exports : [\n\n  \tLowercaseDirective,\n  \tCapitalizeDirective\n  ]\n\n})\n\nexport class GeneralDirectivesModule { \n\n}\n","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap , Router } from '@angular/router';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../user';\nimport { General } from '../general';\nimport { ProfileService } from '../profile.service';\nimport { ProfileFormService } from '../profile-form.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n\n  'selector' : 'app-profile-reactivate',\n\n  'templateUrl' : './profile-reactivate.component.html',\n\n  'styleUrls' : ['./profile-reactivate.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class ProfileReactivateComponent implements OnInit {\n\n  constructor(private pfs : ProfileFormService , public router : Router , public ps : ProfileService , \n\n              public ns : NotificationService , private route : ActivatedRoute , public ems : ErrorMessagesService) { \n\n  }\n\n  public systemType : string = 'User';\n\n  public title : string = `${this.systemType} Account Reactivate`;\n\n  public entry : User;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  public view : string = 'urp';\n\n  public isFormSubmitted : boolean = false\n\n  public isFormProcessing : boolean = false\n\n  public entryForm : FormGroup;\n\n  public entryChangesT : any;\n\n  ngOnInit(): void {\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            return this.ps.reactivateProfile(); })\n        \n        )\n\n      .subscribe((result : User) => {\n\n          if (result == null) {\n\n            this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); \n\n            this.isError = true; }\n\n          else if (result != null) {\n\n          this.entryForm = this.pfs.statusProfile();\n\n          this.entry = result;\n\n          this.entryForm.patchValue(this.entry); } });\n  }\n\n  public reactivateEntry() : void {\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.ps.reactivateProfile$(this.entry)\n      \n      .subscribe((result : General) => { \n\n        if (result == null) {\n\n          this.isFormSubmitted = false;\n\n          this.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} Entry is not reactivated.`); }\n\n         else if (result != null && result.updated == true) {\n\n          this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} Entry is reactivated.`);\n\n          this.entryChanges({}); } });\n\n  }\n\n  public entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['account' , 'profile' ]);  } , 5000) \n  }\n\n  get email_address() : FormControl {\n\n    return this.entryForm.get('email_address') as FormControl;\n  }\n\n  get identity_number() : FormControl {\n\n    return this.entryForm.get('identity_number') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n   }\n\n}","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n\t<div *ngIf ='entry' id ='entry-detail'>\n\n\t\t<form method ='post' autocomplete ='off' [formGroup] ='entryForm' (ngSubmit) ='reactivateEntry(entryForm.value)'>\n\n\t\t\t<app-profile-input-fields *ngIf ='systemType' [system-type] ='systemType' [entry] ='entry' [entry-form] ='entryForm'> </app-profile-input-fields>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</form>\n\n\t</div>\n","import { Component , OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\n@Component({\n\n  'selector' : 'app-profile-dashboard',\n\n  'templateUrl' : './profile-dashboard.component.html',\n\n  'styleUrls' : ['./profile-dashboard.component.css']\n\n})\n\nexport class ProfileDashboardComponent implements OnInit {\n\n  constructor(private aus : AuthenticationService) { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  public systemType : string = 'Profile';\n\n  public title : string = 'Profile';\n\n  public view : string = 'upr';\n\n  get canManage() : boolean {\n\n    return ['moderator' , 'administrator' , 'superAdministrator'].indexOf(this.aus.userRole) > 0; \n  }\n\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<div *ngIf ='systemType' id ='dashboard'>\n\n<ul>\n\n\t<li *ngIf ='canManage'>\n\n\t\t<a [routerLink] ='[\"entry-type\"]' class ='center'> Manage Internals </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"detail\"]' class ='center'> {{systemType}} Detail </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"update\"]' class ='center'> {{systemType}} Update </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"deactivate\"]' class ='center'> {{systemType}} Deactivate </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"reactivate\"]' class ='center'> {{systemType}} Reactivate </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[ \"\" , \"change-password\"]' class ='center'> Change Password </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"update-photo\"]' class ='center'> Update Display Photo </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"update-signature\"]' class ='center'> Update Signature </a>\n\n\t</li>\n\n\n\n</ul>\n\n</div>","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { User } from '../user';\n\n\n@Component({\n\n  'selector' : 'app-profile-input-fields',\n\n  'templateUrl' : './profile-input-fields.component.html',\n\n  'styleUrls' : ['./profile-input-fields.component.css']\n\n})\n\nexport class ProfileInputFieldsComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n\n  }\n\n\n  @Input('system-type') public systemType : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input() public entry : User;\n\n  get email_address() : FormControl {\n\n    return this.entryForm.get('email_address') as FormControl;\n  }\n\n  get identity_number() : FormControl {\n\n    return this.entryForm.get('identity_number') as FormControl;\n  }\n\n}\n","<ng-container *ngIf ='entry'>\n\n<div [formGroup] ='entryForm'>\n\n<div *ngIf ='email_address' class ='form-group'>\n\n\t<label for ='email_address' class ='form-label bold'> Email Address * : </label>\n\n\t<input type ='text' id ='email_address' name ='email_address' placeholder ='david@example.com' required ='required' autocomplete ='new-email_address' formControlName ='email_address' \n\n\tclass ='form-control' readonly ='readonly' appLowercase ='appLowercase' >\n\n\t<app-profile-validator *ngIf ='email_address' [system-type] ='systemType' [email-address] ='email_address'> </app-profile-validator>\n\n</div>\n\n<div *ngIf ='identity_number' class ='form-group'>\n\n\t<label for ='identity_number' class ='form-label bold'> Identity Number : </label>\n\n\t<input type ='text' id ='identity_number' name ='identity_number' placeholder ='M1503186' autocomplete ='new-identity_number' formControlName ='identity_number' readonly ='readonly'\n\n\tclass ='form-control'>\n\n\t<app-profile-validator *ngIf ='identity_number' [system-type] ='systemType' [identity-number] ='identity_number'> </app-profile-validator>\n\n</div>\n\n</div>\n\n</ng-container>","export class UserOther {\r\n\r\n\tpublic faculties : string[];\r\n\r\n\tpublic departments : string[];\r\n\r\n\tpublic units : string[];\r\n\r\n\tpublic levels : string[];\r\n\r\n\tpublic countries : string[];\r\n\r\n\tconstructor(data) {\r\n\r\n\t\tthis.faculties = data.Faculty ? data.Faculty : [];\r\n\r\n\t\tthis.departments = data.Department ? data.Department : [];\r\n\r\n\t\tthis.units = data.Unit ? data.Unit : [];\r\n\r\n\t\tthis.levels = data.Level ? data.Level : [];\r\n\r\n\t\tthis.countries = data.Country ? data.Country : [];\r\n\r\n\t}\r\n\r\n}\r\n","import { Injectable , Inject } from '@angular/core';\nimport { Observable , of } from 'rxjs';\nimport { catchError , map , tap } from 'rxjs/operators';\nimport { HttpClient , HttpErrorResponse } from '@angular/common/http';\nimport { User } from './user';\nimport { General } from './general';\nimport { Api_Token , Api } from '../../configuration';\nimport { ErrorMessagesService } from '../../shared/services/error-messages.service';\n\n\n@Injectable()\n\nexport class ProfileService {\n\n  constructor(private http : HttpClient , @Inject(Api_Token) private apiConfig : Api , private ems : ErrorMessagesService) { \n\n  }\n\n  public sa : string = 'user';\n\n  public systemType : string = 'User';\n\n  public entryExist() : Observable<User> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/change-password`;\n\n  \treturn this.http.get<User>(link)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public profileDetail() : Observable<User> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/detail`;\n\n  \treturn this.http.get<User>(link)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public profileUpdate() : Observable<User> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/update`;\n\n  \treturn this.http.get<User>(link)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public profileUpdate$(idx : number , user : User) : Observable<any> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/update`;\n\n  \treturn this.http.put<User>(link , user)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n\t\t\t\t\tmap((entry : User) => { return {'updated' : true , '$data' : entry}; }) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public changePassword(passcode : General) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/change-password`;\n\n  \treturn this.http.put<User>(link , passcode)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n          map((entry : User) => { return {'updated' : true , '$data' : entry}; }) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public deactivateProfile() : Observable<User> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/deactivate`;\n\n  \treturn this.http.get<User>(link)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public deactivateProfile$(user : User) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/deactivate`;\n\n  \treturn this.http.put<User>(link , user)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n          map((entry : User) => { return {'updated' : true , '$data' : entry}; }) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n\n  public reactivateProfile() : Observable<User> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/reactivate`;\n\n  \treturn this.http.get<User>(link)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public reactivateProfile$(user : User) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/reactivate`;\n\n  \treturn this.http.put<User>(link , user)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n          map((entry : User) => { return {'updated' : true , '$data' : entry}; }) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  public $updateDisplay(user : User) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/${this.sa}/entry/change-signature-picture`;\n\n  \treturn this.http.put<User>(link , user)\n\n  \t\t.pipe(\n\n  \t\t\t\ttap((value) => console.log(value)) ,\n\n          map((entry : User) => { return {'updated' : true , '$data' : entry}; }) ,\n\n  \t\t\t\tcatchError(this.handleError<User>(`${this.systemType} Entry` , null))\n  \t\t\t)\n\n  }\n\n  private handleError<T>(operation = 'operation' , result? : T) {\n\n      return (error : HttpErrorResponse) : Observable<T> => { this.ems.message = error;\n\n            \t\treturn of(result as T);\n\n      }\n  }\n}\n","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { FormBuilder , FormGroup , FormControl } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../user';\nimport { UserOther } from '../user-other';\nimport { General } from '../general';\nimport { ProfileService } from '../profile.service';\nimport { ProfileFormService } from '../profile-form.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n\n  'selector' : 'app-profile-update',\n\n  'templateUrl' : './profile-update.component.html',\n\n  'styleUrls' : ['./profile-update.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class ProfileUpdateComponent implements OnInit {\n\n  constructor(public router : Router , public ps : ProfileService , public ns : NotificationService , private route : ActivatedRoute ,\n\n              public ems : ErrorMessagesService , public pfs : ProfileFormService ) {\n\n\n  }\n\n  public systemType : string = 'User';\n\n  public entryOthers : UserOther = null;\n\n\tpublic title : string = `${this.systemType} Update`;\n\n\tpublic entry : User;\n\n\tpublic isFormModified : boolean = false;\n\n\tpublic formMessage : string = 'Form will not be submitted and entry will not be updated if data are unchanged since when they were retrieved from the database.';\n\n\tprivate eidx : number;\n\n\tpublic error : General;\n\n  public isError : boolean = false\n\n  public view : string;\n\n  public isFormProcessing : boolean = false\n\n\tpublic isFormSubmitted : boolean = false\n\n  public entryForm : FormGroup;\n\n  public entryChangesT : any;\n\n  ngOnInit() : void {\n\n    this.entryForm = this.pfs.profileUpdate();\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { return this.ps.profileUpdate(); })        \n        )\n\n      .subscribe((result : { [key : string] : any}) => {\n\n\t\t\t\t\tif (result == null) { \n\n            this.error = Object.assign({'resource' : 'User Entry'} , this.ems.message); \n\n            this.isError = true; }\n\n          else if (result != null) {\n\n\t\t\t\t\tthis.entry = result.User;\n\n\t\t\t\t\tthis.eidx = this.entry._id;\n\n          this.entryOthers = new UserOther(result);\n\n          this.pfs.createPermanent(result , this.entryForm);\n\n\t\t\t\t\tthis.entryForm.patchValue(this.entry); } });\n\t}\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\t\n\tpublic updateEntry(body : User) : void {\n\n\t\tthis.error = null;\n\n    this.isError = false;\n\n\t\tthis.isFormProcessing = true;\n\n\t\tfor (let chrs in this.entry) { \n\n\t\t\t\tif((this.entry[chrs] != body[chrs] && (body[chrs] !== null && body[chrs] !== undefined))) { \n\n\t\t\t\t\tthis.isFormModified = true;\n\n\t\t\t\t\tbreak;\t}\t}\n\n\t\tif (this.isFormModified == true) {\n\n\t\t\tthis.isFormSubmitted = true;\n\n  \t\tthis.ps.profileUpdate$(this.eidx , body)\n\n\t\t\t.subscribe((result : { [key : string] : any }) => {\n\n\t\t\t\tif (result == null) {\n\n          this.isFormSubmitted = false;\n\n\t\t\t\t\tthis.isFormProcessing = false;\n\n\t\t\t\t\tthis.isFormModified = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification('Operation is unsuccessful and profile is not updated.'); }\n\n\t\t\t\tif (result != null && result.updated == true) {\n\n          this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification('Operation is successful and profile is updated.');\n\n\t\t\t\t\tthis.$entryChanges(result.$data);\t}\t});\t}\n\n\t\telse { \n\n\t\t\tthis.isFormProcessing = false; }\n\n\t}\n\n  public $entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['account' , 'profile']);  } , 5000) \n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n   }\n\n  get first_name() : FormControl {\n\n      return this.entryForm.get('first_name') as FormControl;\n  }\n\n  get last_name() : FormControl {\n\n      return this.entryForm.get('last_name') as FormControl;\n  }\n\n  get about() : FormControl {\n\n      return this.entryForm.get('about') as FormControl;\n  }\n\n  get country() : FormControl {\n\n      return this.entryForm.get('country') as FormControl;\n  }\n\n  get level() : FormControl {\n\n      return this.entryForm.get('level') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n}\n","<h2 *ngIf ='title' > {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<div *ngIf ='entry' id ='entry-update'>\n\n<p *ngIf ='!isFormModified'> <b class ='bold'> Form Message : </b> {{formMessage}} </p>\n\n\t<div id ='entry-detail'>\n\n\t\t<form action ='' method ='post' enctype ='application/x-www-form-urlencoded' autocomplete ='off' [formGroup] ='entryForm' (ngSubmit) ='updateEntry(entryForm.value)'>\n\n\t\t\t<div *ngIf ='first_name' class ='form-group'>\n\n\t\t\t\t<label for ='first_name' class ='form-label bold'> First Name * : </label>\n\n\t\t\t\t<input type ='text' id ='first_name' name ='first_name' placeholder ='Yusuf' required ='required' autocomplete ='new-first_name' formControlName ='first_name' class ='form-control' \n\n\t\t\t\tappCapitalize ='appCapitalize'>\n\n\t\t\t\t<app-profile-validator *ngIf ='first_name' [system-type] ='systemType' [first-name] ='first_name'> </app-profile-validator>\n\n\t\t\t</div>\n\n\t\t\t<div *ngIf ='last_name' class ='form-group'>\n\n\t\t\t\t<label for ='last_name' class ='form-label bold'> Last Name * : </label>\n\n\t\t\t\t<input type ='text' id ='last_name' name ='last_name' placeholder ='Musa' required ='required' autocomplete ='new-last_name' formControlName ='last_name' class ='form-control'\n\n\t\t\t\tappCapitalize ='appCapitalize'>\n\n\t\t\t\t<app-profile-validator *ngIf ='last_name' [system-type] ='systemType' [last-name] ='last_name'> </app-profile-validator>\n\n\t\t\t</div>\n\n\t\t\t<div *ngIf ='about' class ='form-group'>\n\n\t\t\t\t<label for ='about' class ='form-label bold'> About * : </label>\n\n\t\t\t\t<textarea id ='about' name ='about' placeholder ='I am me' required ='required' formControlName ='about' class ='form-control form-textarea'> </textarea>\n\n\t\t\t\t<app-profile-validator *ngIf ='about' [system-type] ='systemType' [about] ='about'> </app-profile-validator>\n\n\t\t\t</div>\n\t\t\n\t\t\t<ng-container *ngIf ='entryOthers && entryOthers?.levels != null && entryOthers?.levels?.length > 0'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='level' class ='form-label bold'> Level * : </label>\n\n\t\t\t\t<select name ='level' id ='level' class ='form-control' required ='required' formControlName ='level'>\n\n\t\t\t\t\t<option [value] =''> </option> \n\n\t\t\t\t\t<option *ngFor ='let level of entryOthers.levels' [value] ='level._id'> {{level.name}} </option> \n\n\t\t\t\t</select>\n\n\t\t\t\t<app-profile-validator *ngIf ='level' [system-type] ='systemType' [level] ='level'> </app-profile-validator>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t\n\t\t\t<ng-container *ngIf ='entryOthers && entryOthers?.countries != null && entryOthers?.countries?.length > 0'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='country' class ='form-label bold'> Country * : </label>\n\n\t\t\t\t<select name ='country' id ='country' class ='form-control' required ='required' formControlName ='country'>\n\n\t\t\t\t\t<option [value] =''> </option> \n\n\t\t\t\t\t<option *ngFor ='let country of entryOthers.countries' [value] ='country._id'> {{country.name}} </option> \n\n\t\t\t\t</select>\n\n\t\t\t\t<app-profile-validator *ngIf ='country' [system-type] ='systemType' [country] ='country'> </app-profile-validator>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</form>\n\n\t\t<div class ='entry-options'>\n\n\t\t\t<h3> Entry Options </h3>\n\n\t\t\t<a [routerLink] ='[\"../../../\" , \"account\" , \"profile\" , \"detail\"]' class ='entry-option center'> User Detail </a>\n\n\t\t</div>\n\n</div>\n\n</div>","import { NgModule } from '@angular/core';\n\nimport { Routes , RouterModule } from '@angular/router';\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\nimport { IsAdminGuard } from '../../shared/guards/is-admin.guard';\n\nimport { ProfileHomepageComponent } from './profile-homepage/profile-homepage.component';\nimport { ProfileUpdateComponent } from './profile-update/profile-update.component';\nimport { ProfileDetailComponent } from './profile-detail/profile-detail.component';\nimport { ProfileDeactivateComponent } from './profile-deactivate/profile-deactivate.component';\nimport { ProfileReactivateComponent } from './profile-reactivate/profile-reactivate.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ProfileDashboardComponent } from './profile-dashboard/profile-dashboard.component';\nimport { ProfileEntryTypeDashboardComponent } from './profile-entry-type-dashboard/profile-entry-type-dashboard.component';\n\nconst routes: Routes = [\n\n\t{'path' : '' ,\n\n\t\t'component' : ProfileHomepageComponent ,\n\n\t'canActivate' : [AuthenticationGuard] ,\n\n\t'canLoad' : [AuthenticationGuard] ,\n\n\t'children' : [\n\n\t\t\t{'path' : '' ,\n\n\t\t\t'canActivateChild' : [AuthenticationGuard] ,\n\n\t\t\t\t'children' : [\n\n\t\t\t\t\t\t{'path' : '' , 'component' : ProfileDashboardComponent } ,\n\n\t\t\t\t\t\t{ 'path' : 'entry-type' , 'component' : ProfileEntryTypeDashboardComponent , 'canActivate' : [IsAdminGuard] , } ,\n\n\t\t\t\t\t\t{ 'path' : 'update-signature' , 'loadChildren' : () => import('./profile-entry-update-signature/profile-entry-update-signature.module').then(m => m.ProfileEntryUpdateSignatureModule) } ,\n\n\t\t\t\t\t\t{ 'path' : 'update-photo' , 'loadChildren' : () => import('./profile-entry-update-photo/profile-entry-update-photo.module').then(m => m.ProfileEntryUpdatePhotoModule) } ,\n\n\t\t\t\t\t\t{ 'path' : 'change-password' , 'component' : ChangePasswordComponent } ,\n\n\t\t\t\t\t\t{ 'path' : 'update' , 'component' : ProfileUpdateComponent } ,\n\n\t\t\t\t\t\t{ 'path' : 'detail' , 'component' : ProfileDetailComponent } ,\n\n\t\t\t\t\t\t{ 'path' : 'deactivate' , 'component' : ProfileDeactivateComponent } ,\n\n\t\t\t\t\t\t{ 'path' : 'reactivate' , 'component' : ProfileReactivateComponent } ,\n\n\t\t\t\t]}\n\t\t]}\n\n];\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule]\n\n})\n\nexport class ProfileRoutingModule { }\n","import { Injectable , Inject } from '@angular/core';\r\nimport { Api , Api_Token } from '../../configuration';\r\nimport { General } from '../interfaces/general';\r\nimport { Observable , of } from 'rxjs';\r\nimport { catchError , filter , first , map , switchMap , delay , tap , take , debounceTime , distinctUntilChanged } from 'rxjs/operators';\r\nimport { AsyncValidator , AsyncValidatorFn , AbstractControl , ValidationErrors } from '@angular/forms'\r\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\r\nimport { AuthenticationService } from '../../authentication/authentication.service';\r\n\r\n\r\nexport function emailAddressVerification(authenticationService , http , httpHeaders , apiConfig) : AsyncValidatorFn {\r\n\r\n   return (control : AbstractControl) : Promise<ValidationErrors | null> | Observable<ValidationErrors | null> =>  {\r\n\r\n     if (!control.dirty) return of(null);\r\n\r\n    let entry = control.value;\r\n\r\n    let link = `${apiConfig.host}/confirm/emailaddress/${entry}`;\r\n\r\n    let $result = {'EmailAddressService' : {'value' : control.value } }\r\n\r\n    let lastEmailAddress = null;\r\n\r\n       return control.valueChanges.pipe(\r\n\r\n          filter((emailAddress) => { return emailAddress != lastEmailAddress }) ,\r\n\r\n          take(1) ,\r\n\r\n          delay(3000) ,\r\n\r\n          switchMap((emailAddress) => { lastEmailAddress = emailAddress;\r\n\r\n           return http.get(link); }) ,\r\n\r\n          map((emailAddress : General) => { return emailAddress.isAvailable ? null : $result } ) ,\r\n\r\n          first() ,\r\n\r\n          catchError((error) => { return of($result); })\r\n                \r\n          )\r\n     }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot , CanActivate , CanActivateChild , CanLoad , Route , RouterStateSnapshot , UrlTree , Router } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class AuthenticationGuard implements CanActivate , CanActivateChild , CanLoad {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\n\t}\n  \n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n  \tconst url : string = state.url;\n\n    return this.verifyLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route : Route) {\n\n    const url : string = route.path;\n\n    return this.verifyLogin(url);\n  }\n\n  public verifyLogin(url : string) : boolean | UrlTree {\n\n      if (this.aus.isLoggedIn()) { return true; }\n\n      else { this.aus.redirectAddress = url;\n\n        return this.router.parseUrl('/signin');\n\n      }\n  }\n  \n}\n","import { Injectable , Inject } from '@angular/core';\nimport { Validators , ValidatorFn , FormBuilder , FormGroup , FormControl } from '@angular/forms';\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { General } from './general';\nimport { Api , Api_Token } from '../../configuration';\nimport { emailAddress , forbiddenNames } from './general';\nimport { dynamicDataValidator } from '../../shared/services/dynamic-control-validator';\nimport { emailAddressValidator } from '../../shared/services/email-address-validators.service';\nimport { simplePasswordValidator , confirmPasswordValidator , currentAndNewPasswordValidator } from '../../shared/services/password-validators.service';\nimport { usernameVerification } from '../../shared/services/verify-username.service';\nimport { emailAddressVerification } from '../../shared/services/verify-email.service';\n\n@Injectable()\n\nexport class ProfileFormService {\n\n  constructor(public auth : AuthenticationService , public fb : FormBuilder ,\n\n              public http : HttpClient , @Inject(Api_Token) public apiConfig : Api ) { \n\n  }\n\n  public permanentData : any = {};\n\n  public entryValidators : { [key : string] : ValidatorFn[] } = {\n\n    'first$last$Name' : [Validators.required , Validators.minLength(2) , Validators.maxLength(20)] ,\n\n    'about' : [Validators.required , Validators.minLength(9) , Validators.maxLength(300)] ,\n\n    'emailAddress' : [Validators.required , Validators.minLength(7) , Validators.maxLength(50) , emailAddressValidator(emailAddress) ] ,\n\n    'jamb$matric$identity' : [Validators.minLength(2) , Validators.maxLength(30)] ,\n\n    'password' : [Validators.required , Validators.minLength(7) , Validators.maxLength(35) , simplePasswordValidator()] ,\n\n  }\n\n  public permanentProps : General = {\n\n    'level' : [Validators.required , Validators.max(90000000)] ,\n\n    'country' : [Validators.required , Validators.max(90000000)]\n\n  };\n\n  public propAsyncValidator : General = {\n\n    'emailAddress' : [emailAddressVerification(this.auth , this.http , HttpHeaders , this.apiConfig).bind(this)] ,\n\n    'username' : [usernameVerification(this.auth , this.http , HttpHeaders , this.apiConfig).bind(this)]\n  }\n\n  public getPermanentProp(prop : string) : any {\n\n    return this.permanentProps[prop];\n  }\n\n  public profileUpdate() : FormGroup {\n\n    return this.fb.group({\n\n      'first_name' : ['' , {'validators' : this.entryValidators.first$last$Name } ] ,\n\n      'last_name' : ['' , {'validators' : this.entryValidators.first$last$Name } ] ,\n\n      'about' : ['' , {'validators' : this.entryValidators.about } ] ,\n\n      'country' : ['' , {'validators' : [...this.getPermanentProp('country')] } ] ,\n\n      'level' : ['' , {'validators' : [...this.getPermanentProp('level')] }] } );\n\n  }\n\n  public changePassword() : FormGroup {\n\n  \tlet form = new FormGroup({\n\n  \t'password' : new FormControl('' , this.entryValidators.password) ,\n\n  \t'new_password' : new FormControl('' , this.entryValidators.password) ,\n\n  \t'confirm_password' : new FormControl('' , this.entryValidators.password)\n\n  \t} , [confirmPasswordValidator() , currentAndNewPasswordValidator()]);\n\n  \treturn form;\n  }\n\n  public statusProfile() : FormGroup {\n\n    let form = new FormGroup({\n\n      'first_name' : new FormControl('' , this.entryValidators.first$last$Name ) ,\n\n      'last_name' : new FormControl('' , this.entryValidators.first$last$Name ) ,\n\n      'email_address' : new FormControl('' , this.entryValidators.emailAddress ) ,\n\n      'identity_number' : new FormControl('' , this.entryValidators.jamb$matric$identity ) } );\n\n    return form;\n  }\n\n\n  public createPermanent(datas : General , form : FormGroup) : void {\n\n    if (datas != null) {\n\n    for (let $prop in datas) {\n\n      let propVal = $prop.toLowerCase();\n\n      this.permanentData[propVal] = datas[$prop];\n\n      form.get(propVal) ? form.get(propVal).setValidators([...this.permanentProps[propVal] , dynamicDataValidator(this.getMyData(propVal) , $prop)]) : null;\n\n      form.get(propVal) ? form.get(propVal).updateValueAndValidity() : null;\n    }\n\n    form.updateValueAndValidity(); }\n\n  }\n\n\n  public removeControls(controls : string[] , form : FormGroup) : void {\n\n    if (controls != null && controls.length > 0) {\n\n    controls.forEach((control) => { let ctrl = form.get(control);\n\n      return ctrl ? form.removeControl(control) : null; }); }\n  }\n\n  public removeAsyncValidators(controls : string[] , form : FormGroup) : void {\n\n    if (controls != null && controls.length > 0) {\n\n    controls.forEach((control) => { \n\n      if (form.get(control)) {\n\n        form.get(control).clearAsyncValidators();\n\n        form.get(control).updateValueAndValidity(); } });\n\n        form.updateValueAndValidity(); }\n\n  }\n\n  public getMyData(prop : string) : string[] {\n\n    return this.permanentData[prop];\n\n  }\n\n  public setAsyncNullError(control : string , formCtrl : FormControl) : void {\n\n      formCtrl.setErrors({[control + 'Service'] : null} , {'emitEvent' : true});\n\n      formCtrl.updateValueAndValidity({'onlySelf' : true , 'emitEvent' : true});\n\n  }\n\n}\n","import { Component , OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\n@Component({\n\n  'selector' : 'app-profile-entry-type-dashboard',\n\n  'templateUrl' : './profile-entry-type-dashboard.component.html',\n\n  'styleUrls' : ['./profile-entry-type-dashboard.component.css']\n\n})\n\nexport class ProfileEntryTypeDashboardComponent implements OnInit {\n\n  constructor(private aus : AuthenticationService) { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  public systemType : string = 'Profile';\n\n  public title : string = 'Profile';\n\n  public view : string = 'upr';\n\n  get canManage() : boolean {\n\n    return ['moderator' , 'administrator' , 'superAdministrator'].indexOf(this.aus.userRole) > 0; \n  }\n\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<div *ngIf ='systemType' id ='dashboard'>\n\n<ul>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/system\"]' class ='center'> Manage System </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/general-request\"]' class ='center'> Manage General Request </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/general-payment\"]' class ='center'> Manage General Payment </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/refund\"]' class ='center'> Manage Refund </a>\n\n\t</li>\n\n</ul>\n\n</div>","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  \n  'selector' : 'app-profile-validator',\n  \n  'templateUrl' : './profile-validator.component.html',\n  \n  'styleUrls' : ['./profile-validator.component.css']\n\n})\n\nexport class ProfileValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input('system-type') systemType : string;\n\n  @Input('first-name') first_name : FormControl;\n\n  @Input('last-name') last_name : FormControl;\n\n  @Input('email-address') email_address : FormControl;\n\n  @Input('identity-number') identity_number : FormControl;\n\n  @Input('new-password') new_password : FormControl;\n\n  @Input('confirm-password') confirm_password : FormControl;\n\n  @Input() country : FormControl;\n\n  @Input() level : FormControl;\n\n  @Input() password : FormControl;\n\n}\n","<ng-container *ngIf ='first_name'>\n\n\t<div *ngIf ='first_name.invalid && (first_name.touched || first_name.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='first_name.errors?.required'> First Name of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='first_name.errors?.required || first_name.errors?.minlength'> First Name of {{systemType}} cannot be less than 2 characters in length </li>\n\t\t\t<li *ngIf ='first_name.errors?.required || first_name.errors?.maxlength'> First Name of {{systemType}} cannot be greater than 20 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='last_name'>\n\n\t<div *ngIf ='last_name.invalid && (last_name.touched || last_name.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='last_name.errors?.required'> Last Name of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='last_name.errors?.required || last_name.errors?.minlength'> Last Name of {{systemType}} cannot be less than 2 characters in length </li>\n\t\t\t<li *ngIf ='last_name.errors?.required || last_name.errors?.maxlength'> Last Name of {{systemType}} cannot be greater than 20 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='email_address'>\n\n\t<div *ngIf ='email_address.invalid && (email_address.touched || email_address.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='email_address.errors?.required'> Email Address of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='email_address.errors?.required || email_address.errors?.minlength'> Email Address of {{systemType}} cannot be less than 7 characters in length </li>\n\t\t\t<li *ngIf ='email_address.errors?.required || email_address.errors?.maxlength'> Email Address of {{systemType}} cannot be greater than 50 characters in length </li>\n\t\t\t<li *ngIf ='email_address.errors?.required || email_address.errors?.email_address'> Email Address must be valid and should conform to standards for example david@gmail.com </li>\n\t\t\t<li *ngIf ='email_address.errors?.email_addressService'> Email Address cannot be used at the moment because it is already taken by another user. Please input another email address </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='level'>\n\n\t<div *ngIf ='level.invalid && (level.touched || level.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='level.errors?.required'> Level of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='level.errors?.required || level.errors?.max'> Level of {{systemType}} cannot be greater than specified length </li>\n\t\t\t<li *ngIf ='level.errors?.Level'> Level of {{systemType}} should be available from existing record before it can be considered valid </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='country'>\n\n\t<div *ngIf ='country.invalid && (country.touched || country.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='country.errors?.required'> Country of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='country.errors?.required || country.errors?.max'> Country of {{systemType}} cannot be greater than specified length </li>\n\t\t\t<li *ngIf ='country.errors?.Country'> Country of {{systemType}} should be available from existing record before it can be considered valid </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='identity_number'>\n\n\t<div *ngIf ='identity_number.invalid && (identity_number.touched || identity_number.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='identity_number.errors?.required'> Identity Number of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='identity_number.errors?.required || identity_number.errors?.minlength'> Identity Number of {{systemType}} cannot be less than 2 characters in length </li>\n\t\t\t<li *ngIf ='identity_number.errors?.required || identity_number.errors?.maxlength'> Identity Number of {{systemType}} cannot be greater than 30 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='password'>\n\n\t<div *ngIf ='password.invalid && (password.touched || password.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='password.errors?.required'> Password of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='password.errors?.required || password.errors?.minlength'> Password of {{systemType}} cannot be less than 7 characters in length </li>\n\t\t\t<li *ngIf ='password.errors?.required || password.errors?.maxlength'> Password of {{systemType}} cannot be greater than 35 characters in length </li>\n\t\t\t<li *ngIf ='password.errors?.simplePassword'> Password of {{systemType}} is too simple and will not be allowed in this system. Please input another type of password </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n<ng-container *ngIf ='new_password'>\n\n\t<div *ngIf ='new_password.invalid && (new_password.touched || new_password.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='new_password.errors?.required'> New Password of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='new_password.errors?.required || new_password.errors?.minlength'> New Password of {{systemType}} cannot be less than 7 characters in length </li>\n\t\t\t<li *ngIf ='new_password.errors?.required || new_password.errors?.maxlength'> New Password of {{systemType}} cannot be greater than 35 characters in length </li>\n\t\t\t<li *ngIf ='new_password.errors?.simplePassword'> New Password of {{systemType}} is too simple and will not be allowed in this system. Please input another type of new_password </li>\n\t\t\t<li *ngIf ='new_password.errors?.currentAndNew'> New Password of {{systemType}} should not be equal to initial password </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n<ng-container *ngIf ='confirm_password'>\n\n\t<div *ngIf ='confirm_password.invalid && (confirm_password.touched || confirm_password.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='confirm_password.errors?.required'> Confirmation Password of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='confirm_password.errors?.required || confirm_password.errors?.minlength'> Confirmation Password of {{systemType}} cannot be less than 7 characters in length </li>\n\t\t\t<li *ngIf ='confirm_password.errors?.required || confirm_password.errors?.maxlength'> Confirmation Password of {{systemType}} cannot be greater than 35 characters in length </li>\n\t\t\t<li *ngIf ='confirm_password.errors?.simplePassword'> Confirmation Password of {{systemType}} is too simple and will not be allowed in this system. Please input another type of confirm_password </li>\n\t\t\t<li *ngIf ='confirm_password.errors?.confirm_password'> Confirmation Password of {{systemType}} should be equal to New password of {{systemType}} </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { User } from '../user';\nimport { General } from '../general';\nimport { ProfileService } from '../profile.service';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\n\n@Component({\n\n  'selector' : 'app-profile-detail',\n  \n  'templateUrl' : './profile-detail.component.html',\n  \n  'styleUrls' : ['./profile-detail.component.css'] ,\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class ProfileDetailComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private ems : ErrorMessagesService , private ps : ProfileService ) { \n\n  }\n\n  public systemType : string = 'User';\n\n  public title : string = `${this.systemType} Detail`;\n\n  public view : string = 'aug';\n\n  public entry : User;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  ngOnInit(): void {\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { return this.ps.profileDetail(); })\n        )\n\n      .subscribe((result : User) => {\n\n\t\t\t\t\tif (result == null) { \n\n            this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); \n\n            this.isError = true; }\n\n          else if (result != null) {\n\n            this.entry = result; } });\n  }\n\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<div *ngIf ='entry' id ='entry-view'>\n\n\t<div id ='entry-detail'>\n\n\t<table>\n\n\t\t<colgroup>\n\n\t\t\t<col class ='parameter'>\n\t\t\t<col class ='data'>\n\n\t\t</colgroup>\n\n\t\t<tbody>\n\n\t\t\t<ng-container *ngIf ='entry?.profile_photo'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Profile Photo : </th>\n\t\t\t\t<td class ='profilePhoto'> <img src ='{{entry?.profile_photo}}' alt ='{{systemType}}' [title] ='systemType' > </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?._id'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Unique Number : </th>\n\t\t\t\t<td> {{entry?._id}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.first_name'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> First Name : </th>\n\t\t\t\t<td> {{entry?.first_name}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.last_name'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Last Name : </th>\n\t\t\t\t<td> {{entry?.last_name}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.email_address'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Email Address : </th>\n\t\t\t\t<td> {{entry?.email_address}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.department'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Department : </th>\n\t\t\t\t<td> {{entry?.department}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.faculty'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Faculty : </th>\n\t\t\t\t<td> {{entry?.faculty}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.level'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Level : </th>\n\t\t\t\t<td> {{entry?.level}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.unit'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Unit : </th>\n\t\t\t\t<td> {{entry?.unit}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.country'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Country : </th>\n\t\t\t\t<td> {{entry?.country}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.role'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Role : </th>\n\t\t\t\t<td> {{entry?.role}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.status'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Status : </th>\n\t\t\t\t<td> {{entry?.status}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.matriculation_number'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Matriculation Number : </th>\n\t\t\t\t<td> {{entry?.matriculation_number}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.jamb_registration_number'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Jamb Registration Number : </th>\n\t\t\t\t<td> {{entry?.jamb_registration_number}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.identity_number'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Student Identity Number : </th>\n\t\t\t\t<td> {{entry?.identity_number}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.updated_on'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Updated On : </th>\n\t\t\t\t<td> {{entry?.updated_on | date : 'fullDate'}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.about'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> About : </th>\n\t\t\t\t<td> {{entry?.about}} </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.signature'>\n\n\t\t\t<tr>\n\n\t\t\t\t<th class ='bold left'> Signature : </th>\n\t\t\t\t<td class ='signature' > <img src ='{{entry?.signature}}' alt ='{{systemType}}' [title] ='systemType' > </td>\n\n\t\t\t</tr>\n\n\t\t</ng-container>\n\n\t\t</tbody>\n\n\t</table>\n\n\t\t\t<div class ='entry-options'>\n\n\t\t\t\t<h3> Entry Options </h3>\n\n\t\t\t<a [routerLink] ='[\"../../../\" , \"account\" , \"profile\" , \"update\"]' class ='entry-option center'> Profile Update </a>\n\n\t\t</div>\n\n</div>\n\n</div>","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { FormGroup , FormControl } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../user';\nimport { General } from '../general';\nimport { ProfileService } from '../profile.service';\nimport { ProfileFormService } from '../profile-form.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n\n  'selector' : 'app-change-password',\n\n  'templateUrl' : './change-password.component.html',\n\n  'styleUrls' : ['./change-password.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class ChangePasswordComponent implements OnInit {\n\n  constructor(private pfs : ProfileFormService , public router : Router , public ps : ProfileService , \n\n              public ns : NotificationService , private auth : AuthenticationService , private route : ActivatedRoute ,\n\n              public ems : ErrorMessagesService) { \n\n  }\n\n  public systemType : string = 'User';\n\n  public title : string = 'Change Password';\n\n  public view : string = 'cp';\n\n  public eidx : number;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  public isFormSubmitted : boolean = false\n\n  public isFormProcessing : boolean = false\n\n  public entryForm : FormGroup;\n\n  public entryChangesT : any; \n\n  ngOnInit() : void {\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { \n\n            return this.ps.entryExist(); })\n        )\n\n      .subscribe((result : User) => {\n\n          if (result == null) { \n\n            this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); \n\n            this.isError = true; }\n\n          else if (result != null) {\n\n            this.eidx = result._id;\n\n            this.entryForm = this.pfs.changePassword(); } });\n\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  public changePassword(body : { [key : string] : any }) : void {\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.ps.changePassword(body)\n\n      .subscribe((result : General) => {\n\n        if (result == null) { this.isFormSubmitted = false;\n\n          this.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} entry is not updated.`); }\n\n         else if (result != null && result.updated == true) { \n\n          this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} entry is updated.`);\n\n          this.auth.logout();\n\n          this.entryChanges(result); } });\n  }\n\n  public entryChanges(data) : void {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigateByUrl('/signin');  } , 5000) \n  }\n  \n  get password() : FormControl {\n\n    return this.entryForm.get('password') as FormControl;\n  }\n\n  get new_password() : FormControl {\n\n  \treturn this.entryForm.get('new_password') as FormControl;\n  }\n\n  get confirm_password() : FormControl {\n\n    return this.entryForm.get('confirm_password') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n  \treturn this.entryForm.valid;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'></app-notification-screen>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<div *ngIf ='eidx' id ='entry-update'>\n\n<form method = 'post' autocomplete ='off' [formGroup] ='entryForm' (ngSubmit) ='changePassword(entryForm.value)' > \n\n\t\t<div *ngIf ='password' class ='form-group'>\n\n\t\t\t<label for ='password' class ='form-label bold'> Current Password * </label>\n\n\t\t\t<input type ='password' class ='form-control' id ='password' name ='password' required ='required' autocomplete ='new-password' formControlName ='password'>\n\n\t\t\t<app-profile-validator *ngIf ='password' [system-type] ='systemType' [password] = 'password'> </app-profile-validator>\n\n\t\t</div>\n\n\t\t<div *ngIf ='new_password' class ='form-group'>\n\n\t\t\t<label for ='new-password' class ='form-label bold'> New Password * </label>\n\n\t\t\t<input type ='password' class ='form-control' id ='new-password' name ='new_password' required ='required' autocomplete ='new-new_password' formControlName ='new_password'>\n\n\t\t\t<app-profile-validator  *ngIf ='new_password' [system-type] ='systemType' [new-password] = 'new_password'> </app-profile-validator>\n\n\t\t</div>\n\n\t\t<div *ngIf ='confirm_password' class ='form-group'>\n\n\t\t\t<label for ='confirm-password' class ='form-label bold'> Confirm Password * </label>\n\n\t\t\t<input type ='password' class ='form-control' id ='confirm-password' name ='confirm_password' required ='required' autocomplete ='new-confirm_password' formControlName ='confirm_password'>\n\n\t\t\t<app-profile-validator  *ngIf ='confirm_password' [system-type] ='systemType' [confirm-password] ='confirm_password'> </app-profile-validator>\n\n\t\t</div>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t</form>\n\n</div>","import { ValidatorFn , AbstractControl , ValidationErrors } from '@angular/forms';\r\n\r\n\r\nexport function dynamicDataValidator(entries , name) : ValidatorFn {\r\n\r\n\treturn (control : AbstractControl) : ValidationErrors | null => {\r\n\r\n    let entry = control.value;\r\n\r\n    let data = entries.map((item) => item._id);\r\n\r\n    if (typeof data[0] == 'number') { entry = +entry; }\r\n\r\n  \treturn entry != '' && data.indexOf(entry) < 0 ? {[name] : {'value' : entry , 'name' : name} } : null;\r\n\t\r\n\t}\r\n\r\n}","import { Directive , ElementRef , HostListener } from '@angular/core';\n\n@Directive({\n\n  'selector' : '[appCapitalize]'\n\n})\n\nexport class CapitalizeDirective {\n\n  constructor(public el : ElementRef) { \n\n  }\n\n  @HostListener('input') public capitalize(field : string) : void { let i = 0;\n\n  \tlet $entry = this.el.nativeElement.value.replace(/\\s+/g , ' ').split(' ')\n\n\t\t\t\t\t\t\t.map((n) => {\treturn n.charAt(0).toUpperCase() + n.substring(1).toLowerCase();\t}).join(' ');\n\n  \tthis.el.nativeElement.value = $entry;\n\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n"],"sourceRoot":"webpack:///"}