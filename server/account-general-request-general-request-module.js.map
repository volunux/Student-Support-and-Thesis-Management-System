{"version":3,"sources":["./src/app/account/general-request/general-request-route-data.ts","./src/app/account/general-request/general-request-entry-timeline/general-request-entry-timeline.component.ts","./src/app/account/general-request/general-request-entry-timeline/general-request-entry-timeline.component.html","./src/app/account/general-request/general-request-entry-generate-username-password/general-request-entry-generate-username-password.component.ts","./src/app/account/general-request/general-request-entry-generate-username-password/general-request-entry-generate-username-password.component.html","./src/app/account/general-request/general-request-entry-transfer-validator/general-request-entry-transfer-validator.component.ts","./src/app/account/general-request/general-request-entry-transfer-validator/general-request-entry-transfer-validator.component.html","./src/app/account/general-request/general-request-entry-dashboard/general-request-entry-dashboard.component.ts","./src/app/account/general-request/general-request-entry-dashboard/general-request-entry-dashboard.component.html","./src/app/account/general-request/roles.ts","./src/app/account/general-request/request-others.ts","./src/app/account/general-request/general-request-entry-generate-password/general-request-entry-generate-password.component.ts","./src/app/account/general-request/general-request-entry-generate-password/general-request-entry-generate-password.component.html","./src/app/account/general-request/general-request-dashboard/general-request-dashboard.component.ts","./src/app/account/general-request/general-request-dashboard/general-request-dashboard.component.html","./src/app/account/general-request/general-request-routing.module.ts","./src/app/account/general-request/general-request-entry-credential-validator/general-request-entry-credential-validator.component.ts","./src/app/account/general-request/general-request-entry-credential-validator/general-request-entry-credential-validator.component.html","./src/app/account/general-request/general-request-entry-delete-all/general-request-entry-delete-all.component.ts","./src/app/account/general-request/general-request-entry-delete-all/general-request-entry-delete-all.component.html","./src/app/account/general-request/general-request-entries/general-request-entries.component.ts","./src/app/account/general-request/general-request-entries/general-request-entries.component.html","./src/app/account/general-request/general-request-entry-detail/general-request-entry-detail.component.ts","./src/app/account/general-request/general-request-entry-detail/general-request-entry-detail.component.html","./src/app/account/general-request/general-request-homepage/general-request-homepage.component.ts","./src/app/account/general-request/general-request-homepage/general-request-homepage.component.html","./src/app/account/general-request/generate-username-password.service.ts","./src/app/account/general-request/general-request-create-reply/general-request-create-reply.component.ts","./src/app/account/general-request/general-request-create-reply/general-request-create-reply.component.html","./src/app/account/general-request/general-request.module.ts","./src/app/account/general-request/general-request-entry-update-field/general-request-entry-update-field.component.ts","./src/app/account/general-request/general-request-entry-update-field/general-request-entry-update-field.component.html","./src/app/account/general-request/general-request-entry-option/general-request-entry-option.component.ts","./src/app/account/general-request/general-request-entry-option/general-request-entry-option.component.html","./src/app/account/general-request/general-request.service.ts","./src/app/account/general-request/general-request-create-comment/general-request-create-comment.component.ts","./src/app/account/general-request/general-request-create-comment/general-request-create-comment.component.html","./src/app/account/general-request/general-request-form.service.ts","./src/app/account/general-request/general-request-entry-transfer/general-request-entry-transfer.component.ts","./src/app/account/general-request/general-request-entry-transfer/general-request-entry-transfer.component.html"],"names":[],"mappings":"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","file":"account-general-request-general-request-module.js","sourcesContent":["let $$ : { [key : string] : any } = {\r\n\r\n\t\t'systemType' : 'General Request' ,\r\n\r\n\t\t'title' : 'General Request' ,\r\n\r\n\t\t'view' : 'gr' ,\r\n\r\n\t\t'viewWord' : 'GeneralRequest' ,\r\n\r\n\t\t'link' : 'general-request' ,\r\n\r\n\t\t'$link' : 'general-request' ,\r\n\r\n\t\t'systemGuideline' : 'request' ,\r\n\r\n\t\t'base' : 'general-request'\r\n};\r\n\r\nexport const RouteConfigData : { [key : string] : any } = {\r\n\r\n\t'dashboard' : {...$$} ,\r\n\r\n\t'create' : {...$$ , 'title' : `Request review of your semester ${$$.systemType}` } ,\r\n\r\n\t'comment' : {...$$ , 'title' : `Add a Comment : ${$$.systemType} Entry` } ,\r\n\r\n\t'detail' : {...$$ , 'title' : `${$$.systemType} Entry` , 'generateCred' : null } ,\r\n\r\n\t'timeline' : {...$$ , 'title' : `${$$.systemType} Entry Timeline` } ,\r\n\r\n\t'transfer' : {...$$ , 'title' : `Transfer and Move ${$$.systemType} Entry` } ,\r\n\r\n\t'entries' : {...$$ , 'title' : `${$$.systemType} Entries` , 'searchFilters' : {'application_number' : 'Application Number' , 'status' : 'Status'} } ,\r\n\r\n\t'reply' : {...$$ , 'title' : `Add a Reply to a Comment : ${$$.systemType} Entry`} ,\r\n\r\n\t'deleteAll' : {...$$ , 'title' : `${$$.systemType} Entries : Delete All` } ,\r\n\r\n};\r\n","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequest } from '../general-request';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { GeneralRequestService } from '../general-request.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { canUpdate } from '../roles';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-timeline',\n\n  'templateUrl' : './general-request-entry-timeline.component.html',\n\n  'styleUrls' : ['./general-request-entry-timeline.component.css'],\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralRequestEntryTimelineComponent implements OnInit {\n\n  constructor(public router : Router , private route : ActivatedRoute , public grs : GeneralRequestService , \n\n  \t\t\t\t\t\tpublic ns : NotificationService , public ems : ErrorMessagesService , private aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralRequest;\n\n  public comments : General;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  private eslug : string;\n\n  public rslug : string;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.timeline.systemType;\n\n    this.title = data.timeline.title;\n\n    this.view = data.timeline.view;\n\n    this.viewWord = data.timeline.viewWord;\n\n    this.link = data.timeline.link;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            let $e = params.get('entry');\n\n            let $r = params.get('request');\n\n            this.rslug = $r;\n\n            this.eslug = $e;\n\n          \treturn this.grs.getTimeline($r , $e); })\n        )\n\n      .subscribe((result : GeneralRequest) => {\n\n\t\t\t\t\tif (result == null) {\n\n            this.isError = true;\n\n            this.error = Object.assign({'resource' : `${this.systemType} Entry Timeline`} , this.ems.message); }\n\n          else if (result != null) {\n\n\t\t\t\t\tthis.entry = result;\n\n          this.comments = result.timeline; } });\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  }\n\n  get isAdmin() : string {\n\n      if (['moderator' , 'administrator' , 'superAdministrator'].indexOf(this.userRole) > -1) return '/general-request';\n\n      return '/general-request';\n  }\n\n  get canUpdateEntry() : boolean {\n\n    return canUpdate.indexOf(this.userRole) > -1;\n  }\n\n}\n","<div id ='general-timeline'>\n\n\t<div id ='general-entry-details'>\n\n\t\t<h2> Entry Detail </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' ></app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-request-entry-status *ngIf ='entry' [system-type] ='systemType' [entry] ='entry'> </app-request-entry-status>\n\n\t<ng-container *ngIf ='comments != null && comments?.length > 0; else noComments'>\n\n\t\t<div class ='comments'>\n\n\t\t\t<h3> Timeline </h3>\n\n\t\t\t<ng-container *ngFor ='let comment of comments; let i =index'>\n\n\t\t\t\t<div class ='comment'>\n\n\t\t\t\t\t<p> <b class ='bold'> {{i + 1}} </b> <small class ='timestamp'> {{comment?.updated_on | date : 'longDate'}} </small> </p>\n\n\t\t\t\t\t<ng-container *ngIf ='comment?.author; else anonymousTemplate'>\n\n\t\t\t\t\t\t<p class ='author'> <small> <b class ='bold'> {{comment?.author?.full_name}} </b> </small> </p>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-template #anonymousTemplate>\n\n\t\t\t\t\t\t<p class ='author'> <b class ='bold'> Anonymous </b> </p>\n\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-container *ngIf ='comment?.text'>\n\n\t\t\t\t\t\t<p class ='text'> <b class ='bold'> Message : </b> {{comment?.text}} </p>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf =\"entry?.status != 'Fulfilled' && entry?.status != 'Rejected'\">\n\n\t\t\t\t\t\t<ng-container *ngIf ='(comment.replies == null || comment?.replies?.length < 1) && i != 0'>\n\n\t\t\t\t\t\t\t<a id ='{{comment?.slug}}' class ='reply-add' [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'comment' , comment?.slug , 'reply' , 'add']\"> Reply </a>\n\n\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf ='comment?.replies != null && comment?.replies?.length > 0'>\n\n\t\t\t\t\t\t<div class ='replies'>\n\n\t\t\t\t\t\t\t<ng-container *ngFor ='let reply of comment?.replies; let j =index'>\n\n\t\t\t\t\t\t\t\t<div class ='reply'>\n\n\t\t\t\t\t\t\t\t\t<ng-container *ngIf ='comment.updated_on'>\n\n\t\t\t\t\t\t\t\t\t<p> <b class ='bold'> {{j + 1}} </b> <small class ='timestamp'> {{comment?.updated_on | date : 'longDate'}} </small> </p>\n\n\t\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t\t\t<ng-container *ngIf ='reply?.author; else anonymousTemplate1'>\n\n\t\t\t\t\t\t\t\t\t\t<p class ='author'> <small> <b class ='bold'> Author : {{reply?.author?.full_name}} </b> </small> </p>\n\n\t\t\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t\t\t<ng-template #anonymousTemplate1>\n\n\t\t\t\t\t\t\t\t\t\t<p class ='author'> <small> <b class ='bold'> Anonymous </b> </small> </p>\n\n\t\t\t\t\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t\t\t\t\t<ng-container *ngIf ='reply?.entry_handler'>\n\n\t\t\t\t\t\t\t\t\t\t<p class ='author'> <small> <b class ='bold'> Handler : </b>{{reply?.entry_handler?.full_name}} </small> </p>\n\n\t\t\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t\t\t<ng-container *ngIf ='reply?.text'>\n\n\t\t\t\t\t\t\t\t\t\t<p class ='text'> <b class ='bold'> Message : </b>{{(reply?.comment_author_name ? '@' + reply?.comment_author_name : '')}}  {{reply?.text | replaceLineBreak}} </p>\n\n\t\t\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</div>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t</ng-container>\n\n\t<ng-template #noComments>\n\n\t\t<div class ='comments'>\n\n\t\t\t<p> Comments entries not available for this entry. </p>\n\n\t\t</div>\n\n\t</ng-template>\n\n</div>\n\n\t\t<div id ='entry-detail-options' *ngIf ='entry'>\n\n\t\t\t<ng-container *ngIf =\"entry?.status != 'Pending'\">\n\n\t\t\t\t<a [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'timeline' ]\" class ='center'> Timeline </a>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf =\"entry?.status == 'Review' || entry?.status == 'Update'\">\n\n\t\t\t\t<ng-container *ngIf ='canUpdateEntry'>\n\n\t\t\t\t\t\t<a [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'transfer']\" class ='center'> Transfer or Move Request </a>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf =\"entry?.status == 'Update' || entry?.status == 'Transferred'\">\n\n\t\t\t\t<a [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'comment' , 'add']\" class ='center'> Add a Comment </a>\n\n\t\t\t</ng-container>\n\n\t\t\t\t<a [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'detail']\" class ='center'> Entry Detail </a>\n\n\t\t</div>\n\n</div>\n\n","import { Component , ElementRef , Input , OnInit , ViewChild } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { GeneralRequest } from '../general-request';\nimport { Credentials } from '../credentials';\nimport { GeneralRequestFormService } from '../general-request-form.service';\nimport { GenerateUsernamePasswordService } from '../generate-username-password.service';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-generate-username-password',\n\n  'templateUrl' : './general-request-entry-generate-username-password.component.html',\n\n  'styleUrls' : ['./general-request-entry-generate-username-password.component.css']\n\n})\n\nexport class GeneralRequestEntryGenerateUsernamePasswordComponent implements OnInit {\n\n  constructor(private gups : GenerateUsernamePasswordService , private grfs : GeneralRequestFormService) { \n\n  }\n\n  ngOnInit() : void {\n\n    this.entryForm.addControl('username' , new FormControl('' , this.grfs.otherCtrls.username));\n\n    this.entryForm.addControl('password' , new FormControl('' , this.grfs.otherCtrls.password));\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @ViewChild('proposedCredential') public proposedCredential : ElementRef;\n\n  @Input() public entry : GeneralRequest;\n\n\n  public createNewCredentials(evt) : any {\n    \n    evt.stopPropagation();\n\n    evt.preventDefault();\n\n    let proposed = this.proposedCredential.nativeElement.value;\n\n      this.gups.createUsernamePassword$({'username' : proposed , 'user' : this.entry.author._id , 'entry' : this.entry._id})\n\n        .subscribe((result : { [key : string] : Credentials }) => {\n\n          if (result != null && result.created == true) {\n\n          let data = result.$data; \n\n            this.entryForm.patchValue({'username' : data.username , 'password' : data.password }); } });\n\n  }\n\n  get username() : FormControl {\n\n    return this.entryForm.get('username') as FormControl;\n  }\n\n  get password() : FormControl {\n\n    return this.entryForm.get('password') as FormControl;\n  }\n\n}\n","<ng-container *ngIf ='entry'>\n\n<div class ='generate-username-password-form' [formGroup] ='entryForm'>\n\n\t\t<div class ='form-group'>\n\n\t\t<button id ='generateCredentials' class ='btn-submit' (click) ='createNewCredentials($event)'> Generate Request Username and Password </button>\n\n\t</div>\n\n\t\t<div class ='form-group'>\n\n\t\t\t<ng-container *ngIf ='entry && entry?.author; else noAuthor'>\n\n\t\t\t<input type ='hidden' id ='proposedCredential' name ='proposal' [value] ='entry | proposedCredential' class ='form-control' #proposedCredential>\n\n\t\t</ng-container>\n\n\t\t<ng-template #noAuthor>\n\n\t\t\t<input type ='hidden' id ='proposedCredential' name ='proposal' value ='' #proposedCredential>\n\n\t\t</ng-template>\n\n\t\t</div>\n\n\t\t<div class ='form-group'>\n\n\t\t\t<label for ='request-username' class ='form-label bold'> Username </label>\n\n\t\t\t<input type ='text' name ='username' id ='request-username' [value] ='entry?.username' class ='form-control' formControlName ='username'>\n\n\t\t\t<app-general-request-entry-credential-validator [system-type] ='systemType' [username] ='username'> </app-general-request-entry-credential-validator>\n\n\t\t</div>\n\n\t\t<div class ='form-group'>\n\n\t\t\t<label for ='request-password' class ='form-label bold'> Password </label>\n\n\t\t\t<input type ='text' name ='password' id ='request-password' [value] ='entry?.password' class ='form-control' formControlName ='password'>\n\n\t\t\t<app-general-request-entry-credential-validator [system-type] ='systemType' [password] ='password'> </app-general-request-entry-credential-validator>\n\n\t\t</div>\n\n\t\t</div>\n\n\t</ng-container>","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-transfer-validator',\n\n  'templateUrl' : './general-request-entry-transfer-validator.component.html',\n\n  'styleUrls' : ['./general-request-entry-transfer-validator.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralRequestEntryTransferValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input() public systemType : string;\n\n  @Input() public unit : FormControl;\n\n}\n","<ng-container *ngIf ='unit'>\n\n\t<div @fadeAnimation *ngIf ='unit.invalid && (unit.touched || unit.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='unit.errors?.required'> Unit of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='unit.errors?.required || unit.errors?.max'> Unit of {{systemType}} cannot be greater than specified length </li>\n\t\t\t<li *ngIf ='unit.errors?.Unit'> Unit of {{systemType}} should be available from existing record before it can be considered valid </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>","import { Component , Input , OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequest } from '../general-request';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { GeneralRequestService } from '../general-request.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-dashboard',\n\n  'templateUrl' : './general-request-entry-dashboard.component.html',\n\n  'styleUrls' : ['./general-request-entry-dashboard.component.css'],\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralRequestEntryDashboardComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private ts : Title , private grs : GeneralRequestService , private ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralRequest;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  private rslug : string;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.dashboard.systemType;\n\n    this.title = data.dashboard.title;\n\n    this.view = data.dashboard.view;\n\n    this.link = data.dashboard.link;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n        switchMap((params : ParamMap) => {\n\n          let $r = params.get('request');\n\n          this.rslug = $r;\n\n        \treturn this.grs.manageRequestEntry($r); })\n        )\n\n      .subscribe((result : { [key : string] : any }) => {\n\n\t\t\t\tif (result == null) {\n\n          this.isError = true;\n\n          this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n        else if (result != null) {\n\n          this.entry = result;\n\n          this.ts.setTitle(result.name + ` Request`); } });\n  }\n\n  get canCreate() : boolean {\n\n    return ['student' , 'departmentPresident' , 'facultyPresident'].indexOf(this.aus.userRole) > -1;\n  }\n\n  get canDeleteAll() : boolean {\n\n    return this.aus.isSuperAdministrator;\n  }\n\n}\n","<h2 *ngIf ='entry && entry?.name'> {{entry.name}} Request </h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<div *ngIf ='entry' id ='dashboard'>\n\n<ul>\n\n\t<li>\n\n\t\t<a [routerLink] =\"['entries']\" class ='center'> Manage {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li *ngIf ='canCreate'>\n\n\t\t<a [routerLink] =\"['entry' , 'create']\" class ='center'> Create {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"../../\"]' class ='center'> Other Requests </a>\n\n\t</li>\n\n\t<li *ngIf ='canDeleteAll'>\n\n\t\t<a [routerLink] =\"['entry' , 'delete' , 'all']\" class ='center'> Delete All {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] =\"['/account' , 'profile']\" class ='center'> Profile </a>\n\n\t</li>\n\n</ul>\n\n</div>","export interface Role {\r\n\r\n\tname : string;\r\n\r\n\trole : string;\r\n}\r\n\r\nexport const roles : Role[] = [\r\n\r\n{'name' : 'Student' , 'role' : 'student' } ,\r\n\r\n{'name' : 'Department President' , 'role' : 'departmentPresident' } ,\r\n\r\n{ 'name' : 'Faculty President' , 'role' : 'facultyPresident' } ,\r\n\r\n{\t'name' : 'Lecturer' , 'role' : 'lecturer' } ,\r\n\r\n{ 'name' : 'Head of Department' , 'role' : 'hod' } ,\r\n\r\n{ 'name' : 'Dean of Faculty' , 'role' : 'dean' } ,\r\n\r\n{ 'name' : 'Bursar' ,\t'role' : 'bursar' } ,\r\n\r\n{'name' : 'Staff' , 'role' : 'staff' } ,\r\n\r\n{ 'name' : 'Moderator' , 'role' : 'moderator' } ,\r\n\r\n{ 'name' : 'Administrator' , 'role' : 'administrator' } ,\r\n\r\n{ 'name' : 'Super Administrator' , 'role' : 'superAdministrator' }];\r\n\r\nexport const $entryUpdateRole : string[] = ['staff' , 'moderator' , 'administrator' , 'superAdministrator'];\r\n\r\nexport const canUpdate : string[] = ['staff' , 'moderator' , 'administrator' , 'superAdministrator'];","export class GeneralRequestOther {\r\n\r\n\tpublic faculties : string[];\r\n\r\n\tpublic departments : string[];\r\n\r\n\tpublic units : string[];\r\n\r\n\tpublic levels : string[];\r\n\r\n\tpublic countries : string[];\r\n\r\n\tconstructor(data) {\r\n\r\n\t\tthis.faculties = data.Faculty ? data.Faculty : [];\r\n\r\n\t\tthis.departments = data.Department ? data.Department : [];\r\n\r\n\t\tthis.units = data.Unit ? data.Unit : [];\r\n\r\n\t\tthis.levels = data.Level ? data.Level : [];\r\n\r\n\t\tthis.countries = data.Country ? data.Country : [];\r\n\r\n\t}\r\n\r\n}\r\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { GeneralRequest } from '../general-request';\nimport { GeneralRequestFormService } from '../general-request-form.service';\nimport { GenerateUsernamePasswordService } from '../generate-username-password.service';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-generate-password',\n\n  'templateUrl' : './general-request-entry-generate-password.component.html',\n\n  'styleUrls' : ['./general-request-entry-generate-password.component.css']\n\n})\n\nexport class GeneralRequestEntryGeneratePasswordComponent implements OnInit {\n\n\n  constructor(private gups : GenerateUsernamePasswordService , private grfs : GeneralRequestFormService) { \n\n  }\n\n  ngOnInit() : void {\n\n    this.entryForm.addControl('password' , new FormControl('' , this.grfs.otherCtrls.password));\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input() public entry : GeneralRequest;\n\n\n  public createNewCredentials(evt) : any {\n    \n    evt.stopPropagation();\n\n    evt.preventDefault();\n\n\t\tlet newPassword = Math.random().toString(36).substr(2, 9);\n\n\t\tthis.entryForm.patchValue({'password' : newPassword });\n\n    this.gups.createPassword$({'password' : newPassword})\n\n      .subscribe();\n\n  }\n\n  get password() : FormControl {\n\n    return this.entryForm.get('password') as FormControl;\n  }\n\n}\n","<ng-container *ngIf ='entry'>\n\n<div class ='generate-username-password-form' [formGroup] ='entryForm'>\n\n\t\t<div class ='form-group'>\n\n\t\t<button id ='generateCredentials' class ='btn-submit' (click) ='createNewCredentials($event)'> Generate {{systemType}} Password </button>\n\n\t</div>\n\n\t\t<div class ='form-group' *ngIf ='password'>\n\n\t\t\t<label for ='request-password' class ='form-label bold'> Password </label>\n\n\t\t\t<input type ='text' name ='password' id ='request-password' [value] ='entry?.password' class ='form-control' formControlName ='password'>\n\n\t\t\t<app-general-request-entry-credential-validator [system-type] ='systemType' [password] ='password'> </app-general-request-entry-credential-validator>\n\n\t\t</div>\n\n\t\t</div>\n\n\t</ng-container>","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GeneralRequestService } from '../general-request.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { General } from '../general';\n\n@Component({\n\n  'selector' : 'app-general-request-dashboard',\n\n  'templateUrl' : './general-request-dashboard.component.html',\n\n  'styleUrls' : ['./general-request-dashboard.component.css'] ,\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralRequestDashboardComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private grs : GeneralRequestService , public ems : ErrorMessagesService) { \n\n  }\n\n  public systemType : string;\n\n  public title : string;\n  \n  public view : string;\n\n  public entries : { [key : string] : any }[];\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.dashboard.systemType;\n\n    this.title = data.dashboard.title;\n\n    this.view = data.dashboard.view;\n\n  \tthis.grs.manageRequest()\n\n  \t\t.subscribe((result) => {\n\n        if (result == null) {\n\n          this.isError = true;\n\n          this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n        else if (result != null && result.length > 0) {\n\n         this.entries = result; } }); }\n}","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error'> </app-resource-unavailable>\n\n<div *ngIf ='systemType' id ='dashboard'>\n\n<ul>\n\n\t<ng-container *ngIf ='entries != null && entries?.length > 0'>\n\n\t\t<li *ngFor ='let entry of entries'> \n\n\t\t<a [routerLink] ='[\"./\" , \"t\" , entry?.slug]' class ='center'> {{entry?.name}} </a>\n\n\t\t</li>\n\n\t</ng-container>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/account\" , \"profile\"]' class ='center'> Profile </a>\n\n\t</li>\n\n</ul>\n\n</div>","import { NgModule } from '@angular/core';\n\nimport { Routes , RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\nimport { EntryDeleteAllGuard } from '../../shared/guards/entry-delete-all.guard';\nimport { IsStudentGuard } from '../../shared/guards/is-student.guard';\n\nimport { GeneralRequestHomepageComponent } from './general-request-homepage/general-request-homepage.component';\nimport { GeneralRequestDashboardComponent } from './general-request-dashboard/general-request-dashboard.component';\nimport { GeneralRequestEntryDashboardComponent } from './general-request-entry-dashboard/general-request-entry-dashboard.component';\nimport { GeneralRequestEntriesComponent } from './general-request-entries/general-request-entries.component';\nimport { GeneralRequestEntryDetailComponent } from './general-request-entry-detail/general-request-entry-detail.component';\nimport { GeneralRequestEntryTimelineComponent } from './general-request-entry-timeline/general-request-entry-timeline.component';\nimport { GeneralRequestCreateCommentComponent } from './general-request-create-comment/general-request-create-comment.component';\nimport { GeneralRequestEntryTransferComponent } from './general-request-entry-transfer/general-request-entry-transfer.component';\nimport { GeneralRequestCreateReplyComponent } from './general-request-create-reply/general-request-create-reply.component';\nimport { GeneralRequestEntryDeleteAllComponent } from './general-request-entry-delete-all/general-request-entry-delete-all.component';\n\nimport { RouteConfigData } from './general-request-route-data';\n\nconst routes : Routes = [\n\n\t{'path' : '' , \n\n\t'component' : GeneralRequestHomepageComponent ,\n\n\t'canActivate' : [AuthenticationGuard] ,\n\n\t'canLoad' : [AuthenticationGuard] ,\n\n\t'children' : [\n\n\t\t\t{'path' : '' ,\n\n\t\t\t'canActivateChild' : [AuthenticationGuard] ,\n\n\t\t\t\t'children' : [\n\n\t\t\t\t\t{'path' : '' , 'component' : GeneralRequestDashboardComponent , 'data' : {'dashboard' : RouteConfigData.dashboard } } ,\n\n\t\t\t\t\t{'path' : 't/:request' , 'component' : GeneralRequestEntryDashboardComponent , 'data' : {'dashboard' : RouteConfigData.dashboard } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entries' , 'component' : GeneralRequestEntriesComponent , 'data' : {'entries' : RouteConfigData.entries } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/create' , 'loadChildren' : () => import('./general-request-entry-create/general-request-entry-create.module').then(m => m.GeneralRequestEntryCreateModule) } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/:entry/detail' , 'component' : GeneralRequestEntryDetailComponent , 'data' : {'detail' : RouteConfigData.detail } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/:entry/timeline' , 'component' : GeneralRequestEntryTimelineComponent , 'data' : {'timeline' : RouteConfigData.timeline } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/:entry/transfer' , 'component' : GeneralRequestEntryTransferComponent , 'data' : {'transfer' : RouteConfigData.transfer } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/:entry/comment/add' , 'component' : GeneralRequestCreateCommentComponent , 'data' : {'comment' : RouteConfigData.comment } } ,\n\n\t\t\t\t\t{'path' : 't/:request/entry/:entry/comment/:comment/reply/add' , 'component' : GeneralRequestCreateReplyComponent , 'data' : {'reply' : RouteConfigData.reply } }\t,\n\n\t\t\t\t\t{'path' : 't/:request/entry/delete/all' , 'component' : GeneralRequestEntryDeleteAllComponent , 'canActivate' : [EntryDeleteAllGuard] , 'data' : {'deleteAll' : RouteConfigData.deleteAll } } ,\n\n\t\t\t\t]}\n\t\t]}\n];\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule]\n\n})\n\nexport class GeneralRequestRoutingModule { \n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-credential-validator',\n\n  'templateUrl' : './general-request-entry-credential-validator.component.html',\n\n  'styleUrls' : ['./general-request-entry-credential-validator.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralRequestEntryCredentialValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  @Input('system-type') systemType : string;\n\n  @Input() public username : FormControl;\n\n  @Input() public password : FormControl;\n\n}\n","<ng-container *ngIf ='username'>\n\n\t<div @fadeAnimation *ngIf ='username.invalid && (username.touched || username.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='username.errors?.required'> Request Username of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='username.errors?.required || username.errors?.minlength'> Request Username of {{systemType}} cannot be less than 5 characters in length </li>\n\t\t\t<li *ngIf ='username.errors?.required || username.errors?.maxlength'> Request Username of {{systemType}} cannot be greater than 100 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='password'>\n\n\t<div @fadeAnimation *ngIf ='password.invalid && (password.touched || password.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='password.errors?.required'> Request Password of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='password.errors?.required || password.errors?.minlength'> Request Password of {{systemType}} cannot be less than 5 characters in length </li>\n\t\t\t<li *ngIf ='password.errors?.required || password.errors?.maxlength'> Request Password of {{systemType}} cannot be greater than 100 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap , Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequestService } from '../general-request.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-delete-all',\n\n  'templateUrl' : './general-request-entry-delete-all.component.html',\n\n  'styleUrls' : ['./general-request-entry-delete-all.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralRequestEntryDeleteAllComponent implements OnInit {\n  \n\tconstructor(private route : ActivatedRoute , private router : Router , private grs : GeneralRequestService , \n\n              private ems : ErrorMessagesService , private ns : NotificationService) { \n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  public isFormSubmitted : boolean = false\n\n  public rslug : string;\n\n  public isFormProcessing : boolean = false\n\n  public entryChangesT : any;\n\n  public canDelete : boolean = false;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.deleteAll.systemType;\n\n    this.viewWord = data.deleteAll.viewWord;\n\n    this.title = data.deleteAll.title;\n\n    this.view = data.deleteAll.view;\n\n    this.link = data.deleteAll.link;\n\n    this.route.paramMap.pipe(\n\n      switchMap((params : ParamMap) => {\n\n      \tlet $r = params.get('request');\n\n      \tthis.rslug = $r;\n\n        return this.grs.deleteAllEntry($r); })\n      )\n        .subscribe((result : { [key : string] : any }[]) => {\n\n        if (result == null) { this.canDelete = false;\n\n          this.isError = true;\n\n          this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n        else if (result != null && result.length > 0) {\n\n          this.canDelete = true; } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  public deleteAllEntry() : any {\n\n    let isConfirmed = confirm('Are you sure you want to proceed with this action?');\n\n    if (!isConfirmed) return false;\n\n    this.grs.$systemType = this.systemType;\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.grs.deleteAllEntry$(this.rslug)\n\n      .subscribe((result : { [key : string] : any }) => { \n\n        if (result == null) { this.isFormSubmitted = false;\n\n          this.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and all ${this.systemType} entry is not deleted.`);\n\n          return this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n         else { this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and all ${this.systemType} entry is deleted.`);\n\n          this.$entryChanges({}); } });\n\n  }\n\n  public $entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['system' , 'general-request']); } , 5000) \n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n}\n","<div id ='entry-delete-all'>\n\n\t<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-resource-unavailable *ngIf ='error' [error] ='error'> </app-resource-unavailable>\n\n\t<div id ='entry-detail' *ngIf ='canDelete'>\n\n\t\t<app-delete-all-entry *ngIf ='systemType' [system-type] ='systemType' > </app-delete-all-entry>\n\n\t\t\t<button *ngIf ='!isFormProcessing' class ='btn-submit' type ='submit' (click) ='deleteAllEntry()'> Confirm </button>\n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n</div>\n\n</div>","import { Component , Input , OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { General } from '../general';\nimport { SearchQuery } from '../../../general/search-query';\nimport { GeneralRequest } from '../general-request';\nimport { GeneralRequestService } from '../general-request.service';\nimport { GeneralRequestFormService } from '../general-request-form.service';\nimport { GeneralSearchService } from '../../../shared/services/general-search.service';\nimport { GeneralAllService } from '../../../shared/module/general-all/general-all.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { canUpdate } from '../roles';\nimport { listAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-request-entries',\n\n  'templateUrl' : './general-request-entries.component.html',\n\n  'styleUrls' : ['./general-request-entries.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService , GeneralSearchService , GeneralAllService] ,\n\n  'animations' : [listAnimation]\n\n})\n\nexport class GeneralRequestEntriesComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private location : Location ,\n\n              private grs : GeneralRequestService , private gss : GeneralSearchService , private gas : GeneralAllService ,\n\n              private ems : ErrorMessagesService , private ns : NotificationService , private aus : AuthenticationService) { \n\n    this.entriesSearchedOb = this.gss.entriesSearched$.subscribe((result : GeneralRequest[]) => {\n\n      this.location.replaceState(`/general-request/t/${this.rslug}/entries`);\n\n      this.pageNumber = 1;\n\n      if (result == null) {\n\n        this.entries = [];\n\n        this.$entriesLength = 0;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry or Entries`} , this.ems.message); \n\n        this.isError = true; }\n\n      else if (result != null && result.length > 0) {\n\n      this.error = null;\n\n      this.isError = false;\n\n      this.$entriesLength = result.length;\n\n      this.entries = result;\n\n      if (this.entries.length <= 10) this.pageNumber = 1;\n\n      if (this.entries.length > 10) this.entries.pop(); } });\n\n    this.clearSearchOb = this.gss.clearSearch$.subscribe((cleared : boolean) => {\n\n      this.clearSearch$(); });\n\n    this.errorExistOb = this.gss.errorExist$.subscribe((exists : boolean) => {\n\n      this.isError = exists; });\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public searchFilters : { [key : string] : string };\n\n  public entries : GeneralRequest[] = [];\n\n  public error : General;\n\n  public isError : boolean = false;\n\n  public esdl : number[] = [];\n\n  public p$esdl : boolean = false;\n\n  public pageNumber : number = 1;\n\n  public eslug : string;\n\n  public rslug : string;\n\n  public $entriesLength : number = 0;\n\n  public $entryRef : any;\n\n  public $link : string;\n\n  public clearSearchOb : Subscription;\n\n  public errorExistOb : Subscription;\n\n  public entriesSearchedOb : Subscription;\n\n  public searchErr$(err) {\n\n    this.error = null;\n\n    this.isError = false;\n  }\n\n  public clearSearch$() : void {\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.pageNumber = 1;\n\n    this.location.replaceState(`/general-request/t/${this.rslug}/entries`);\n\n    this.gss.searchCleared.next(true);\n\n    this.getAllEntry({}); }\n\n\n  public trackByAppNumber(idx : number , entry : GeneralRequest) : string {\n\n      return entry.application_number;\n  }\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.entries.systemType;\n\n    this.title = data.entries.title;\n\n    this.view = data.entries.view;\n\n  \tthis.link = data.entries.link;\n\n  \tthis.searchFilters = data.entries.searchFilters;\n\n    this.grs.$systemType = this.systemType;\n\n     this.route.queryParamMap.subscribe((params : ParamMap) => {\n\n       let $p = this.route.snapshot.paramMap; \n\n       let $q = this.gas.paramProcessor(params , this)\n\n       this.rslug = $p.get('request');\n\n       this.$link = `general-request/t/${this.rslug}`;\n\n       this.grs.rtype = this.rslug;\n\n        return this.getAllEntry($q); });\n\n  }\n\n  ngOnDestroy() : void {\n\n     if (this.entriesSearchedOb != null) this.entriesSearchedOb.unsubscribe();\n\n     if (this.clearSearchOb != null) this.clearSearchOb.unsubscribe();\n      \n     if (this.errorExistOb != null) this.errorExistOb.unsubscribe();\n  }\n\n  public getAllEntry(sq : SearchQuery) : void {\n\n   this.grs.getAllEntry(sq)\n  \n    .subscribe((result : GeneralRequest[]) => {\n\n      if (result == null) {\n\n        this.entries = [];\n\n        this.$entriesLength = 0;\n\n        this.isError = true;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry or Entries`} , this.ems.message); }\n\n      else if (result != null && result.length > 0) {\n\n         this.error = null;\n\n         this.isError = false;\n\n         this.$entriesLength = result.length;\n\n         this.entries = result; }\n\n      if (this.entries.length > 10) this.entries.pop(); });\n  }\n\n\n  public addEntryToDeleteList(gridx : number , checked : boolean , idx : number) : void {\n\n    this.gas.addEntryToDeleteList(gridx , checked , idx , this); }\n\n\n  public deleteManyEntry() : void {\n\n    this.gas.deleteManyEntry(this , this.grs); }\n\n  get userRole() : string {\n\n    return this.aus.userRole;\n  }\n\n  get canUpdateEntry() : boolean {\n\n    return canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n}\n","<div id ='entry-main'>\n\n<h2 *ngIf ='title'> {{title}}</h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-list-entry-options> </app-list-entry-options>\n\n\t\t<div class ='search-bar'>\n\n\t\t\t<app-search *ngIf ='systemType' [system-type] ='systemType' [$link] ='$link' [search-filters] ='searchFilters'> </app-search>\n\n\t\t<a class ='entry-option entry-option-small center' [class.hide] ='esdl.length < 2' (click) ='deleteManyEntry()'> Delete Many </a>\n\n</div>\n\n<div *ngIf ='$entriesLength > 0'>\n\n<table class ='entries'>\n\n\t<caption class ='bold left'> Entries </caption>\n\n\t<colgroup>\n\n\t\t<col class ='index'>\n\t\t<col class ='app-number'>\n\t\t<col class ='full-name'>\n\t\t<col class ='date'>\n\t\t<col class ='level'>\n\t\t<col class ='stdid'>\t\t\n\t\t<col class ='status'>\n\t\t<col class ='changes'>\n\n\t</colgroup>\n\n\t<thead>\n\n\t\t<tr>\n\t\t\t<th class ='bold center'> Index </th>\n\t\t\t<th class ='bold center'> Application Unique ID </th>\n\t\t\t<th class ='bold center'> Full Name </th>\n\t\t\t<th class ='bold center'> Date Created </th>\n\t\t\t<th class ='bold center'> Level </th>\n\t\t\t<th class ='bold center'> Student Identity No. </th>\n\t\t\t<th class ='bold center'> Status </th>\n\t\t\t<th class ='bold center'> Changes </th>\n\t\t</tr>\n\n\t</thead>\n\n\t<tbody [@listAnimation] ='entries.length'>\n\n\t\t<tr *ngFor ='let entry of entries , let i = index , trackBy : trackByAppNumber'>\n\n\t\t\t<td class ='center'> {{i + 1}}. </td>\n\n\t\t\t<ng-template #nilValue>\n\n\t\t\t\t<td class ='center'> Nil </td>\n\n\t\t\t</ng-template>\n\t\t\t\n\t\t\t<td class ='center bold app-number' *ngIf ='entry?.application_number; else nilValue'> {{entry?.application_number}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.author?.full_name; else nilValue'> {{entry?.author?.full_name}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.updated_on; else nilValue'> {{entry?.updated_on | date : 'longDate'}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.author?.level; else nilValue'> {{entry?.author?.level}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.author?.identity_number; else nilValue'> {{entry?.author?.identity_number}} </td>\n\n<td class ='center' *ngIf ='entry?.status; else nilValue' [ngClass] =\"{'rejected' : entry?.status == 'Rejected' , 'fulfilled' : entry?.status == 'Fulfilled' , 'update' : entry?.status == \n\n'Update' }\"> {{entry?.status}} </td>\n\n\t\t\t<td class =''>\n\n\t\t\t\t<a class ='center changes-option changes-option-full' [routerLink] =\"['../' , 'entry' , entry?.slug , 'detail']\"> View </a>\n\n\t\t\t\t<label *ngIf ='canUpdateEntry' class='changes-mark'>\n\n\t\t\t\t\t<ng-container *ngIf ='esdl.length; else normalChecks' >\n\n\t\t\t\t\t<ng-container *ngFor ='let $ed of esdl'>\n\n\t\t\t\t\t\t<input [checked] ='$ed == entry?.num' type ='checkbox' #checked (click) ='addEntryToDeleteList(entry?.num , checked.checked , i)'>\n\n\t\t\t\t  \t<span class='checkmark'> </span>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-template #normalChecks>\n\n\t\t\t\t  <input type ='checkbox' #checked  (click) ='addEntryToDeleteList(entry?.num , checked.checked , i)'>\n\n\t\t\t\t  <span class ='checkmark'> </span>\n\n\t\t\t\t </ng-template>\n\n\t\t\t\t</label>\n\t\t\t\n\t\t\t</td>\n\n\t\t</tr>\n\n\t\t</tbody>\n\n\t\t<tfoot>\n\n\t\t\t<tr>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\n\t\t\t<app-pagination *ngIf ='pageNumber' [entries-length] ='$entriesLength' [entry-ref] ='$entryRef' [page-number] ='pageNumber'> </app-pagination>\n\n\t\t\t</tr>\n\n\t\t</tfoot>\n\n\t</table>\n\n</div>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n</div>","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequest } from '../general-request';\nimport { GeneralRequestService } from '../general-request.service';\nimport { GeneralRequestFormService } from '../general-request-form.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { canUpdate } from '../roles';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-detail',\n\n  'templateUrl' : './general-request-entry-detail.component.html',\n\n  'styleUrls' : ['./general-request-entry-detail.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralRequestEntryDetailComponent implements OnInit {\n\n  constructor(public router : Router , private route : ActivatedRoute , public grs : GeneralRequestService , \n\n  \t\t\t\t\t\tpublic ns : NotificationService , public grfs : GeneralRequestFormService , public ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public generateCred : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralRequest;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  private eslug : string;\n\n  private rslug : string;\n\n  public entryStatuses : { [key : string] : any }[];\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false\n\n  public entryChangesT : any;\n\n  public entryForm : FormGroup;\n\n  public readyToSubmit : boolean;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.detail.systemType;\n\n    this.title = data.detail.title;\n\n    this.view = data.detail.view;  \n\n    this.viewWord = data.detail.viewWord;\n\n    this.link = data.detail.link;\n\n    this.generateCred = data.detail.generateCred;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            let $e = params.get('entry');\n\n            let $r = params.get('request');\n\n            this.rslug = $r;\n\n            this.eslug = $e;\n\n          \treturn this.grs.getEntry($r , $e); })\n        )\n          .subscribe((result : GeneralRequest) => {\n\n  \t\t\t\t\tif (result == null) { \n\n              this.isError = true;\n\n              this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n            else if (result != null) {\n\n    \t\t\t\t\tthis.entry = result;\n\n    \t\t\t\t\tthis.entryForm = this.grfs.entryUpdateForm(); } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  public updateEntry($entry : GeneralRequest) : void {\n\n\t\tthis.error = null;\n\n    this.isError = false;\n\n\t\tthis.isFormProcessing = true;\n\n\t\tthis.isFormSubmitted = true;\n\n\t\tthis.grs.updateEntry$(this.rslug , this.eslug , $entry)\n\n\t\t\t.subscribe((result : General) => {\n\n\t\t\t\tif (result == null) { this.isFormSubmitted = false;\n\n\t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} Entry is not updated.`); }\n\n\t\t\t\tif (result != null && result.updated == true) { this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} Entry is updated.`);\n\n\t\t\t\t\tthis.$entryChanges($entry.$data);\t}\t});\n  }\n\n  public $entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['general-request' , 't' , this.rslug , 'entries']); } , 5000) \n  }\n\n  public $confirmEntryOnReview(result : { [key : string] : any }) : void {\n\n   this.entry.status = result.status;\n\n  }\n\n  public openSubBtn(toSubmit : boolean) {\n\n    if (toSubmit == true) {\n\n      this.readyToSubmit = true; }\n\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  }\n\n  get canUpdateEntry() : boolean {\n\n  \treturn canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get isFormValid() : boolean {\n\n  \treturn this.entryForm.valid;\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n}\n","<div id ='entry-view'>\n\n\t<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n\t<div *ngIf ='entry' id ='request-entry-detail'>\n\n\t\t<app-request-entry-detail *ngIf ='entry' [entry] ='entry' [view] ='view' > </app-request-entry-detail>\n\n\t\t<app-request-entry-student-detail *ngIf ='entry' [entry] ='entry' > </app-request-entry-student-detail>\n\n\t\t<app-general-request-entry-option *ngIf ='entry' [view] ='view' [entry] ='entry' [link] ='link' [system-type] ='systemType' (onReviewEntry) ='$confirmEntryOnReview($event)'> </app-general-request-entry-option>\n\n\t\t<app-file-attachments-two *ngIf ='entry' [entry] ='entry'> </app-file-attachments-two>\n\n\t\t<ng-container *ngIf =\"entry != null && entry?.status != 'Pending' && entry?.status != 'Fulfilled' && entry?.status != 'Rejected'\">\n\n\t\t\t\t<ng-container *ngIf =\"canUpdateEntry\"> \n\n\t\t\t\t\t<div id ='entry-detail-form'>\n\n\t\t\t\t\t\t<form method ='post' [formGroup] ='entryForm' (ngSubmit) ='updateEntry(entryForm.value)'>\n\n\t\t<app-general-request-entry-update-field *ngIf ='entry' (on-submit-btn) ='openSubBtn($event)' [entry] ='entry' [entry-form] ='entryForm' [system-type] ='systemType'> </app-general-request-entry-update-field>\n\n\t\t<ng-container *ngIf ='readyToSubmit == true'>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'> Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</ng-container>\n\n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t</div>\n\n\t\t\t</ng-container>\n\n\t</ng-container>\n\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-request-homepage',\n\n  'templateUrl' : './general-request-homepage.component.html',\n\n  'styleUrls' : ['./general-request-homepage.component.css'] ,\n\n  'animations' : [slideInAnimation]\n\n})\n\nexport class GeneralRequestHomepageComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  getAnimationData(outlet: RouterOutlet) {\n\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n\n}\n","\n<router-outlet> </router-outlet>","import { Injectable , Inject } from '@angular/core';\nimport { Observable , of } from 'rxjs';\nimport { catchError , map , tap } from 'rxjs/operators';\nimport { HttpClient , HttpErrorResponse } from '@angular/common/http';\nimport { GeneralRequest } from './general-request';\nimport { General } from './general';\nimport { Api_Token , Api } from '../../configuration';\nimport { ErrorMessagesService } from '../../shared/services/error-messages.service';\n\n@Injectable()\n\nexport class GenerateUsernamePasswordService {\n\n  constructor(private http : HttpClient , @Inject(Api_Token) private apiConfig : Api , private ems : ErrorMessagesService) { \n\n  }\n\n  public createUsernamePassword$(credentials : General) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/request-credential/entry/create`;\n\n  \tlet httpOptions = { 'headers' : {'Content-Type' : 'application/json' } };\n\n  \treturn this.http.post<General>(link , credentials , httpOptions)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : GeneralRequest) => { return {'created' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<GeneralRequest>(`Credentials Entry` , null))\n        )\n  }\n\n  public createPassword$(credentials : General) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/request-password/entry/create`;\n\n    let httpOptions = { 'headers' : {'Content-Type' : 'application/json' } };\n\n    return this.http.post<General>(link , credentials , httpOptions)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : GeneralRequest) => { return {'created' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<GeneralRequest>(`Credentials Entry` , null))\n        )\n  }\n\n\n  private handleError<T>(operation = 'operation' , result? : T) {\n\n      return (error : HttpErrorResponse) : Observable<T> => { this.ems.message = error;\n\n                return of(result as T);\n\n      }\n  }\n\n\n}","import { Component , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap , Router } from '@angular/router';\nimport { FormGroup , FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { GeneralRequest } from '../general-request';\nimport { General } from '../general';\n\nimport { GeneralRequestService } from '../general-request.service';\nimport { ReplyCreateFormService } from '../../../shared/component/reply/reply-create-form.service';\nimport { ReplyCreateService } from '../../../shared/component/reply/reply-create.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\n\n@Component({\n\n  'selector' : 'app-general-request-create-reply',\n\n  'templateUrl' : './general-request-create-reply.component.html',\n\n  'styleUrls' : ['./general-request-create-reply.component.css'],\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralRequestCreateReplyComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private router : Router , private grs : GeneralRequestService ,\n\n              private rcfs : ReplyCreateFormService , private rcs : ReplyCreateService , private ems : ErrorMessagesService) {\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n\n  public entry : GeneralRequest;\n\n  public comment : General;\n\n  public eslug : string;\n\n  public rslug : string;\n\n  public cslug : string;\n\n  public isError : boolean = false\n\n  public error : { [key : string] : any };\n\n  public entryCreateForm : FormGroup;\n\n  public entryCreatedT : any;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.reply.systemType;\n\n    this.title = data.reply.title;\n\n    this.view = data.reply.view;\n\n    this.link = data.reply.link;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { \n\n            let $r = params.get('request');\n\n            let $e = params.get('entry');\n\n            let $c = params.get('comment');\n\n            this.rslug = $r;\n\n            this.eslug = $e;\n\n            this.cslug = $c;\n\n            return this.grs.addReply($r , $e , $c); })\n        )\n          .subscribe((result : General) => {\n\n            if (result == null) { this.isError = true;\n\n              this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n            else if (result != null && result.permitted == true) {\n\n            this.entry = result.$data.Entry;\n\n            this.comment = result.$data.Comment;\n\n            this.entryCreateForm = this.rcfs.entryCreateForm();\n\n            let authorName = this.comment.author.full_name;\n\n            this.entryCreateForm.patchValue({'comment_author_name' : authorName }); } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryCreatedT);\n  }\n\n  public createEntry(body : { [key : string] : any }) : void {\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.grs.addReply$(this.rslug , this.eslug , this.cslug , body)\n\n      .subscribe((result : General) => {\n\n        if (result == null) { this.rcs.isEntryCreated.next(false); }\n\n        if (result != null && result.updated == true) { this.rcs.isEntryCreated.next(true);\n\n         this.entryChanges(result.$data); } });\n  }\n\n\n  public entryChanges(data) : void {\n\n   this.entryCreatedT = setTimeout(() => {\n\n      return this.router.navigate(['general-request' , 't' , this.rslug , 'entries']); } , 5000) \n  }\n\n}\n","<div id ='general-entry'>\n\n\t<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error'> </app-resource-unavailable>\n\n<ng-container *ngIf ='entryCreateForm'>\n\n\t<app-entry-reply-create [system-type] ='systemType' [view] ='view' [entry] ='entry' [comment] ='comment' [entry-create-form] ='entryCreateForm' (processEntry) ='createEntry($event)' >\n\n\t</app-entry-reply-create>\n\n</ng-container>\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GeneralModule } from '../../general/general.module';\nimport { SimplesModule } from '../../shared/module/simples/simples.module';\nimport { PipesModule } from '../../shared/pipes/pipes.module';\nimport { RequestEntryModule } from '../../shared/component/request-entry/request-entry.module';\nimport { CommentModule } from '../../shared/component/comment/comment.module';\nimport { ReplyModule } from '../../shared/component/reply/reply.module';\nimport { GeneralAllModule } from '../../shared/module/general-all/general-all.module';\nimport { GeneralServicesModule } from '../../shared/services/general-services.module';\n\nimport { GeneralRequestRoutingModule } from './general-request-routing.module';\nimport { GeneralRequestHomepageComponent } from './general-request-homepage/general-request-homepage.component';\nimport { GeneralRequestDashboardComponent } from './general-request-dashboard/general-request-dashboard.component';\nimport { GeneralRequestEntryDashboardComponent } from './general-request-entry-dashboard/general-request-entry-dashboard.component';\nimport { GeneralRequestEntriesComponent } from './general-request-entries/general-request-entries.component';\nimport { GeneralRequestEntryDetailComponent } from './general-request-entry-detail/general-request-entry-detail.component';\nimport { GeneralRequestEntryTimelineComponent } from './general-request-entry-timeline/general-request-entry-timeline.component';\nimport { GeneralRequestCreateCommentComponent } from './general-request-create-comment/general-request-create-comment.component';\nimport { GeneralRequestCreateReplyComponent } from './general-request-create-reply/general-request-create-reply.component';\nimport { GeneralRequestEntryTransferComponent } from './general-request-entry-transfer/general-request-entry-transfer.component';\nimport { GeneralRequestEntryDeleteAllComponent } from './general-request-entry-delete-all/general-request-entry-delete-all.component';\nimport { GeneralRequestEntryOptionComponent } from './general-request-entry-option/general-request-entry-option.component';\nimport { GeneralRequestEntryUpdateFieldComponent } from './general-request-entry-update-field/general-request-entry-update-field.component';\nimport { GeneralRequestEntryGeneratePasswordComponent } from './general-request-entry-generate-password/general-request-entry-generate-password.component';\nimport { GeneralRequestEntryGenerateUsernamePasswordComponent } from './general-request-entry-generate-username-password/general-request-entry-generate-username-password.component';\nimport { GeneralRequestEntryCredentialValidatorComponent } from './general-request-entry-credential-validator/general-request-entry-credential-validator.component';\nimport { GeneralRequestEntryTransferValidatorComponent } from './general-request-entry-transfer-validator/general-request-entry-transfer-validator.component';\n\nimport { GenerateUsernamePasswordService } from './generate-username-password.service';\nimport { GeneralRequestService } from './general-request.service';\nimport { GeneralRequestFormService } from './general-request-form.service';\n\n@NgModule({\n\n  declarations: [\n\n  GeneralRequestHomepageComponent,\n  GeneralRequestDashboardComponent,\n  GeneralRequestEntryDashboardComponent,\n  GeneralRequestEntriesComponent,\n  GeneralRequestEntryDetailComponent,\n  GeneralRequestEntryTimelineComponent,\n  GeneralRequestCreateCommentComponent,\n  GeneralRequestCreateReplyComponent,\n  GeneralRequestEntryTransferComponent,\n  GeneralRequestEntryDeleteAllComponent,\n  GeneralRequestEntryOptionComponent,\n  GeneralRequestEntryUpdateFieldComponent,\n  GeneralRequestEntryGeneratePasswordComponent,\n  GeneralRequestEntryGenerateUsernamePasswordComponent,\n  GeneralRequestEntryCredentialValidatorComponent,\n  GeneralRequestEntryTransferValidatorComponent\n\n  ],\n\n  providers : [\n\n  GeneralRequestService,\n  GeneralRequestFormService,\n\tGenerateUsernamePasswordService\n  ] ,\n  \n  imports: [\n    CommonModule,\n    GeneralRequestRoutingModule,\n    ReactiveFormsModule,\n    GeneralModule,\n    GeneralAllModule,\n    RequestEntryModule,\n    CommentModule,\n    ReplyModule,\n    SimplesModule,\n    PipesModule,\n    GeneralServicesModule\n  ]\n\n})\n\nexport class GeneralRequestModule { \n\n}\n","import { Component , EventEmitter , Input , OnInit , Output } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { GeneralRequest } from '../general-request';\nimport { GeneralRequestService } from '../general-request.service';\nimport { GeneralRequestFormService } from '../general-request-form.service';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-update-field',\n\n  'templateUrl' : './general-request-entry-update-field.component.html',\n\n  'styleUrls' : ['./general-request-entry-update-field.component.css']\n\n})\n\nexport class GeneralRequestEntryUpdateFieldComponent implements OnInit {\n\n  constructor(private grs : GeneralRequestService , private grfs : GeneralRequestFormService) { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('entry-form') public entryForm : FormGroup;\n\n  @Input() public entry : GeneralRequest;\n\n  public estatuses : { [key : string] : any }[];\n\n  public isOtherColAvailable : boolean = false;\n\n  public eother : { [key : string] : any };\n\n  public otherOptions : FormControl = new FormControl('');\n\n  @Output('on-submit-btn') public setSubmitButton : EventEmitter<boolean> = new EventEmitter<boolean>(); \n\n\n  public otherCol() : void {\n\n    this.grs.status()\n\n      .subscribe((result : {[key : string] : any}) => {\n\n        if (result != null) {\n\n          this.isOtherColAvailable = true;\n\n           this.estatuses = result.Status;\n\n          this.eother = {'Status' : result.Status };\n\n          this.setSubmitButton.emit(true);\n\n          this.grfs.createPermanent(this.eother , this.entryForm); } });\n\n  }\n\n  get status() : FormControl {\n\n  \treturn this.entryForm.get('status') as FormControl;\n  }\n\n  get text() : FormControl {\n\n  \treturn this.entryForm.get('text') as FormControl;\n  }\n\n}\n","<ng-container *ngIf ='entry'>\n\n\t<h3 class ='center' > Request Options  </h3>\n\n<div [formGroup] ='entryForm'>\n\n\t\t\t<div id ='entry-detail-options'>\n\n\t\t\t\t<a *ngIf ='!isOtherColAvailable' (click) ='otherCol()' class ='center'> Update Application </a>\n\n\t\t</div>\n\n<ng-container *ngIf ='isOtherColAvailable == true'>\n\n<div class ='form-group' *ngIf ='status'>\n\n\t<label for ='status' class ='form-label bold'> Entry Status </label>\n\n\t<select name ='status' id ='status' class ='form-control' formControlName ='status'>\n\n\t\t<ng-container *ngIf ='estatuses != null'>\n\n\t\t\t<ng-container *ngIf ='entry?.status'>\n\n\t\t\t\t<option [value] =''> </option> \n\n\t\t\t\t<option *ngFor ='let status of estatuses' [value] ='status._id'> {{status.name}} </option> \n\n\t\t\t</ng-container>\n\n\t\t</ng-container>\n\n\t</select>\n\n\t<app-request-entry-update-validator *ngIf ='status' [system-type] ='systemType' [status] ='status'> </app-request-entry-update-validator>\n\n</div>\n\n\n\t<div class ='form-group' *ngIf ='text'>\n\n\t\t<label for ='text' class ='form-label bold'> Message </label>\n\n\t\t<textarea name ='text' id ='text' formControlName ='text'> </textarea>\n\n\t<app-request-entry-update-validator *ngIf ='text' [system-type] ='systemType' [text] ='text'> </app-request-entry-update-validator>\n\n\t</div>\n\n\t\t<div class ='form-group' *ngIf ='text'>\n\n\t\t<label for ='addition-input' class ='form-label bold'> Additional Input </label>\n\n\t<select name ='other-options' id ='addition-input' class ='form-control' [formControl] ='otherOptions'>\n\n\t\t\t\t<option value = ''> </option>\n\n\t\t\t\t<option value ='1'> Add Username and Password </option> \n\n\t\t\t\t<option value ='2'> Add Password </option> \n\n\t</select>\n\n</div>\n\n\t<ng-container [ngSwitch] ='otherOptions.value'>\n\n\t\t<ng-container *ngSwitchCase ='1'>\n\n\t\t<app-general-request-entry-generate-username-password *ngIf ='entry' [system-type] ='systemType' [entry] ='entry' [entry-form] ='entryForm'> </app-general-request-entry-generate-username-password>\n\n\t</ng-container>\n\n\t\t<ng-container *ngSwitchCase ='2'>\n\n\t\t<app-general-request-entry-generate-password *ngIf ='entry' [system-type] ='systemType' [entry] ='entry' [entry-form] ='entryForm'> </app-general-request-entry-generate-password>\n\n\t</ng-container>\n\n</ng-container>\n\n\t</ng-container>\n\t\t\n</div>\n\n</ng-container>","import { Component , Output , EventEmitter , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { GeneralRequest } from '../general-request';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { GeneralRequestService } from '../general-request.service';\nimport { canUpdate } from '../roles';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-option',\n\n  'templateUrl' : './general-request-entry-option.component.html',\n\n  'styleUrls' : ['./general-request-entry-option.component.css'] ,\n\n  'providers' : [NotificationService]\n\n})\n\nexport class GeneralRequestEntryOptionComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private aus : AuthenticationService , private grs : GeneralRequestService , private ns : NotificationService) { \n\n  }\n\n  ngOnInit() : void {\n\n    this.route.paramMap\n\n     .subscribe((params : ParamMap) => {\n\n       let $r = params.get('request');\n\n       this.rslug = $r; });\n  }\n\n  public rslug : string;\n\n  public isProcessingReview : boolean;\n\n  @Input('system-type') public systemType : string;\n\n  @Input() public view : string;\n\n  @Input() public link : string;\n\n  @Input() public entry : GeneralRequest;\n\n\n  @Output() public onReviewEntry : EventEmitter<string> = new EventEmitter<string>();\n\n\n  public setEntryOnReview(evt) : void {\n\n    evt.preventDefault();\n\n    evt.stopPropagation();\n\n    if (this.isProcessingReview != true) {\n\n    \tthis.isProcessingReview = true;\n\n  \tthis.grs.confirmEntryOnReview$(this.rslug , this.entry.slug)\n\n\t\t\t.subscribe((result : GeneralRequest) => {\n\n\t\t\t\tif (result == null) { this.isProcessingReview = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} Entry is not updated.`); }\n\n\t\t\t\tif (result != null && result.onReview == true) { this.isProcessingReview = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} Entry is updated and on review.`);\n\n\t\t\t\t\tthis.onReviewEntry.emit(result.$data); } }); }\n  }\n\n  get canUpdateEntry() : boolean {\n\n    return canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  } \n\n  get isAdmin() : string {\n\n      if (['moderator' , 'administrator' , 'superAdministrator'].indexOf(this.userRole) > -1) return '/general-request';\n\n      return '/general-request';\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n\n}\n","<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n\t<ng-container *ngIf ='entry'>\n\n\t\t<div id ='entry-detail-options'>\n\n\t\t<ng-container *ngIf =\"entry?.status == 'Review' || entry?.status == 'Update' || entry?.status == 'Fulfilled' || entry?.status == 'Rejected'\">\n\n\t\t\t<a [routerLink] =\"[isAdmin , 't' , rslug , 'entry' , entry?.slug , 'timeline']\" class ='center'> Timeline </a>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf =\"entry?.status == 'Pending'\">\n\n\t\t\t<ng-container *ngIf =\"canUpdateEntry\">\n\n\t\t\t\t<a class ='center' (click) ='setEntryOnReview($event)'> Set Application on Review </a>\n\n\t\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='isProcessingReview'>\n\n\t\t\t\t<p> Your request is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t\t</ng-container>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf = \"entry?.status == 'Review' || entry?.status == 'Update' || entry?.status == 'Transferred'\">\n\n\t\t\t<ng-container *ngIf =\"canUpdateEntry\">\n\n\t\t\t<a [routerLink] =\" [isAdmin , 't' , rslug ,  'entry' , entry?.slug , 'transfer'] \" class ='center'> Transfer or Move Request </a>\n\n\t\t\t</ng-container>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf =\"entry?.status == 'Update' || entry?.status == 'Transferred'\">\n\n\t\t\t<a [routerLink] =\" [isAdmin , 't' , rslug , 'entry' , entry?.slug , 'comment' , 'add'] \" class ='center'> Add a Comment </a>\t\t\t\t\n\n\t\t</ng-container>\n\n\t</div>\n\n\t</ng-container>","import { Injectable , Inject } from '@angular/core';\nimport { Observable , of } from 'rxjs';\nimport { catchError , delay , map , tap } from 'rxjs/operators';\nimport { HttpClient , HttpErrorResponse } from '@angular/common/http';\nimport { GeneralRequest } from './general-request';\nimport { General } from './general';\nimport { SearchQuery } from '../../general/search-query';\nimport { Api_Token , Api } from '../../configuration';\nimport { ErrorMessagesService } from '../../shared/services/error-messages.service';\n\n@Injectable()\n\nexport class GeneralRequestService {\n\n  constructor(private http : HttpClient , @Inject(Api_Token) private apiConfig : Api , private ems : ErrorMessagesService) { \n\n  }\n\n  public $systemType : string = 'General Request';\n\n  public $sa : string = 'general-request'; \n\n  public rtype : string;\n\n  public manageRequest() : Observable<General[]> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/manage`;\n\n    return this.http.get<General[]>(link)\n\n      .pipe(\n            tap((value : General[]) => console.log(value)) ,\n\n            catchError(this.handleError<General[]>(`Request Type Entries` , null))\n        )\n\n  }\n\n  public manageRequestEntry(entry : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/manage/t/${entry}`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n              tap((value : General) => console.log(value)) ,\n\n              catchError(this.handleError<General>(`Request Type Entry` , null))\n        )\n\n  }\n\n  public getAllEntry(params : SearchQuery) : Observable<GeneralRequest[]> {\n\n\t  let\tlink = `${this.apiConfig.host}/${this.$sa}/t/${this.rtype}/entries`;\n\n    let httpOptions = {'params' : params};\n\n    return this.http.get<GeneralRequest[]>(link , httpOptions)\n\n      .pipe(\n              tap((value : GeneralRequest[]) => console.log(value)) ,\n\n              catchError(this.handleError<GeneralRequest[]>(`${this.$systemType} Entries` , null))\n        )\n\n  }\n\n  public getEntry(rtype : string , entry : string) : Observable<GeneralRequest> {\n\n  \tlet\tlink = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/detail`;\n\n  \treturn this.http.get<GeneralRequest>(link)\n       \n       .pipe(\n\n          tap((entry : GeneralRequest) => console.log(entry)) ,\n\n          catchError(this.handleError<GeneralRequest>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public addComment(rtype : string , entry : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/comment`;\n\n    return this.http.get<GeneralRequest>(link)\n\n      .pipe(\n\n        tap((entry : GeneralRequest) => console.log(entry)) ,\n\n        map((entry : GeneralRequest) => { return {'permitted' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<GeneralRequest>(`${this.$systemType} Comment Entry` , null))\n\n        );\n  }\n\n  public addComment$(rtype : string , entry : string , comment : General) : Observable<General> {\n\n    let  link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/comment`;\n\n    return this.http.post<General>(link , comment)\n\n      .pipe(\n\n        tap((entry : General) => console.log(entry)) ,\n\n        map((entry : General) => { return { 'updated' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<General>(`${this.$systemType} Comment Entry` , null))\n\n        );\n  }\n\n  public addReply(rtype : string , entry : string , comment : string) : Observable<General> {\n\n    let  link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/comment/${comment}/reply`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n\n        tap((value) => {console.log(value)}),\n\n        map((entry : General) => { return {'permitted' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<GeneralRequest>(`${this.$systemType} Reply Entry` , null))\n\n        );\n  }\n\n  public addReply$(rtype : string , entry : string , comment : string , reply : General) : Observable<General> {\n\n    let  link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/comment/${comment}/reply`;\n\n    return this.http.post<GeneralRequest>(link , reply)\n\n      .pipe(\n\n        tap((value) => {console.log(value)}),\n\n        map((entry : General) => { return { 'updated' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<GeneralRequest>(`${this.$systemType} Reply Entry` , null))\n\n        );\n  }\n\n  public getTimeline(rtype : string , entry : string) : Observable<GeneralRequest> {\n\n    let  link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/timeline`;\n\n    return this.http.get<GeneralRequest>(link)\n\n      .pipe(\n\n            tap((value : GeneralRequest[]) => console.log(value)) ,\n\n            catchError(this.handleError<GeneralRequest>(`${this.$systemType} Entry Timeline` , null))\n        )\n  }\n\n  public updateEntry$(rtype : string , entry : string , request : GeneralRequest) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/detail`;\n\n    return this.http.put<GeneralRequest>(link , request)\n\n        .pipe(\n\n          map((entry : GeneralRequest) => { return { 'updated' : true , '$data' : entry }; }) ,\n\n          catchError(this.handleError<GeneralRequest>(`${this.$systemType} Entry` , null))\n\n          );\n  }\n\n  public confirmEntryOnReview$(rtype : string , entry : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/review`;\n\n    return this.http.put<GeneralRequest>(link , {'entry' : entry})\n\n      .pipe(\n\n        delay(5000) ,\n\n        map((entry : GeneralRequest) => { return { 'onReview' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<GeneralRequest>(`${this.$systemType} Entry` , null))\n\n        );\n  }\n\n  public status() : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/status`;\n\n    return this.http.get<General[]>(link)\n\n      .pipe(\n\n        catchError(this.handleError<General[]>(`${this.$systemType} Entry` , null))\n\n        );\n  }\n\n\n  public transferEntry(rtype : string , entry : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/transfer`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n\n        tap((value : General) => console.log(value)) ,\n\n        map((entry : General) => { return {'permitted' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<General>(`${this.$systemType} Entry` , null))\n\n        );\n  }\n\n  public transferEntry$(rtype : string , entry : string , request : GeneralRequest) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/entry/${entry}/transfer`;\n\n    return this.http.put<GeneralRequest>(link , request)\n\n      .pipe(\n\n        tap((value : GeneralRequest) => console.log(value)) ,\n\n        map((entry : GeneralRequest) => { return { 'updated' : true , '$data' : entry }; }) ,\n\n        catchError(this.handleError<GeneralRequest>(`${this.$systemType} Entry` , null))\n\n        );\n  }\n\n  public deleteManyEntry$(rtype : string , arrayIdx : number[]) : Observable<any> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/${this.rtype}/delete/entry/many`;\n\n    let body = {'entries' : arrayIdx};\n\n    return this.http.patch(link , body)\n\n      .pipe(\n\n        map((val) => { return {'manyDeleted' : true}; }) ,\n\n        catchError(this.handleError<GeneralRequest[]>(`${this.$systemType} Entries Delete` , null))\n\n        );\n  }\n\n  public deleteAllEntry(rtype : string) : Observable<any> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/${rtype}/delete/entry/all/`;\n\n    return this.http.get(link)\n\n      .pipe(\n\n        catchError(this.handleError<GeneralRequest[]>(`${this.$systemType} Entry or Entries Delete` , null))\n\n        );\n  }\n\n  public deleteAllEntry$(rtype : string) : Observable<General> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/$rtype/delete/entry/all/`;\n\n    return this.http.delete(link)\n\n      .pipe(\n\n        map((val) => { return {'allDeleted' : true}; }) ,\n\n        catchError(this.handleError<GeneralRequest[]>(`${this.$systemType} Entry or Entries Delete` , null))\n\n        );\n  }\n\n  private handleError<T>(operation = 'operation' , result? : T) {\n\n      return (error : HttpErrorResponse) : Observable<T> => { this.ems.message = error;\n\n                return of(result as T);\n\n      }\n  }\n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequest } from '../general-request';\n\nimport { GeneralRequestService } from '../general-request.service';\nimport { CommentCreateFormService } from '../../../shared/component/comment/comment-create-form.service';\nimport { CommentCreateService } from '../../../shared/component/comment/comment-create.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\n\n@Component({\n\n  'selector' : 'app-general-request-create-comment',\n\n  'templateUrl' : './general-request-create-comment.component.html',\n\n  'styleUrls' : ['./general-request-create-comment.component.css'],\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralRequestCreateCommentComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private router : Router , private grs : GeneralRequestService ,\n\n              private ccfs : CommentCreateFormService , private ccs : CommentCreateService , private ems : ErrorMessagesService) {\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralRequest;\n\n  public rslug : string;\n\n  public eslug : string;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  public entryCreateT : any;\n\n  public entryCreateForm : FormGroup;\n\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.comment.systemType;\n\n    this.title = data.comment.title;\n\n    this.view = data.comment.view;  \n\n    this.link = data.comment.link;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { \n\n            let $e = params.get('entry');\n\n            let $r = params.get('request');\n\n            this.rslug = $r;\n\n            this.eslug = $e;\n\n            return this.grs.addComment($r , $e); })\n        )\n          .subscribe((result : General) => {\n\n            if (result == null) { this.isError = true;\n\n              this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n            else if (result != null && result.permitted == true) {\n\n            this.entry = result.$data;\n\n            this.entryCreateForm = this.ccfs.entryCreateForm(); } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryCreateT);\n\n  }\n\n  public createEntry(body : { [key : string] : any }) : void {\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.grs.addComment$(this.rslug , this.eslug , body)\n\n      .subscribe((result : General) => {\n\n        if (result == null) { this.ccs.isEntryCreated.next(false); }\n\n        if (result != null && result.updated == true) { this.ccs.isEntryCreated.next(true);\n\n         this.entryChanges(result.$data); } });\n  }\n\n  public entryChanges(data) : void {\n\n    this.entryCreateT = setTimeout(() => {\n\n      return this.router.navigate(['general-request' , 't' , this.rslug , 'entries']);  } , 5000) \n  }\n}\n","<div id ='general-entry'>\n\n\t<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error'> </app-resource-unavailable>\n\n<ng-container *ngIf ='entryCreateForm'>\n\n\t<app-entry-comment-create [system-type] ='systemType' [view] ='view' [entry] ='entry' [entry-create-form] ='entryCreateForm' (processEntry) ='createEntry($event)' > </app-entry-comment-create>\n\n</ng-container>\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { FormControl , FormGroup , FormBuilder , Validators } from '@angular/forms';\nimport { dynamicDataValidator } from '../../shared/services/dynamic-control-validator';\nimport { General } from './general';\n\n@Injectable()\n\nexport class GeneralRequestFormService {\n\n  constructor(private fb : FormBuilder) { \n\n  }\n\n  public permanentData : any = {};\n\n  public permanentProps : { [key : string] : any[] } = {\n\n    'unit' : [Validators.required , Validators.max(90000000)] ,\n\n    'status' : [Validators.required , Validators.max(90000000)]\n\n  };\n\n  public otherCtrls : { [key : string] : any } = {\n\n  'request_type' : [Validators.required , Validators.max(10000000)] ,\n\n  'unit' : [Validators.required , Validators.max(10000000)] ,\n\n  'username' : [Validators.minLength(5) , Validators.maxLength(100)] ,\n\n  'password' : [Validators.minLength(5) , Validators.maxLength(100)]\n\n  }\n\n  public getPermanentProp(prop : string) : any {\n\n    return this.permanentProps[prop];\n  }\n\n  public removeControls(controls : string[] , form) : void {\n\n    if (controls != null && controls.length > 0) {\n\n    controls.forEach((control) => { let ctrl = form.get(control);\n\n      return ctrl ? form.removeControl(control) : null; }); }\n  }\n\n  public entryUpdateForm() : FormGroup {\n\n    let form = this.fb.group({\n\n      'text' : ['' , {'validators' : [Validators.required , Validators.minLength(10) , Validators.maxLength(500)] } ] ,\n\n      'status' : ['' , {'validators' : [...this.getPermanentProp('status')] } ] });\n\n      return form;\n  }\n\n    public entryTransferForm() : FormGroup {\n\n      let form = this.fb.group({\n\n        'text' : ['' , {'validators' : [Validators.required , Validators.minLength(10) , Validators.maxLength(500)] } ] ,\n\n        'unit' : ['' , {'validators' : [...this.getPermanentProp('unit')] } ] });\n\n        return form;\n  }\n\n  public createPermanent(datas : General , form : FormGroup) : void {\n\n    if (datas != null) {\n\n    for (let $prop in datas) {\n\n      let propVal = $prop.toLowerCase();\n\n      this.permanentData[propVal] = datas[$prop];\n\n      form.get(propVal) ? form.get(propVal).setValidators([...this.permanentProps[propVal] , dynamicDataValidator(this.getMyData(propVal) , $prop)]) : null;\n\n      form.get(propVal) ? form.get(propVal).updateValueAndValidity() : null;\n    }\n\n    form.updateValueAndValidity(); }\n\n  }\n\n  public getMyData(prop : string) : string[] {\n\n    return this.permanentData[prop];\n\n  }\n\n}\n\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralRequestOther } from '../request-others';\nimport { GeneralRequest } from '../general-request';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { GeneralRequestService } from '../general-request.service';\nimport { GeneralRequestFormService } from '../general-request-form.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { canUpdate } from '../roles';\n\n@Component({\n\n  'selector' : 'app-general-request-entry-transfer',\n\n  'templateUrl' : './general-request-entry-transfer.component.html',\n\n  'styleUrls' : ['./general-request-entry-transfer.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralRequestEntryTransferComponent implements OnInit {\n\n  constructor(private router : Router , private route : ActivatedRoute , private grs : GeneralRequestService , \n\n  \t\t\t\t\t\tpublic ns : NotificationService , private grfs : GeneralRequestFormService , private ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralRequest;\n\n  public generalOthers : any;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n\tprivate eslug : string;\n\n  public rslug : string;\n\n  public entryChangesT : any;\n\n\tpublic isFormSubmitted : boolean = false\n\n  public isFormProcessing : boolean = false\n\n  public entryForm : FormGroup;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.transfer.systemType;\n\n    this.title = data.transfer.title;\n\n    this.view = data.transfer.view;\n\n    this.viewWord = data.transfer.viewWord;\n\n    this.link = data.transfer.link;\n\n    this.grs.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => { \n\n            let $r = params.get('request');\n\n            let $e = params.get('entry');\n\n            this.eslug = $e;\n\n            this.rslug = $r;\n\n          \treturn this.grs.transferEntry($r , $e); })\n        )\n\t\t      .subscribe((result : { [key : string] : any }) => {\n\n\t\t\t\t\t\t\tif (result == null) { this.isError = true;\n\n                this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n              else if (result != null && result.permitted == true) {\n\n\t\t\t\t\t\t\tthis.entry = result.$data.Entry;\n\n\t\t\t\t\t\t\tthis.generalOthers = result.$data != null ? new GeneralRequestOther(result.$data) : {};\n\n\t\t\t\t\t\t\tthis.entryForm = this.grfs.entryTransferForm();\n\n\t\t          this.grfs.createPermanent(result.$data.Unit , this.entryForm); } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  public updateEntry(body : { [key : string] : any }) : void {\n\n\t\tthis.error = null;\n\n    this.isError = false;\n\n\t\tthis.isFormProcessing = true;\n\n\t\tthis.isFormSubmitted = true;\n\n\t\tthis.grs.transferEntry$(this.rslug , this.eslug , body)\n\n\t\t\t.subscribe((result : General) => {\n\n\t\t\t\tif (result == null) { this.isFormSubmitted = false;\n\n\t\t\t\t\tthis.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is unsuccessful and ${this.systemType} Entry is not updated.`); }\n\n\t\t\t\telse if (result != null && result.updated) { this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} Entry is updated and transferred.`);\n\n\t\t\t\t\treturn this.entryChanges(result.$data); } });\n  }\n\n  public entryChanges(data) {\n\n   this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['general-request' , 't' , this.rslug , 'entries']);  } , 5000) \n  }\n\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  }\n\n  get isFormValid() : boolean {\n\n  \treturn this.entryForm.valid;\n  }\n\n  get canUpdateEntry() : boolean {\n\n  \treturn canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get text() : FormControl {\n\n  \treturn this.entryForm.get('text') as FormControl;\n  }\n\n  get unit() : FormControl {\n\n  \treturn this.entryForm.get('unit') as FormControl;\n  }\n\n   public removeNotification() : void {\n\n     this.ns.removeNotification();\n   }\n\n}\n","<div id ='entry-view'>\n\n\t<h2> {{systemType}} Entry </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n\t<div *ngIf ='entry' id ='request-entry-detail'>\n\n\t\t<app-request-entry-detail *ngIf ='entry' [entry] ='entry'> </app-request-entry-detail>\n\n\t\t<ng-container *ngIf =\"entry && entry?.status != 'Pending' && entry?.status != 'Fulfilled' && entry?.status != 'Rejected'\">\n\n\t\t\t\t<ng-container *ngIf =\"canUpdateEntry\"> \n\n\t\t\t\t\t<div id ='transfer-form'>\n\n\t\t\t\t\t\t<h3 class ='center'> Request Options </h3>\n\n\t\t\t\t\t\t<form method ='post' [formGroup] ='entryForm' (ngSubmit) ='updateEntry(entryForm.value)'>\n\n\t\t\t\t\t\t\t<ng-container *ngIf ='generalOthers && generalOthers?.units != null && generalOthers?.units?.length > 0'>\n\n\t\t\t\t\t\t\t<div class ='form-group'>\n\n\t\t\t\t\t\t\t\t<label for ='unit' class ='form-label bold'> Set Request new Unit or Office * : </label>\n\n\t\t\t\t\t\t\t\t<select name ='unit' id ='unit' class ='form-control' required ='required' formControlName ='unit'>\n\n\t\t\t\t\t\t\t\t\t<option value =''> </option> \n\n\t\t\t\t\t\t\t\t\t<option *ngFor ='let unit of generalOthers?.units' [value] ='unit._id'> {{unit.name}} </option> \n\n\t\t\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t\t\t<app-general-request-entry-transfer-validator [unit] ='unit'> </app-general-request-entry-transfer-validator>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t\t\t<div *ngIf ='text' class ='form-group'>\n\n\t\t\t\t\t\t\t\t<label for ='text' class ='form-label bold'> Message </label>\n\n\t\t\t\t\t\t\t\t<textarea name ='text' id ='text' formControlName ='text'> </textarea>\n\n\t\t\t\t\t\t\t\t<app-request-entry-update-validator [text] ='text'> </app-request-entry-update-validator>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid'> Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t</div>\n\n\t\t\t</ng-container>\n\n\t</ng-container>\n\n\n</div>\n\n</div>\n"],"sourceRoot":"webpack:///"}