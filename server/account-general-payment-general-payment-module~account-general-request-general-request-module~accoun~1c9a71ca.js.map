{"version":3,"sources":["./src/app/general/view-description/view-description.component.ts","./src/app/general/view-description/view-description.component.html","./src/app/general/delete-all-entry/delete-all-entry.component.ts","./src/app/general/delete-all-entry/delete-all-entry.component.html","./src/app/general/general-form-validators/general-form-validators.component.ts","./src/app/general/general-form-validators/general-form-validators.component.html","./src/app/shared/services/notification.service.ts","./src/app/general/list-entry-options/list-entry-options.component.ts","./src/app/general/list-entry-options/list-entry-options.component.html","./src/app/shared/services/error-messages.service.ts","./src/app/general/notification-screen/notification-screen.component.ts","./src/app/general/notification-screen/notification-screen.component.html","./src/app/general/resource-unavailable/resource-unavailable.component.ts","./src/app/general/resource-unavailable/resource-unavailable.component.html","./src/app/general/general.module.ts","./src/app/shared/services/general-search.service.ts","./src/app/shared/services/form-validators.service.ts","./src/app/shared/services/general-services.module.ts","./src/app/general/general-form.service.ts","./src/app/general/search/search.component.ts","./src/app/general/search/search.component.html"],"names":[],"mappings":"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","file":"account-general-payment-general-payment-module~account-general-request-general-request-module~accoun~1c9a71ca.js","sourcesContent":["import { Component , OnInit , Input , ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-view-description',\n\n  'templateUrl' : './view-description.component.html',\n\n  'styleUrls': ['./view-description.component.css'] ,\n\n})\n\nexport class ViewDescriptionComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('view-type') public name : string = '';\n\n  @Input('view-description') set viewDesc(name : string) {\n\n    this.name = name;\n  }\n\n  public entries : { [key : string] : string };\n\n  get view() : string {\n\n    return this.entries[this.name];\n  } \n\n  ngOnInit() : void {\n\n    this.entries  = {\n\n    'aug' : `This section of the system allows you to perform administrator related actions such as adding a user , viewing and making changes to user and also analyzing the user statistics.` ,\n\n    'ca' : `Administrators are allowed to create user profiles which can perform actions in the system or use other processess to fulfill request when necessary.` ,\n\n    'gr' : `Users who are members of this system will be able to perform limited and to some extent administrative actions such as adding a request , deleting and update a request entry.\n\n            This section of the system will allows students primarilty to send request so that they can get it resolved by the appropriate department.` ,\n\n    'rf' : `All regular and part-time students are required to pay the school registration fees or dues which enables them to perform various activities like course registration,\n\n            checking of semester results, clearance, and other student school academic related activities. In the process of making payment, issues might arise such as \n\n            the case of an intermitent network that would result in double or more debit of a user bank account for the same service. If you are in this situation and you have (which you should) \n\n            necessary documents and evidences proving that your bank account was debited double or multiple times and want to request for a refund. You can fill in and submit the form below\n\n            to have it investigated and reviewed by the appropriate department for resolution.` ,\n\n    'dp' : `Student can make payment for departmental fees that is distinct to the school registration fees and acceptance fees. Students of each level from 100 to 500 are expected to \n\n            make payment for dues which comes with academic and social benefits. While this may not entice some student given what they might perceive as unsatisfaction. \n\n            A condition is enforced by the school board that failure to make this payment will mean a student is unable to graduate from the university. Although, students will be allowed \n\n            to make payment with no additional charges in comparison to the current normal charges. You can fill in the form and make payment and print your receipt after successful payment.` ,\n\n    'gp' : `Student can make payment for departmental fees that is distinct to the school registration fees and acceptance fees. Students of each level from 100 to 500 are expected to \n\n            make payment for dues which comes with academic and social benefits. While this may not entice some student given what they might perceive as unsatisfaction. \n\n            A condition is enforced by the school board that failure to make this payment will mean a student is unable to graduate from the university. Although, students will be allowed \n\n            to make payment with no additional charges in comparison to the current normal charges. You can fill in the form and make payment and print your receipt after successful payment.` ,\n\n    'fp' : `Student can make payment for faculty dues and fees that is distinct to the school registration fees and acceptance fees. Students of each level from 100 to 500 are expected to \n\n            make payment for dues which comes with academic and social benefits each academic session regularly. While this may not entice some student given what they might perceive as\n\n            unsatisfaction. A condition is enforced by the school board that failure to make this payment will mean a student is unable to graduate from the university. Although, students\n\n            will be allowed to make payment with no additional charges in comparison to the current normal charges. You can fill in the form and make payment and print your receipt after\n\n            successful payment.` ,\n\n    'uup' : `Users of the application or that are members of this system can update their account at anytime so they desire.\n\n            Changes once made are permanent for the moment and can still be changed later if desired by the user.` ,\n\n    'up' : `Users of the application or that are members of this system can update their account at anytime so they desire. Changes once made are permanent for the moment and can still be \n\n            changed later if desired by the user.` ,\n\n    'upv' : `Users of the application or that are members of this system can update their account at anytime so they desire. Changes once made are permanent for the moment and can still be \n\n            changed later if desired by the user.` ,\n\n    'cp' : `Users who are member of the system are allowed and free to change their existing password and replace it with a new one so as to protect their account from unauthorized access by \n\n            other users or an anonymous and then to protect from any kind of security breach.` ,\n\n    'udp' : `Users who are member of the system are allowed and free to deactivate their profile if they so wishes and will be allowed to reactivate their profiles so that they will continue\n\n            to be able to use the system and perform actions offered by the system.` ,\n\n    'urp' : `Users who are member of the system are allowed and free to reactivate their profile if they so wishesand will be allowed continue to be able to use the system and perform actions\n\n            offered by the system.` ,\n\n    'uadp' : `All user profiles if the button confirmed will result in total deletion from the system or database. It is advised you review your decision before pressing the confirmation button\n\n            which will remove or delete all user profiles or account from the system.` ,\n\n    'dup' : `User profile if the button confirmed will result in total deletion from the system or database. It is advised you review your decision before pressing the confirmation button\n\n            which will remove or delete user profile or account from the system.` ,\n\n    'cppas' : `Users or member of the system will be allowed and are free to change their existing signature and profile picture and replace it with a new one so that they can perform\n\n            other access efficiently and effectively.` ,\n\n    'ups' : `A list of users that are members of the system or application. Users with priveleges of a Super Administrator will be able to view and edit and also remove user profiles from \n\n            the system. He or she can also make analysis of the users that are registered with this system to be able to make important decisions which would make efficiently and effectively\n\n            the use of this system to the highest level.` ,\n\n    'pr' : `A user who have forgotten his or her password can provide his or her email address and get a chance to reset the profile password to the desired choice.` ,\n\n    'ud' : `A user who is a member of the system can view his or her dashboard to create requests and make payments. Examples of a request that a user can perform are rectification of issues\n\n            during academic course registration , in need of internet facility credentials for the first time and wanting to make payment for departmental and faculty fee.\n\n            All Users who are students are allowed to create a request else operation will be rejected.` ,\n\n    'general-entry' : `As a member of the system, you are eligible to make request and payment for different purpose as defined by the body of the school or institution.` ,\n\n    'upr' : `A user who is a member of the system can review his or her own profile and perform some of the following actions freely at any time of choosing.` ,\n\n    'gen-internal' : `This section of the system allows you to perform administrator and user related actions such as adding a ${this.systemType} , viewing and making changes \n\n                      to ${this.systemType} and also analyzing the ${this.systemType} statistics.`  \n\n  };\n  \n  }\n\n}\n","<p *ngIf ='name'> {{view}} </p>","import { Component , OnInit , Input } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-delete-all-entry',\n\n  'templateUrl' : './delete-all-entry.component.html',\n\n  'styleUrls' : ['./delete-all-entry.component.css']\n\n})\n\nexport class DeleteAllEntryComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  @Input('system-type') public systemType : string;\n\n  ngOnInit() : void {\n\n  }\n\n}\n","<p>All {{systemType}} entry if the button is confirmed will result in total deletion or exclusion from the system or database.\n\n  It is advised you review your decision before pressing the confirmation button which will remove or delete all {{systemType}} entry from the system.\n\n</p>","import { Component , Input , OnInit } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { fadeAnimation } from '../../animations';\n\n@Component({\n\n  'selector' : 'app-general-form-validators',\n\n  'templateUrl' : './general-form-validators.component.html',\n\n  'styleUrls' : ['./general-form-validators.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralFormValidatorsComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input() public search : FormControl;\n\n}\n","<ng-container *ngIf ='search'>\n\n<div @fadeAnimation *ngIf ='search.invalid && (search.touched || search.dirty)' class ='validation-error'>\n\n\t<ul>\n\n\t\t<li *ngIf ='search.errors?.required || search.errors?.searchError'> Search value of {{systemType}} should be either of the followings\n\n\t\t\t\t<ng-container *ngIf ='search.errors?.searchError?.searches'>  \n\n\t\t\t\t\t<ng-container *ngFor ='let sv of search.errors.searchError.searches , let lss = last'>\n\n\t\t\t\t\t\t{{sv}} <ng-container *ngIf ='lss else iAmNotLast'> . </ng-container>\n\n\t\t\t\t\t\t<ng-template #iAmNotLast>\n\n\t\t\t\t\t\t\t,\n\n\t\t\t\t\t\t</ng-template>\n\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</li>\n\n\t</ul>\n\n</div>\n\n</ng-container>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  \n  'providedIn' : 'root'\n\n})\n\nexport class NotificationService {\n\n  public notificationAvailable : boolean = false;\n\n  public notificationMessage : string = '';\n\n  constructor() { \n\n  }\n\n  public removeNotification() : void {\n\n     this.notificationAvailable = false;\n\n     this.notificationMessage = null\n  }\n\n  addNotification(message : string) : void {\n\n  \tthis.notificationMessage = message;\n  }\n\n  notificationStatus() : boolean {\n\n  \treturn this.notificationAvailable;\n  }\n\n  setNotificationStatus(status : boolean) : void {\n\n  \tthis.notificationAvailable = status;\n  }\n\n  getNotificationMessage() : string {\n\n  \treturn this.notificationMessage;\n  }\n\n}\n","import { Component , OnInit } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-list-entry-options',\n\n  'templateUrl' : './list-entry-options.component.html',\n\n  'styleUrls' : ['./list-entry-options.component.css']\n\n})\n\nexport class ListEntryOptionsComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n}\n","\t<div class ='entry-options'>\n\n\t\t<h3> Entries Options </h3>\n\n\t\t<p><b class ='bold'> Guidelines : </b> A member of the system can use the input field below to search for an entry or entries that exists in the  records. When the inputs becomes valid, the \n\n\t\t\"Submit\" button will become active by turning its color from black to purple. </p>\n\n\t\t<p> More than one entry can be deleted or removed at the same time from the database or records. When the cicle marker beside each entry far left is checked and highlighted in purple and the \n\n\t\t\tentries highlighted are at least 2, A button with the label \"Delete Many\" will display and become active so that the administrator or moderator or member with privilege can take action.</p>\n\n\t</div>","import { Injectable } from '@angular/core';\n\nimport { ErrorMessage } from '../interfaces/error-message';\n\nimport { Errors } from '../interfaces/general-errors';\n\n@Injectable()\n\nexport class ErrorMessagesService {\n\n\tprivate errorMessages = Errors;\n\n  constructor() { \n\n  }\n\n  get message() : any {\n\n  \t\treturn this.errorMessages.search;\n  }\n\n  set message(errors : any) {\n\n  \tthis.errorMessages.search = errors;\n\n  \tthis.errorMessages.search.statusText = errors.statusText;\n  }\n\n}\n","import { Component , ChangeDetectionStrategy , OnInit , Input , Output , EventEmitter } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-notification-screen',\n\n  'templateUrl' : './notification-screen.component.html',\n\n  'styleUrls' : ['./notification-screen.component.css'] ,\n\n  'changeDetection' : ChangeDetectionStrategy.OnPush\n\n})\n\nexport class NotificationScreenComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  public notificationAvailable : boolean;\n\n  public fadeIn : boolean;\n\n  public fadeOut : boolean;\n\n  @Output() public finished : EventEmitter<boolean> = new EventEmitter();\n\n  @Input('message') public notificationMessage : string;\n\n  @Input() set notified(confirmed : boolean) {\n\n  \tthis.notificationAvailable = confirmed;\n\n  \tif (confirmed) { this.fadeIn = true;\n\n\t\t\tthis.fadeOutNotification();\n\n  \t}\n\n  };\n\n\tget notified() {\n\n  \treturn this.notificationAvailable;\n  }\n\n  public fadeOutNotification() {\n\n    setTimeout(() => {\n\n      this.fadeIn = false;\n\n      this.fadeOut = true;\n\n      this.removeNotification();\n\n    } , 4000);\n  }\n\n  public removeNotification() {\n\n    setTimeout(() => {\n\n      this.finished.emit(true);\n\n    } , 4000)\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n}\n","<div id ='notification-parent'>\n\n\t<p *ngIf ='notificationAvailable' [class] ='{\"notification\" : true , \"fade-in\" : fadeIn , \"fade-out\" : fadeOut }' >\n\n\t{{notificationMessage}}\n\n</p>\n\n</div>","import { Component , ChangeDetectionStrategy , Input , OnInit } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-resource-unavailable',\n\n  'templateUrl' : './resource-unavailable.component.html',\n\n  'styleUrls' : ['./resource-unavailable.component.css'] ,\n\n  'changeDetection' : ChangeDetectionStrategy.OnPush\n\n})\n\nexport class ResourceUnavailableComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  public errorKeys : string[] = [];\n\n  public error : any;\n\n  @Input('error') public set $error(val : { [key : string] : any }) {\n\n    if (val.error) {\n\n      this.errorKeys = Object.keys(val.error);\n\n  \t  this.error = val;  }\n\n  };\n\n  ngOnInit() : void {\n  \n  }\n\n}\n","<ng-container *ngIf ='error'>\n\n<h3> An Error has occured </h3>\n\n<p> Resource : {{error.resource}} </p>\n\n<ng-container *ngIf ='error?.error?.message; else fieldErr'>\n\n<p [style.color] ='\"red\"'> Message : {{error.error.message}}</p>\n\n</ng-container>\n\n<ng-template #fieldErr>\n\n<ng-container *ngIf ='error?.error?.field; else otherErr'>\n\n<p [style.color] ='\"red\"'> Message : {{error.error.field.message}}</p>\n\n\t</ng-container>\n\n</ng-template>\n\n<ng-template #otherErr>\n\n<ng-container *ngIf ='error?.error && error.status && errorKeys?.length'>\n\n<h4>List of Errors : </h4>\n\n\t<ng-container *ngFor ='let fieldError of errorKeys'>\n\n\t<ul class ='validation-errors'>\n\n\t\t<li>{{error.error[fieldError]?.message}} </li>\n\n\t</ul>\n\n\t</ng-container>\n\n</ng-container>\n\n</ng-template>\n\n<p *ngIf ='error.status; else noStatusCode'> Status Code : {{error.status}} </p>\n\n<ng-template #noStatusCode>\n\n\t<p> Status Code : 00000 </p>\n\n\t</ng-template>\n\n<p *ngIf ='error.statusText != \"Unknown Error\"; else noStatusText'> Status Text : {{error.statusText}} </p>\n\n<ng-template #noStatusText>\n\n\t<p> Status Text : This is probably a network error or internal server error. Please check your internet connection or restart your browser and try again or refresh the page.</p>\n\n</ng-template>\n\n</ng-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ResourceUnavailableComponent } from './resource-unavailable/resource-unavailable.component';\nimport { NotificationScreenComponent } from './notification-screen/notification-screen.component';\nimport { ListEntryOptionsComponent } from './list-entry-options/list-entry-options.component';\nimport { DeleteAllEntryComponent } from './delete-all-entry/delete-all-entry.component';\nimport { ViewDescriptionComponent } from './view-description/view-description.component';\nimport { SearchComponent } from './search/search.component';\n\nimport { GeneralFormService } from './general-form.service';\nimport { GeneralServicesModule } from '../shared/services/general-services.module';\nimport { GeneralFormValidatorsComponent } from './general-form-validators/general-form-validators.component';\n\n\n@NgModule({\n\n  declarations: [\n\n      ResourceUnavailableComponent,\n      NotificationScreenComponent,\n      ListEntryOptionsComponent,\n      DeleteAllEntryComponent,\n      ViewDescriptionComponent,\n      SearchComponent,\n      GeneralFormValidatorsComponent,\n\t\t],\n\n  imports: [\n    CommonModule,\n    GeneralServicesModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([])\n  ],\n\n  exports : [\n    NotificationScreenComponent,\n    ResourceUnavailableComponent,\n    ListEntryOptionsComponent,\n    DeleteAllEntryComponent,\n    ViewDescriptionComponent,\n    SearchComponent\n\n  ] ,\n\n  providers : [\n\n    GeneralFormService\n  ]\n \n})\n\nexport class GeneralModule { \n\n}\n","import { Injectable , Inject } from '@angular/core';\n\nimport { Api_Token , Api  } from '../../configuration';\n\nimport { HttpClient , HttpParams , HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable , of , Subject } from 'rxjs';\n\nimport { map } from 'rxjs/operators';\n\nimport { catchError } from 'rxjs/operators';\n\nimport { ErrorMessagesService } from './error-messages.service';\n\nimport { SearchQuery } from '../interfaces/search-query';\n\nimport { General } from '../interfaces/general';\n\n@Injectable()\n\nexport class GeneralSearchService {\n\n  constructor(@Inject(Api_Token) private apiConfig : Api , private http : HttpClient , private ems : ErrorMessagesService) {\n\n  }\n\n  public $systemType : string;\n\n  public $sa : string;\n\n  public error : any;\n\n  public searchQuery : { [key : string] : any } = {};\n\n  public refreshing : boolean;\n\n\n  public searchTerm : Subject<{[key : string] : any }> = new Subject<{[key : string] : any }>();\n\n  public searchTerm$ = this.searchTerm.asObservable();\n\n\n\n  public entriesSearched : Subject<{[key : string] : any }> = new Subject<{[key : string] : any }>();\n\n  public entriesSearched$ = this.entriesSearched.asObservable();\n\n\n  public clearSearch : Subject<boolean> = new Subject<boolean>();\n\n  public clearSearch$ = this.clearSearch.asObservable();\n\n\n  public searchCleared : Subject<boolean> = new Subject<boolean>();\n\n  public searchCleared$ = this.searchCleared.asObservable();\n\n\n  public errorExist : Subject<boolean> = new Subject<boolean>();\n\n  public errorExist$ = this.errorExist.asObservable();\n\n\n  public searchTerms<T>(sq : SearchQuery , st : string , resource : string) : Observable<General> {\n\n  \tlet link = `${this.apiConfig.host}/${st}/entries`;\n\n  \tlet httpOptions = { 'params' : new HttpParams({'fromObject' : {...sq}})  };\n\n  \treturn this.http.get<General>(link , httpOptions).pipe(\n\n         catchError(this.handleError<General[]>(`${this.$systemType} Entries` , null))\n\n  \t\t);\n  }\n\n  private handleError<T>(operation = 'operation' , result? : T) {\n\n      return (error : HttpErrorResponse) : Observable<T> => { this.ems.message = error;\n\n                return of(result as T);\n\n      }\n  }\n\n\n}\n","import { AbstractControl , FormGroup , ValidatorFn , ValidationErrors } from '@angular/forms';\n\nimport { General } from '../interfaces/general';\n\n\nexport function searchValidator(filters? : General) : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let searches : string[] = Object.keys(filters);\n\n    let $searches : string[] = Object.values(filters);\n\n    let entry = control.value;\n\n    return entry != '' && searches.indexOf(entry) < 0 ? {'searchError' : {'value' : entry , 'searches' : $searches}} : null\n  }\n\n}\n\nexport function emailAddressValidator(emailAddress : RegExp) : ValidatorFn {\n\n\treturn (control : AbstractControl) : ValidationErrors | null => {\n\n\t\tconst email = emailAddress.test(control.value);\n\n\t\treturn !email ? {'email_address' : {'value' : control.value } } : null }\n}\n\n\nexport function statusValidator(filters? : General) : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let statuses : string[] = Object.keys(filters);\n\n    let $statuses : string[] = Object.values(filters);\n\n    let entry = control.value;\n\n    return statuses.indexOf(entry) < 0 ? {'statusError' : {'value' : entry , 'statuses' : $statuses}} : null\n  }\n\n}\n\nexport function numberValidator() : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let entry = control.value;\n\n      return Number.isInteger(entry) ? null : {'numError' : {'value' : entry.value}}\n  }\n\n}\n\nexport function abbreviationValidator() : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let entry = control.value;\n\n      return Number.isInteger(entry) ? null : {'abbreviationError' : {'value' : entry}}\n  }\n\n}\n\nexport function roleValidator() : ValidatorFn {\n\n  let $roles : string[] = ['Student' , 'Department President' , 'Faculty President' , 'Lecturer' , 'Staff' ,\n\n                  'Head of Department' , 'Dean of Faculty' , 'Bursar' , 'Moderator' , 'Administrator' , 'Super Administrator'];\n\n  let roles : RegExp = /moderator|administrator|superAdministrator|hod|deanstudent|departmentPresident|facultyPresident|bursar|lecturer|staff/i;\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let entry = control.value;\n\n    return roles.test(entry) ? {'roleError' : {'value' : entry , 'roles' : $roles}} : null\n  }\n\n}\n\nexport function forbiddenNamesValidator(name : RegExp) : ValidatorFn {\n\n  let $names : string[] = ['Student' , 'Department President' , 'Faculty President' , 'Lecturer' , 'Staff' ,\n\n                    'Head of Department' , 'Dean of Faculty' , 'Bursar' , 'Moderator' , 'Administrator' , 'Super Administrator'];\n\n  let names : RegExp = /moderator|administrator|superAdministrator|hod|deanstudent|departmentPresident|facultyPresident|bursar|lecturer|staff/i;\n\n  return (control : AbstractControl) : { [key : string] : any} | null => {\n\n    const forbidden = names.test(control.value);\n\n    return forbidden ? {forbiddenNames : {'value' : control.value , 'names' : $names} } : null }\n  }\n\n  export function firstLastNames() : ValidatorFn {\n\n  return (controlsAncestor : FormGroup) : ValidationErrors | null => {\n\n    const firstName = controlsAncestor.get('first_name');\n\n    const lastName = controlsAncestor.get('last_name');\n\n      return firstName && lastName && firstName.value == lastName.value ? {'bothNames' : {'value' : firstName.value + lastName.value } } : null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErrorMessagesService } from './error-messages.service';\nimport { NotificationService } from './notification.service';\nimport { GeneralSearchService } from './general-search.service';\n\n@NgModule({\n\n  declarations: [\n\n  ],\n  \n  imports: [\n    CommonModule,\n  ] ,\n\n  exports : [\n\n  ] ,\n\n  providers : [\n\n    ErrorMessagesService,\n    NotificationService,\n    GeneralSearchService,\n  ]\n\n\n\n})\n\nexport class GeneralServicesModule { \n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { searchValidator } from '../shared/services/form-validators.service';\n\nimport { General } from './general';\n\n@Injectable()\n\nexport class GeneralFormService {\n\n  constructor() { \n\n  }\n\n  public searchForm(searchFilters? : General ) : FormControl {\n\n    return new FormControl('' , [searchValidator(searchFilters)]);\n\n  }\n\n}\n","import { Component , EventEmitter , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject , Subscription } from 'rxjs';\nimport { debounceTime , distinctUntilChanged , switchMap } from 'rxjs/operators'; \nimport { GeneralSearchService } from '../../shared/services/general-search.service';\nimport { GeneralFormService } from '../general-form.service';\n\n@Component({\n\n  'selector' : 'app-search',\n\n  'templateUrl' : './search.component.html',\n\n  'styleUrls' : ['./search.component.css']\n\n})\n\nexport class SearchComponent implements OnInit {\n\n  constructor(private gss : GeneralSearchService , private gfs : GeneralFormService) {\n\n    this.searchClearedOb = this.gss.searchCleared$.subscribe((cleared : boolean) => {\n\n      this.refreshing = false; });\n\n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('search-filters') public searchFilters : { [key : string] : any };\n\n  @Input() public $link : string;\n\n  public refreshing : boolean;\n\n  public entrySearching : boolean;\n\n  public searchQuery : { [key : string] : any };\n\n  public entriesSearched : boolean;\n\n  public error : boolean;\n\n  public errorEmit : EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public clearSearchEmit : EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public searchTerm : Subject<{[key : string] : any }> = new Subject<{[key : string] : any }>();\n\n  public searchCtrl : FormControl;\n\n  public searchClearedOb : Subscription;\n\n  ngOnInit() : void {\n\n    this.searchCtrl = this.gfs.searchForm(this.searchFilters);\n\n    this.searchTerm.pipe(\n\n      debounceTime(4000) ,\n\n      distinctUntilChanged() ,\n\n      switchMap((query : { [key : string] : string }) => { return this.gss.searchTerms<{ [key : string] : string }[]>(query , this.$link , `${this.systemType} Entries`); })  )\n\n    .subscribe((result : { [key : string] : any }[]) => { \n\n      this.entrySearching = false;\n\n      this.refreshing = false;\n\n      this.entriesSearched = true;\n\n     \tthis.gss.entriesSearched.next(result);\t});\n  \n  }\n\n  ngOnDestroy() : void {\n\n    this.searchClearedOb.unsubscribe();\n\n    this.searchTerm.unsubscribe();\n  }\n\n\n  public searchEntry(qt : string , qv : string) : boolean | void {\n\n    this.gss.errorExist.next(false);\n\n    this.entriesSearched = false;\n\n    if (!qt.trim() || (Object.keys(this.searchFilters).indexOf(qt) < 0)) { return false; }\n\n    this.entrySearching = true;\n\n    this.gss.searchQuery = { [qt] : qv };\n\n    this.searchTerm.next(this.gss.searchQuery);\n  }\n\n\n\n  public clearSearch() : void {\n\n    this.gss.searchQuery = {};\n\n    this.entriesSearched = false;\n\n    this.refreshing = true;\n\n    this.gss.clearSearch.next(true);\n\n    this.gss.errorExist.next(false);\n \n  }\n\n\n\n\n  public validSearch(qt) {\n\n    return Object.keys(this.searchFilters).indexOf(qt) < 0;\n  }\n\n  get search() : FormControl {\n\n    return this.searchCtrl;\n  }\n\n}\n","\t\t<div class ='search-bar'>\n\n\t\t\t<h4 class ='left'> Search {{systemType}} Entry </h4>\n\n\t\t\t\t<select class ='form-control' id ='query' name ='queryType' [formControl] ='search' #qt>\n\n\t\t\t\t\t<option value =''> Search Criteria </option>\n\n\t\t\t\t\t<ng-container *ngFor ='let opt of searchFilters | keyvalue'>\n\n\t\t\t\t\t\t<option value ='{{opt.key}}'> {{opt.value}} </option>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</select>\n\n\t\t\t\t<app-general-form-validators *ngIf ='search' [search] ='search' [system-type] ='systemType' (keyup) ='0' > </app-general-form-validators>\n\n\t\t\t\t<input type ='text' name ='queryValue' value ='' autocomplete ='new-queryValue' (keyup) = '0' #qv>\n\n\t\t\t\t<button type ='submit' class ='btn-submit entry-option-small' [class] ='{\"btn-search\" : qv.value && !validSearch(qt.value) , \"disabled\" : !qv.value || validSearch(qt.value)}'\n\n\t\t\t\t(click) ='searchEntry(qt.value , qv.value)'> Submit </button>\n\n\t\t\t\t<button *ngIf ='entriesSearched' class ='btn-submit' (click) ='clearSearch(); qv.value =\"\"; qt.value = \"\"; '> Clear Search </button>\n\n\t\t\t\t<p *ngIf ='entrySearching'> Searching for entry or entries from the records. <span class ='rolling'> ||| </span> </p>\n\n\t\t\t\t<p *ngIf ='refreshing'> Refreshing list of entries from the records. <span class ='rolling'> ||| </span> </p>\n\n</div>"],"sourceRoot":"webpack:///"}