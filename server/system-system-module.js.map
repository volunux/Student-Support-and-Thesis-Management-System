{"version":3,"sources":["./src/app/shared/guards/is-admin.guard.ts","./src/app/system/system-dashboard/system-dashboard.component.ts","./src/app/system/system-dashboard/system-dashboard.component.html","./src/app/shared/guards/account-status.guard.ts","./src/app/system/system/system.component.ts","./src/app/system/system/system.component.html","./src/app/shared/guards/authentication.guard.ts","./src/app/system/system.module.ts","./src/app/system/system-routing.module.ts"],"names":[],"mappings":"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","file":"system-system-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate , CanActivateChild , CanLoad , ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree , Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class IsAdminGuard implements CanActivate {\n\t\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\n\t}\n\n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    return this.verifyMemberPrivilege();\n  }\n\n  public verifyMemberPrivilege() : boolean | UrlTree {\n\n  \tlet role = this.aus.userMinorDetails.role;\n\n  \tlet allowedMembers = ['moderator' , 'administrator' , 'superAdministrator'];\n\n  \tif (allowedMembers.indexOf(role) < 0) { this.router.navigate(['unauthorized']);\n\n  \t\treturn false;\t}\n\n  \telse { return true; }\n\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad() : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.verifyMemberPrivilege();\n\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\n  'selector' : 'app-system-dashboard',\n\n  'templateUrl' : './system-dashboard.component.html',\n\n  'styleUrls' : ['./system-dashboard.component.css']\n\n})\n\nexport class SystemDashboardComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  public title : string = 'System Dashboard';\n\n  public view : string = 'upr';\n\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<p>Only Administrators and Moderators are allowed to perform an action within this part of the system. Anybody with a privilege less than an Administrator and Moderator are not allowed or permitted to make permanent or temporary changes to the records available in the system. In this dashboard, the Administrator and Moderator will be able to monitor and evaluate entries that are specifically meant for internal decision making to drive the system development and entries that have been made by the user for the purpose the system have been created for.</p> \n\n<div id ='dashboard'>\n\n<ul>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"internal\" , \"user\"]' class ='center'>Manage Users</a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/general-request\"]' class ='center'>Manage Request</a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/general-payment\"]' class ='center'>Manage Payment</a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/refund\"]' class ='center'>Manage Refund</a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"internal\"]' class ='center'>Manage Internals</a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"statistics\"]' class ='center'>Manage Statistics</a>\n\n\t</li>\t\n\n</ul>\n\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate , CanActivateChild , CanLoad , ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree , Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\nexport class AccountStatusGuard implements CanActivate {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\t}\n\n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return true;\n  }\n\n  public verifyMemberStatus() : boolean | UrlTree {\n\n\t\t\tlet status = this.aus.userStatus;\n\n\t\t\tif (status == 'pending') { this.router.navigate(['unauthorized']);\n\n\t\t\t\treturn false;\t}\n\n\t\t\t\telse {\treturn true;\t}\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : boolean | UrlTree {\n\n  \treturn this.verifyMemberStatus();\n  }\n  \n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\n  selector: 'app-system',\n\n  templateUrl: './system.component.html',\n\n  styleUrls: ['./system.component.css']\n\n})\n\nexport class SystemComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  public title : string = 'System';\n\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot , CanActivate , CanActivateChild , CanLoad , Route , RouterStateSnapshot , UrlTree , Router } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class AuthenticationGuard implements CanActivate , CanActivateChild , CanLoad {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\n\t}\n  \n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n  \tconst url : string = state.url;\n\n    return this.verifyLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route : Route) {\n\n    const url : string = route.path;\n\n    return this.verifyLogin(url);\n  }\n\n  public verifyLogin(url : string) : boolean | UrlTree {\n\n      if (this.aus.isLoggedIn()) { return true; }\n\n      else { this.aus.redirectAddress = url;\n\n        return this.router.parseUrl('/signin');\n\n      }\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SystemRoutingModule } from './system-routing.module';\nimport { SystemComponent } from './system/system.component';\nimport { SystemDashboardComponent } from './system-dashboard/system-dashboard.component';\n\n\n@NgModule({\n  declarations: [\n\n  \tSystemComponent,\n  \tSystemDashboardComponent,\n \t],\n  \n  imports: [\n    CommonModule,\n    SystemRoutingModule,\n  ]\n})\nexport class SystemModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from '../shared/guards/authentication.guard';\nimport { IsAdminGuard } from '../shared/guards/is-admin.guard'\nimport { AccountStatusGuard } from '../shared/guards/account-status.guard';\n\nimport { SystemComponent } from './system/system.component';\nimport { SystemDashboardComponent } from './system-dashboard/system-dashboard.component';\n\nconst routes: Routes = [\n\t\n\t{'path' : '' ,\n\n\t\t'component' : SystemComponent ,\n\n\t\t'canActivate' : [AuthenticationGuard , AccountStatusGuard , IsAdminGuard] ,\n\n\t\t'canLoad' : [IsAdminGuard] ,\n\n\t\t'children' : [\n\n\t\t\t{\n\t\t\t\t'path' : '' ,\n\n\t\t\t\t'canActivateChild' : [AuthenticationGuard , AccountStatusGuard , IsAdminGuard] ,\n\n\t\t\t\t'children' : [\n\n\t\t\t\t\t{'path' : '' , 'component' : SystemDashboardComponent } ,\n\n\t\t\t\t\t{'path' : 'internal' , 'loadChildren' : () => import('./internal/internal.module').then(m => m.InternalModule) } ,\n\n\t\t\t\t\t// {'path' : 'statistics' , 'loadChildren' : () => import('./statistics/statistics.module').then(m => m.StatisticsModule) } ,\n\n\t\t\t\t\t// {'path' : 'thesis' , 'loadChildren' : () => import('./internal-thesis/internal-thesis.module').then(m => m.InternalThesisModule) } ,\n\n\t\t\t\t]\n\n\t\t\t}\n\n\t\t] }\n\n];\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule]\n\n})\n\nexport class SystemRoutingModule { \n\n}\n"],"sourceRoot":"webpack:///"}