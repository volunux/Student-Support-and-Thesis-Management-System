{"version":3,"sources":["./src/app/account/general-payment/general-payment-entries/general-payment-entries.component.ts","./src/app/account/general-payment/general-payment-entries/general-payment-entries.component.html","./src/app/account/general-payment/general-payment-homepage/general-payment-homepage.component.ts","./src/app/account/general-payment/general-payment-homepage/general-payment-homepage.component.html","./src/app/shared/pipes/replace-line-break.pipe.ts","./src/app/account/general-payment/general-payment-entry-create-validator/general-payment-entry-create-validator.component.ts","./src/app/account/general-payment/general-payment-entry-create-validator/general-payment-entry-create-validator.component.html","./src/app/account/general-payment/general-payment-route-data.ts","./src/app/shared/pipes/pipes.module.ts","./src/app/account/general-payment/general-payment-entry-receipt/general-payment-entry-receipt.component.ts","./src/app/account/general-payment/general-payment-entry-receipt/general-payment-entry-receipt.component.html","./src/app/account/general-payment/general.ts","./src/app/account/general-payment/general-payment-dashboard/general-payment-dashboard.component.ts","./src/app/account/general-payment/general-payment-dashboard/general-payment-dashboard.component.html","./src/app/shared/pipes/replace-tabs.pipe.ts","./src/app/account/general-payment/general-payment.service.ts","./src/app/account/general-payment/general-payment-entry-delete-all/general-payment-entry-delete-all.component.ts","./src/app/account/general-payment/general-payment-entry-delete-all/general-payment-entry-delete-all.component.html","./src/app/shared/pipes/proposed-credential.pipe.ts","./src/app/account/general-payment/general-payment-entry-detail/general-payment-entry-detail.component.ts","./src/app/account/general-payment/general-payment-entry-detail/general-payment-entry-detail.component.html","./src/app/account/general-payment/general-payment-form.service.ts","./src/app/account/general-payment/general-payment-form-validator.service.ts","./src/app/account/general-payment/general-payment-routing.module.ts","./src/app/shared/guards/is-student.guard.ts","./src/app/shared/pipes/acronym.pipe.ts","./src/app/shared/guards/authentication.guard.ts","./src/app/account/general-payment/roles.ts","./src/app/account/general-payment/general-payment-entry-create/general-payment-entry-create.component.ts","./src/app/account/general-payment/general-payment-entry-create/general-payment-entry-create.component.html","./src/app/account/general-payment/general-payment.module.ts","./src/app/account/general-payment/general-payment-entry-dashboard/general-payment-entry-dashboard.component.ts","./src/app/account/general-payment/general-payment-entry-dashboard/general-payment-entry-dashboard.component.html","./src/app/account/general-payment/general-payment-entry-verification/general-payment-entry-verification.component.ts","./src/app/account/general-payment/general-payment-entry-verification/general-payment-entry-verification.component.html"],"names":[],"mappings":"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","file":"account-general-payment-general-payment-module.js","sourcesContent":["import { Component , Input , OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { General } from '../general';\nimport { SearchQuery } from '../../../general/search-query';\nimport { GeneralPayment } from '../general-payment';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { GeneralPaymentFormService } from '../general-payment-form.service';\nimport { GeneralSearchService } from '../../../shared/services/general-search.service';\nimport { GeneralAllService } from '../../../shared/module/general-all/general-all.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { canUpdate } from '../roles';\nimport { listAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-payment-entries',\n\n  'templateUrl' : './general-payment-entries.component.html',\n\n  'styleUrls' : ['./general-payment-entries.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService , GeneralSearchService , GeneralAllService] ,\n\n  'animations' : [listAnimation]\n\n})\n\nexport class GeneralPaymentEntriesComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private location : Location ,\n\n              private gps : GeneralPaymentService , private gss : GeneralSearchService , private gas : GeneralAllService ,\n\n              private ems : ErrorMessagesService , private ns : NotificationService , private aus : AuthenticationService) { \n\n    this.entriesSearchedOb = this.gss.entriesSearched$.subscribe((result : GeneralPayment[]) => {\n\n      this.location.replaceState(`/general-payment/t/${this.pslug}/entries`);\n\n      this.pageNumber = 1;\n\n      if (result == null) {\n\n        this.entries = [];\n\n        this.$entriesLength = 0;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry or Entries`} , this.ems.message); \n\n        this.isError = true; }\n\n      else if (result != null && result.length > 0) {\n\n      this.error = null;\n\n      this.isError = false;\n\n      this.$entriesLength = result.length;\n\n      this.entries = result;\n\n      if (this.entries.length <= 10) this.pageNumber = 1;\n\n      if (this.entries.length > 10) this.entries.pop(); } });\n\n    this.clearSearchOb = this.gss.clearSearch$.subscribe((cleared : boolean) => {\n\n      this.clearSearch$(); });\n\n    this.errorExistOb = this.gss.errorExist$.subscribe((exists : boolean) => {\n\n      this.isError = exists; });\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public searchFilters : { [key : string] : string };\n\n  public entries : GeneralPayment[] = [];\n\n  public error : General;\n\n  public isError : boolean = false;\n\n  public esdl : number[] = [];\n\n  public p$esdl : boolean = false;\n\n  public pageNumber : number = 1;\n\n  public eslug : string;\n\n  public pslug : string;\n\n  public $entriesLength : number = 0;\n\n  public $entryRef : any;\n\n  public $link : string;\n\n  public clearSearchOb : Subscription;\n\n  public errorExistOb : Subscription;\n\n  public entriesSearchedOb : Subscription;\n\n  public searchErr$(err) {\n\n    this.error = null;\n\n    this.isError = false;\n  }\n\n  public clearSearch$() : void {\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.pageNumber = 1;\n\n    this.location.replaceState(`/general-payment/t/${this.pslug}/entries`);\n\n    this.gss.searchCleared.next(true);\n\n    this.getAllEntry({}); }\n\n\n  public trackByPaymentRef(idx : number , entry : GeneralPayment) : string {\n\n      return entry.payment_reference;\n  }\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.entries.systemType;\n\n    this.title = data.entries.title;\n\n    this.view = data.entries.view;\n\n  \tthis.link = data.entries.link;\n\n  \tthis.searchFilters = data.entries.searchFilters;\n\n    this.gps.$systemType = this.systemType;\n\n     this.route.queryParamMap.subscribe((params : ParamMap) => {\n\n       let $p = this.route.snapshot.paramMap; \n\n       let $q = this.gas.paramProcessor(params , this)\n\n       this.pslug = $p.get('payment');\n\n       this.$link = `general-payment/t/${this.pslug}`;\n\n       this.gps.ptype = this.pslug;\n\n        return this.getAllEntry($q); });\n\n  }\n\n  ngOnDestroy() : void {\n\n     if (this.entriesSearchedOb != null) this.entriesSearchedOb.unsubscribe();\n\n     if (this.clearSearchOb != null) this.clearSearchOb.unsubscribe();\n      \n     if (this.errorExistOb != null) this.errorExistOb.unsubscribe();\n  }\n\n  public getAllEntry(sq : SearchQuery) : void {\n\n   this.gps.getAllEntry(sq)\n  \n    .subscribe((result : GeneralPayment[]) => {\n\n      if (result == null) {\n\n        this.entries = [];\n\n        this.$entriesLength = 0;\n\n        this.isError = true;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry or Entries`} , this.ems.message); }\n\n      else if (result != null && result.length > 0) {\n\n         this.error = null;\n\n         this.isError = false;\n\n         this.$entriesLength = result.length;\n\n         this.entries = result; }\n\n      if (this.entries.length > 10) this.entries.pop(); });\n  }\n\n\n  public addEntryToDeleteList(gridx : number , checked : boolean , idx : number) : void {\n\n    this.gas.addEntryToDeleteList(gridx , checked , idx , this); }\n\n\n  public deleteManyEntry() : void {\n\n    this.gas.deleteManyEntry(this , this.gps); }\n\n  get userRole() : string {\n\n    return this.aus.userRole;\n  }\n\n  get canUpdateEntry() : boolean {\n\n    return canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n    this.ns.removeNotification();\n  }\n\n}\n","<div id ='entry-main'>\n\n<h2 *ngIf ='title'> {{title}}</h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n<app-list-entry-options> </app-list-entry-options>\n\n\t\t<div class ='search-bar'>\n\n\t\t\t<app-search *ngIf ='systemType' [system-type] ='systemType' [$link] ='$link' [search-filters] ='searchFilters'> </app-search>\n\n\t\t<a class ='entry-option entry-option-small center' [class.hide] ='esdl.length < 2' (click) ='deleteManyEntry()'> Delete Many </a>\n\n</div>\n\n<div *ngIf ='$entriesLength > 0'>\n\n<table class ='entries'>\n\n\t<caption class ='bold left'> Entries </caption>\n\n\t<colgroup>\n\n\t\t<col class ='index'>\n\t\t<col class ='payment-reference'>\n\t\t<col class ='full-name'>\n\t\t<col class ='amount'>\n\t\t<col class ='fee-department'>\n\t\t<col class ='paid-on'>\t\t\n\t\t<col class ='status'>\n\t\t<col class ='changes'>\n\n\t</colgroup>\n\n\t<thead>\n\n\t\t<tr>\n\t\t\t<th class ='bold center'> Index </th>\n\t\t\t<th class ='bold center'> Payment Reference No. </th>\n\t\t\t<th class ='bold center'> Full Name </th>\n\t\t\t<th class ='bold center'> Session </th>\n\t\t\t<th class ='bold center'> Department </th>\n\t\t\t<th class ='bold center'> Paid On </th>\n\t\t\t<th class ='bold center'> Status </th>\n\t\t\t<th class ='bold center'> Changes </th>\n\t\t</tr>\n\n\t</thead>\n\n\t<tbody [@listAnimation] ='entries.length'>\n\n\t\t<tr *ngFor ='let entry of entries , let i = index , trackBy : trackByPaymentRef'>\n\n\t\t\t<td class ='center'> {{i + 1}}. </td>\n\n\t\t\t<ng-template #nilValue>\n\n\t\t\t\t<td class ='center'> Nil </td>\n\n\t\t\t</ng-template>\n\t\t\t\n\t\t\t<td class ='center bold payment-ref' *ngIf ='entry?.payment_reference; else nilValue'> {{entry?.payment_reference}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.full_name; else nilValue'> {{entry?.full_name}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.payment_session; else nilValue'> {{entry?.payment_session}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.department; else nilValue'> {{entry?.department}} </td>\n\n\t\t\t<td class ='center' *ngIf ='entry?.paid_on; else nilValue'> {{entry?.paid_on | date : 'longDate'}} </td>\n\n<td class ='center' *ngIf ='entry?.status; else nilValue' [ngClass] =\"{}\"> {{entry?.status}} </td>\n\n\t\t\t<td class =''>\n\n\t\t\t\t<a class ='center changes-option changes-option-full' [routerLink] =\"['../' , 'entry' , entry?.slug , 'detail']\"> View </a>\n\n\t\t\t\t<label *ngIf ='canUpdateEntry' class='changes-mark'>\n\n\t\t\t\t\t<ng-container *ngIf ='esdl.length; else normalChecks' >\n\n\t\t\t\t\t<ng-container *ngFor ='let $ed of esdl'>\n\n\t\t\t\t\t\t<input [checked] ='$ed == entry?.num' type ='checkbox' #checked (click) ='addEntryToDeleteList(entry?.num , checked.checked , i)'>\n\n\t\t\t\t  \t<span class='checkmark'> </span>\n\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-template #normalChecks>\n\n\t\t\t\t  <input type ='checkbox' #checked  (click) ='addEntryToDeleteList(entry?.num , checked.checked , i)'>\n\n\t\t\t\t  <span class ='checkmark'> </span>\n\n\t\t\t\t </ng-template>\n\n\t\t\t\t</label>\n\t\t\t\n\t\t\t</td>\n\n\t\t</tr>\n\n\t\t</tbody>\n\n\t\t<tfoot>\n\n\t\t\t<tr>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t\t<td></td>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\n\t\t\t<app-pagination *ngIf ='pageNumber' [entries-length] ='$entriesLength' [entry-ref] ='$entryRef' [page-number] ='pageNumber'> </app-pagination>\n\n\t\t\t</tr>\n\n\t\t</tfoot>\n\n\t</table>\n\n</div>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-payment-homepage',\n\n  'templateUrl' : './general-payment-homepage.component.html',\n\n  'styleUrls' : ['./general-payment-homepage.component.css'] ,\n\n  'animations' : [slideInAnimation]\n\n})\nexport class GeneralPaymentHomepageComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() : void {\n  \n  }\n\n  public getAnimationData(outlet: RouterOutlet) : any {\n\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n\n}\n","\n<router-outlet> </router-outlet>","import { Pipe , PipeTransform } from '@angular/core';\n\n@Pipe({\n\n  'name' : 'replaceLineBreak'\n\n})\n\nexport class ReplaceLineBreakPipe implements PipeTransform {\n\n  transform(value : string, ...args : string[]): string {\n    \n    return value.replace(/\\n/g , '<br/>');\n\n  }\n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-create-validator',\n\n  'templateUrl' : './general-payment-entry-create-validator.component.html',\n\n  'styleUrls' : ['./general-payment-entry-create-validator.component.css'] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralPaymentEntryCreateValidatorComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit(): void {\n  \n  }\n\n  @Input('system-type') public systemType : string;\n\n  @Input('payer-name') public payerName : FormControl;\n\n  @Input('payer-email') public payerEmail : FormControl;\n\n  @Input('payer-phone') public payerPhone : FormControl;\n\n  @Input() public description : FormControl;\n\n  @Input() public amt : FormControl;\n\n}\n","\n<ng-container *ngIf ='payerName'>\n\n\t<div @fadeAnimation *ngIf ='payerName.invalid && (payerName.touched || payerName.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='payerName.errors?.required'> Payer Name of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='payerName.errors?.required || payerName.errors?.minlength'> Payer Name of {{systemType}} cannot be less than 4 characters in length </li>\n\t\t\t<li *ngIf ='payerName.errors?.required || payerName.errors?.maxlength'> Payer Name of {{systemType}} cannot be greater than 40 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='payerEmail'>\n\n\t<div @fadeAnimation *ngIf ='payerEmail.invalid && (payerEmail.touched || payerEmail.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='payerEmail.errors?.required'> Payer Email Address of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='payerEmail.errors?.required || payerEmail.errors?.minlength'> Payer Email Address of {{systemType}} cannot be less than 4 characters in length </li>\n\t\t\t<li *ngIf ='payerEmail.errors?.required || payerEmail.errors?.maxlength'> Payer Email Address of {{systemType}} cannot be greater than 40 characters in length </li>\n\t\t\t<li *ngIf ='payerEmail.errors?.required || payerEmail.errors?.emailAddress'> Payer Email Address should be valid and should conform to standards for example david@gmail.com </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n<ng-container *ngIf ='payerPhone'>\n\n\t<div @fadeAnimation *ngIf ='payerPhone.invalid && (payerPhone.touched || payerPhone.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='payerPhone.errors?.required'> Payer Phone Number of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='payerPhone.errors?.required || payerPhone.errors?.minlength'> Payer Phone Number of {{systemType}} cannot be less than 10 characters in length </li>\n\t\t\t<li *ngIf ='payerPhone.errors?.required || payerPhone.errors?.maxlength'> Payer Phone Number of {{systemType}} cannot be greater than 14 characters in length </li>\n\t\t\t<li *ngIf ='payerPhone.errors?.required || payerPhone.errors?.payerPhoneIntl'> Payer Phone Number of {{systemType}} if starting with +234 before the last 10 digits should not be greater than 13 characters in length </li>\n\t\t\t<li *ngIf ='payerPhone.errors?.required || payerPhone.errors?.payerPhone'> Payer Phone Number of {{systemType}} if not starting with +234 before the last 10 digits should not be greater than 11 characters in length </li>\n\t\t\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\n<ng-container *ngIf ='description'>\n\n\t<div @fadeAnimation *ngIf ='description.invalid && (description.touched || description.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='description.errors?.required'> Description of Payment should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='description.errors?.required || description.errors?.minlength'> Description of Payment cannot be less than 4 characters in length </li>\n\t\t\t<li *ngIf ='description.errors?.required || description.errors?.maxlength'> Description of Payment cannot be greater than 100 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n<ng-container *ngIf ='amt'>\n\n\t<div @fadeAnimation *ngIf ='amt.invalid && (amt.touched || amt.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='amt.errors?.required'> Amount of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='amt.errors?.required || amt.errors?.minlength'> Amount of {{systemType}} cannot be less than 2 characters in length </li>\n\t\t\t<li *ngIf ='amt.errors?.required || amt.errors?.maxlength'> Amount of {{systemType}} cannot be greater than 8 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n","let $$ : { [key : string] : any } = {\r\n\r\n\t\t'systemType' : 'General Payment' ,\r\n\r\n\t\t'title' : 'General Payment' ,\r\n\r\n\t\t'view' : 'gp' ,\r\n\r\n\t\t'viewWord' : 'Payment' ,\r\n\r\n\t\t'link' : 'payment' ,\r\n\r\n\t\t'$link' : 'general-payment' ,\r\n\r\n\t\t'systemGuideline' : 'payment' ,\r\n\r\n\t\t'base' : 'payment'\r\n};\r\n\r\nexport const RouteConfigData : { [key : string] : any } = {\r\n\r\n\t'dashboard' : {...$$} ,\r\n\r\n\t'create' : {...$$ , 'title' : `Make ${$$.systemType} Payment` , 'paymentRule' : { 'amount' : '1000' , 'description' : 'Departmental Fee Payment' , 'type' : 'department' ,\r\n\r\n    'callback' : 'http://localhost:4200/payment/department/validation/' } } ,\r\n\r\n\t'detail' : {...$$ , 'title' : `${$$.systemType} Entry` } ,\r\n\r\n\t'entries' : {...$$ , 'title' : `${$$.systemType} Entries` , 'searchFilters' : {'paymentReference' : 'Payment Reference' , 'department' : 'Department' , 'status' : 'Status'} } ,\r\n\r\n\t'validation' : {...$$ , 'title' : `Verifying ${$$.systemType}` } ,\r\n\r\n\t'verify' : {...$$ , 'title' : `Verify ${$$.systemType} Status` } ,\r\n\r\n\t'deleteAll' : {...$$ , 'title' : `${$$.systemType} Entries : Delete All` } ,\r\n\r\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AcronymPipe } from './acronym.pipe';\nimport { ReplaceLineBreakPipe } from './replace-line-break.pipe';\nimport { ProposedCredentialPipe } from './proposed-credential.pipe';\nimport { ReplaceTabsPipe } from './replace-tabs.pipe';\n\n@NgModule({\n\n  declarations: [\n\t\tAcronymPipe,\n    ReplaceLineBreakPipe,\n    ProposedCredentialPipe,\n    ReplaceTabsPipe,\n  ],\n \n  imports: [\n    CommonModule\n  ],\n\n  exports : [\n\n\t\tAcronymPipe,\n    ReplaceLineBreakPipe,\n    ProposedCredentialPipe,\n    ReplaceTabsPipe,\n  ]\n\n})\n\nexport class PipesModule { \n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup , Validators } from '@angular/forms';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralPayment } from '../general-payment';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { fadeAnimation } from '../../../animations';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-receipt',\n\n  'templateUrl' : './general-payment-entry-receipt.component.html',\n\n  'styleUrls' : ['./general-payment-entry-receipt.component.css'] ,\n\n  'providers' : [ErrorMessagesService] ,\n\n  'animations' : [fadeAnimation]\n\n})\n\nexport class GeneralPaymentEntryReceiptComponent implements OnInit {\n\n  constructor(public router : Router , private route : ActivatedRoute , public gps : GeneralPaymentService , \n\n  \t\t\t\t\t\tpublic ems : ErrorMessagesService , private aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralPayment = null;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false;\n\n  private eslug : string;\n\n  public entryStatuses : { [key : string] : any }[];\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false\n\n  public entryChangesT : any;\n\n  public entryForm : FormGroup;\n\n  public payment_ref_checked : string;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.verify.systemType;\n\n    this.title = data.verify.title;\n\n    this.view = data.verify.view;  \n\n    this.viewWord = data.verify.viewWord;\n\n    this.link = data.verify.link;\n\n    this.gps.$systemType = this.systemType;\n\n    this.gps.$sa = data.verify.$link;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n          \treturn this.gps.getStatus(); })\n        )\n          .subscribe((result : { [key : string] : any }) => {\n\n  \t\t\t\t\tif (result == null) { \n\n              this.isError = true;\n\n              this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n            else if (result != null) {\n\n            \tthis.entryForm = new FormGroup({\n\n            \t\t'payment_reference' : new FormControl('' , [Validators.required , Validators.minLength(4) , Validators.maxLength(30)]) }); } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  verifyPayment(body : { [key : string] : any }) : void {\n\n  \tif (this.payment_ref_checked != body.payment_reference) {\n\n  \tthis.payment_ref_checked = body.payment_reference;\n\n  \tthis.entry = null;\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.gps.confirmStatus(body)\n\n      .subscribe((result : { [key : string] : any }) => {\n\n        if (result == null) { this.isFormSubmitted = false;\n\n\t\t\t\tthis.isFormProcessing = false;\n\n        this.isError = true;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n       else if (result != null) {\n\n\t\t\t\t\t\tthis.isFormProcessing = false;\n\n           this.isFormSubmitted = false; \n\n         \t\tthis.entry = result; } }); }\n\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  }\n\n  get payment_reference() : FormControl {\n\n  \treturn this.entryForm.get('payment_reference') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n  \treturn this.entryForm.valid;\n  }\n\n}\n","<div id ='general-payment'>\n\n<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<div *ngIf ='entryForm'>\n\n<form [formGroup] ='entryForm' autocomplete ='new-payment-verification' (ngSubmit) ='verifyPayment(entryForm.value)'>\n\n\t<div class ='form-group'>\n\n\t\t<label for ='payment-reference' class ='form-label bold' > Payment Reference * : </label>\n\n\t\t<input type ='text' id ='payment-reference' name ='payment_reference' placeholder ='abczyxxyzaslkj' class ='form-control' formControlName ='payment_reference' autocomplete ='new-payment_reference'/>\n\n<ng-container *ngIf ='payment_reference'>\n\n\t<div @fadeAnimation *ngIf ='payment_reference.invalid && (payment_reference.touched || payment_reference.dirty)' class ='validation-error'>\n\n\t\t<ul>\n\n\t\t\t<li *ngIf ='payment_reference.errors?.required'> Payment Reference of {{systemType}} should be provided and cannot be empty </li>\t\t\t\n\t\t\t<li *ngIf ='payment_reference.errors?.required || payment_reference.errors?.minlength'> Payment Reference of {{systemType}} cannot be less than 4 characters in length </li>\n\t\t\t<li *ngIf ='payment_reference.errors?.required || payment_reference.errors?.maxlength'> Payment Reference of {{systemType}} cannot be greater than 30 characters in length </li>\n\n\t\t</ul>\n\n\t</div>\n\n</ng-container>\n\n\t</div>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Verify Payment </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n</form>\n\n</div>\n\n<div *ngIf ='entry != null'> \n\n\t<div class ='payment-status'>\n\n\t<p class =''> <span class =''> Status : </span> \n\n\t\t<span [ngClass] =\"{'pending' : entry?.status == 'Pending' , 'success' : entry?.status == 'Success' , 'failed' : entry?.status == 'Failed' , 'refunded' : entry?.status == 'Refunded' }\">\n\n\t\t\t{{entry.status}} </span> </p>\n\n\t<p class =''> Payment Type : {{entry.payment_type_name}} </p>\n\n</div>\n\n\n\t</div>\n\n</div>","export interface General {\n\n\t[key : string] : any;\n\n}\n\n\nexport const emailAddress : RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { General } from '../general';\n\n@Component({\n\n  'selector' : 'app-general-payment-dashboard',\n\n  'templateUrl' : './general-payment-dashboard.component.html',\n\n  'styleUrls' : ['./general-payment-dashboard.component.css'] ,\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralPaymentDashboardComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private gps : GeneralPaymentService , public ems : ErrorMessagesService ,\n\n              private aus : AuthenticationService) { \n\n  }\n\n  public systemType : string;\n\n  public title : string;\n  \n  public view : string;\n\n  public entries : { [key : string] : any }[];\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.dashboard.systemType;\n\n    this.title = data.dashboard.title;\n\n    this.view = data.dashboard.view;\n\n  \tthis.gps.managePayment()\n\n  \t\t.subscribe((result) => {\n\n        if (result == null) {\n\n          this.isError = true;\n\n          this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n        else if (result != null && result.length > 0) {\n\n         this.entries = result; } });\n\n    }\n\n  get canVerify() : boolean {\n\n    return ['student' , 'departmentPresident' , 'facultyPresident'].indexOf(this.aus.userRole) < 0;\n  }\n}\n","<h2 *ngIf ='title'> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error'> </app-resource-unavailable>\n\n<div *ngIf ='systemType' id ='dashboard'>\n\n<ul>\n\n\t<ng-container *ngIf ='entries != null && entries?.length > 0'>\n\n\t\t<li *ngFor ='let entry of entries'> \n\n\t\t<a [routerLink] ='[\"./\" , \"t\" , entry?.slug]' class ='center'> {{entry?.name}} </a>\n\n\t\t</li>\n\n\t</ng-container>\n\n\t<li *ngIf ='canVerify'>\n\n\t\t<a [routerLink] ='[\"./\" , \"verify-status\"]' class ='center'> Verify Payment Status </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"/account\" , \"profile\"]' class ='center'> Profile </a>\n\n\t</li>\n\n</ul>\n\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  \n  'name' : 'replaceTabs'\n\n})\n\nexport class ReplaceTabsPipe implements PipeTransform {\n\n  transform(value : string, ...args : string[]) : string {\n\n    return value.replace(/\\t/g , '&emsp;')\n\n    \t.replace('ql-align-center' , 'center');\n\n  }\n\n}\n","import { Injectable , Inject } from '@angular/core';\nimport { Observable , of } from 'rxjs';\nimport { catchError , delay , map , retry , tap } from 'rxjs/operators';\nimport { HttpClient , HttpErrorResponse } from '@angular/common/http';\nimport { GeneralPayment } from './general-payment';\nimport { General } from './general';\nimport { SearchQuery } from '../../general/search-query';\nimport { Api_Token , Api } from '../../configuration';\nimport { ErrorMessagesService } from '../../shared/services/error-messages.service';\n\n@Injectable()\nexport class GeneralPaymentService {\n\n  constructor(private http : HttpClient , @Inject(Api_Token) private apiConfig : Api , private ems : ErrorMessagesService) { \n\n  }\n\n  public $systemType : string = 'General Payment';\n\n  public $sa : string = 'general-payment'; \n\n  public ptype : string;\n\n  public managePayment() : Observable<General[]> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/manage`;\n\n    return this.http.get<General[]>(link)\n\n      .pipe(\n            tap((value : General[]) => console.log(value)) ,\n\n            catchError(this.handleError<General[]>(`Payment Type Entries` , null))\n        )\n\n  }\n\n  public managePaymentEntry(entry : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/manage/t/${entry}`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n              tap((value : General) => console.log(value)) ,\n\n              catchError(this.handleError<General>(`Payment Type Entry` , null))\n        )\n\n  }\n\n  public getAllEntry(params : SearchQuery) : Observable<GeneralPayment[]> {\n\n\t  let\tlink = `${this.apiConfig.host}/${this.$sa}/t/${this.ptype}/entries`;\n\n    let httpOptions = {'params' : params};\n\n    return this.http.get<GeneralPayment[]>(link , httpOptions)\n\n      .pipe(\n              tap((value : GeneralPayment[]) => console.log(value)) ,\n\n              catchError(this.handleError<GeneralPayment[]>(`${this.$systemType} Entries` , null))\n        )\n\n  }\n\n  public getEntry(ptype : string , entry : string) : Observable<GeneralPayment> {\n\n  \tlet\tlink = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/entry/${entry}/detail`;\n\n  \treturn this.http.get<GeneralPayment>(link)\n       \n       .pipe(\n\n          tap((entry : GeneralPayment) => console.log(entry)) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n \n public getStatus() : Observable<GeneralPayment> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/transaction-status`;\n\n    return this.http.get<GeneralPayment>(link)\n       \n       .pipe(\n\n          tap((entry : GeneralPayment) => console.log(entry)) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n public confirmStatus(body : GeneralPayment) : Observable<GeneralPayment> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/transaction-status`;\n\n    return this.http.post<GeneralPayment>(link , body)\n       \n       .pipe(\n\n          tap((entry : GeneralPayment) => console.log(entry)) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n \n\n  public addEntry(ptype : string) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/entry/create`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : General) => { return { 'permitted' : true , '$data' : entry }; }) ,\n\n          catchError(this.handleError<General>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public addEntry$(ptype : string , request : GeneralPayment) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/entry/create`;\n\n    console.log(request);\n\n    return this.http.post<GeneralPayment>(link , request)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : GeneralPayment) => { return {'created' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public checkPayment(ptype : string , payment : {[key : string] : any}) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/entry/create`;\n\n    return this.http.post<General>(link , payment)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : General) => { return { 'permitted' : true , '$data' : entry }; }) ,\n\n          catchError(this.handleError<General>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public $initializePayment(payment : General) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/general-payment/initialize-transaction`;\n\n    return this.http.post<General>(link , payment)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          retry(3) ,\n\n          map((entry : General) => { return {'created' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<General>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public $verifyPayment(ref) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/general-payment/verify-transaction?reference=${ref}`;\n\n    return this.http.get<General>(link)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : General) => { return {'verified' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<General>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public $refundEntry(entry : string , payment : GeneralPayment) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/general-payment/refund-transaction?reference=${entry}`;\n\n    return this.http.post<GeneralPayment>(link , payment)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : GeneralPayment) => { return {'created' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public $createRefund(entry : string , payment : GeneralPayment) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/entry/${entry}/refund`;\n\n    return this.http.put<GeneralPayment>(link , payment)\n\n      .pipe(\n\n          tap((entry : General) => console.log(entry)) ,\n\n          map((entry : GeneralPayment) => { return {'updated' : true , '$data' : entry}; }) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n        )\n  }\n\n  public updateEntry$(ptype : string , entry : string , request : GeneralPayment) : Observable<General> {\n\n    let link = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/entry/${entry}/detail`;\n\n    return this.http.put<GeneralPayment>(link , request)\n\n        .pipe(\n\n          map((entry : GeneralPayment) => { return { 'updated' : true , '$data' : entry }; }) ,\n\n          catchError(this.handleError<GeneralPayment>(`${this.$systemType} Entry` , null))\n\n          );\n  }\n\n  public deleteManyEntry$(ptype : string , arrayIdx : number[]) : Observable<any> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/${this.ptype}/delete/entry/many`;\n\n    let body = {'entries' : arrayIdx};\n\n    return this.http.patch(link , body)\n\n      .pipe(\n\n        map((val) => { return {'manyDeleted' : true}; }) ,\n\n        catchError(this.handleError<GeneralPayment[]>(`${this.$systemType} Entries Delete` , null))\n\n        );\n  }\n\n  public deleteAllEntry(ptype : string) : Observable<any> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/${ptype}/delete/entry/all/`;\n\n    return this.http.get(link)\n\n      .pipe(\n\n        catchError(this.handleError<GeneralPayment[]>(`${this.$systemType} Entry or Entries Delete` , null))\n\n        );\n  }\n\n  public deleteAllEntry$(ptype : string) : Observable<General> {\n\n    let link : string = `${this.apiConfig.host}/${this.$sa}/t/$ptype/delete/entry/all/`;\n\n    return this.http.delete(link)\n\n      .pipe(\n\n        map((val) => { return {'allDeleted' : true}; }) ,\n\n        catchError(this.handleError<GeneralPayment[]>(`${this.$systemType} Entry or Entries Delete` , null))\n\n        );\n  }\n\n  private handleError<T>(operation = 'operation' , result? : T) {\n\n      return (error : HttpErrorResponse) : Observable<T> => { this.ems.message = error;\n\n                return of(result as T);\n\n      }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-general-payment-entry-delete-all',\n  templateUrl: './general-payment-entry-delete-all.component.html',\n  styleUrls: ['./general-payment-entry-delete-all.component.css']\n})\nexport class GeneralPaymentEntryDeleteAllComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>general-payment-entry-delete-all works!</p>\n","import { Pipe , PipeTransform } from '@angular/core';\n\n@Pipe({\n  \n  'name': 'proposedCredential'\n\n})\n\nexport class ProposedCredentialPipe implements PipeTransform {\n\n  transform(value: { [key : string] : any}, ...args: string[]): string {\n\n    return (value.author.full_name).split(' ').join('').toLowerCase();\n\n  }\n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { FormControl , FormGroup } from '@angular/forms';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralPayment } from '../general-payment';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { canUpdate } from '../roles';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-detail',\n \n  'templateUrl' : './general-payment-entry-detail.component.html',\n \n  'styleUrls' : ['./general-payment-entry-detail.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralPaymentEntryDetailComponent implements OnInit {\n\n  constructor(public router : Router , private route : ActivatedRoute , public gps : GeneralPaymentService , \n\n  \t\t\t\t\t\tpublic ns : NotificationService , public ems : ErrorMessagesService , private aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralPayment;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false;\n\n  private eslug : string;\n\n  private pslug : string;\n\n  public entryStatuses : { [key : string] : any }[];\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false\n\n  public entryChangesT : any;\n\n  public entryForm : FormGroup;\n\n  public readyToSubmit : boolean;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.detail.systemType;\n\n    this.title = data.detail.title;\n\n    this.view = data.detail.view;  \n\n    this.viewWord = data.detail.viewWord;\n\n    this.link = data.detail.link;\n\n    this.gps.$systemType = this.systemType;\n\n    this.gps.$sa = data.detail.$link;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            let $e = params.get('entry');\n\n            let $p = params.get('payment');\n\n            this.pslug = $p;\n\n            this.eslug = $e;\n\n          \treturn this.gps.getEntry($p , $e); })\n        )\n          .subscribe((result : GeneralPayment) => {\n\n  \t\t\t\t\tif (result == null) { \n\n              this.isError = true;\n\n              this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n            else if (result != null) {\n\n    \t\t\t\t\tthis.entry = result; } });\n  }\n\n  ngOnDestroy() : void {\n\n    clearTimeout(this.entryChangesT);\n  }\n\n  public refundEntry(result : GeneralPayment) : void {\n\n\n  }\n\n  public $entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(['general-payment' , 't' , this.pslug , 'entries']); } , 5000) \n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  get userRole() : string {\n\n  \treturn this.aus.userRole;\n  }\n\n  get canUpdateEntry() : boolean {\n\n  \treturn canUpdate.indexOf(this.userRole) > -1;\n  }\n\n  get isFormValid() : boolean {\n\n  \treturn this.entryForm.valid;\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n}\n","<div id ='general-payment'>\n\n<h2 *ngIf ='title' > {{title}} Detail </h2>\n\n<app-view-description *ngIf ='view' [view-type] ='view' [system-type] ='systemType' > </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n\n<div id ='general-payment-details' *ngIf ='entry'>\n\n\t<table>\n\n\t\t<colgroup>\n\n\t\t\t<col class ='payment-parameters' />\n\t\t\t<col/>\n\n\t\t</colgroup>\n\n\t\t<tbody>\n\n\t\t\t<ng-container *ngIf ='entry?.payment_reference'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Reference Number : </th>\n\n\t\t\t\t\t<td> <b class ='bold'> {{entry?.payment_reference}} </b> </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.paid_on'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Paid Date : </th>\n\n\t\t\t\t\t<td> {{entry?.paid_on | date : 'fullDate'}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.amount'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Amount </th>\n\n\t\t\t\t\t<td> N = {{entry?.amount}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<tr>\n\n\t\t\t\t<th colspan ='2'> \n\n\t\t\t\t\t<h3 class ='left'> Payer Detail </h3>\n\n\t\t\t\t\t<hr/>\n\n\t\t\t\t</th>\n\n\t\t\t</tr>\n\n\t\t\t<ng-container *ngIf ='entry?.full_name'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Name </th>\n\n\t\t\t\t\t<td> {{entry?.full_name}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.email_address'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Email Address </th>\n\n\t\t\t\t\t<td> {{entry?.email_address}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.phone_number'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Phone Number </th>\n\n\t\t\t\t\t<td> {{entry?.phone_number}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\n\t\t\t<ng-container *ngIf ='entry?.description'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t\t<th class ='left bold' > Payment Description </th>\n\n\t\t\t\t\t\t<td> {{entry?.description}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<tr>\n\n\t\t\t\t<th colspan ='2'> \n\n\t\t\t\t\t<h3 class ='left'> Student Detail </h3>\n\n\t\t\t\t\t<hr/>\n\n\t\t\t\t</th>\n\n\t\t\t</tr>\n\n\t\t\t<ng-container *ngIf ='entry?.author?.full_name'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Full Name : </th>\n\n\t\t\t\t\t<td> {{entry?.author?.full_name}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\n\t\t\t<ng-container *ngIf ='entry?.author && entry?.author?.matriculation_number'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Matriculation Number : </th>\n\n\t\t\t\t\t<td> {{entry?.author?.matriculation_number}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.author && entry?.author?.identity_number'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Identification Number : </th>\n\n\t\t\t\t\t<td> {{entry?.author?.identity_number}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.department_name'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Department </th>\n\n\t\t\t\t\t<td> {{entry?.department_name}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.faculty_name'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Faculty </th>\n\n\t\t\t\t\t<td> {{entry?.faculty_name}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\n\t\t\t<ng-container *ngIf ='entry?.author?.level'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Level : </th>\n\n\t\t\t\t\t<td> {{entry?.author?.level}} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='entry?.status'>\n\n\t\t\t\t<tr>\n\n\t\t\t\t\t<th class ='left bold' > Status : </th>\n\n\t\t\t\t\t<td> {{entry?.status | titlecase }} </td>\n\n\t\t\t\t</tr>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='true'>\n\n\t\t\t\t<td colspan ='2'>\n\n\t\t\t\t\t<button href ='#' class ='entry-option center' onclick ='print()'> Print </button>\n\n\t\t\t\t</td>\n\n\t\t\t</ng-container>\n\n\t\t</tbody>\n\n\t\t\t<ng-container *ngIf ='canRefundDepartmentPayment && entry.paymentType == \"department_name\" && !entry.refunded && userDepartment == entry?.department_name'>\n\n\t\t\t\t<tfoot class ='refund option'>\n\n\t\t\t\t\t<td colspan ='2'>\n\n\t\t\t\t\t\t\t<button class ='entry-option center' (click) ='refundEntry()' > Refund </button>\n\n\t\t\t\t\t</td>\n\n\t\t\t\t</tfoot>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf ='canRefundFacultyPayment && entry.paymentType == \"faculty_name\" && !entry.refunded && userFaculty == entry?.faculty_name'>\n\n\t\t\t\t<tfoot class ='refund option'>\n\n\t\t\t\t\t<td colspan ='2'>\n\n\t\t\t\t\t\t\t<button class ='entry-option center' (click) ='refundEntry()'> Refund </button>\n\n\t\t\t\t\t</td>\n\n\t\t\t\t</tfoot>\n\n\t\t\t</ng-container>\n\n\t</table>\n\n\n</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { FormControl , FormGroup , FormBuilder , Validators } from '@angular/forms';\nimport { searchValidator , emailAddressValidator } from '../../shared/services/form-validators.service';\nimport { payerPhoneValidator } from './general-payment-form-validator.service';\nimport { emailAddress } from './general';\nimport { General } from './general';\n\n@Injectable()\n\nexport class GeneralPaymentFormService {\n\n  constructor(private fb : FormBuilder) { \n\n  }\n\n  public $entryForm() : FormGroup {\n\n  \tlet form = this.fb.group({\n\n  \t\t'payerName' : ['' , {'validators' : [Validators.required , Validators.minLength(4) , Validators.maxLength(40)] } ] ,\n\n  \t\t'payerEmail' : ['' , {'validators' : [Validators.required , Validators.minLength(4) , Validators.maxLength(40) , emailAddressValidator(emailAddress)] } ] ,\n\n  \t\t'payerPhone' : ['' , {'validators' : [Validators.required , Validators.minLength(10) , Validators.maxLength(14) , payerPhoneValidator() ] } ] ,\n\n  \t\t'description' : ['' , {'validators' : [Validators.required , Validators.minLength(9) , Validators.maxLength(200)] } ] ,\n\n      'payment_type' : ['' , {'validators' : [Validators.required , Validators.max(100000000) ] } ] ,\n\n      'payment_session' : ['' , {'validators' : [Validators.required , Validators.max(100000000) ] } ] ,\n\n  \t\t'amount' : ['' , {'validators' : [Validators.required , Validators.minLength(2) , Validators.maxLength(8)] } ]\n  \t\n  \t});\n\n  \t\treturn form;\n  }\n\n  public searchForm(searchFilters? : General ) : FormControl {\n\n    return new FormControl('' , [searchValidator(searchFilters)]);\n\n  }\n\n}\n","import { AbstractControl , ValidatorFn , ValidationErrors } from '@angular/forms';\n\nexport function payerPhoneValidator() : ValidatorFn {\n\n  return (control : AbstractControl) : ValidationErrors | null => {\n\n    let entry = control.value;\n\n    if (entry.startsWith('+234') && entry.length > 14) {\n\n     return {'payerPhoneIntl' : {'value' : entry } };\t}\n\n    else if ((!entry.startsWith('+234')) && entry.length > 11) { return {'payerPhone' : {'value' : entry } };\t}\n\n    else { return null;\t}\n\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\nimport { IsStudentGuard } from '../../shared/guards/is-student.guard';\nimport { EntryDeleteAllGuard } from '../../shared/guards/entry-delete-all.guard';\nimport { GeneralPaymentHomepageComponent } from './general-payment-homepage/general-payment-homepage.component';\nimport { GeneralPaymentDashboardComponent } from './general-payment-dashboard/general-payment-dashboard.component';\nimport { GeneralPaymentEntryDashboardComponent } from './general-payment-entry-dashboard/general-payment-entry-dashboard.component';\nimport { GeneralPaymentEntriesComponent } from './general-payment-entries/general-payment-entries.component';\nimport { GeneralPaymentEntryDetailComponent } from './general-payment-entry-detail/general-payment-entry-detail.component';\nimport { GeneralPaymentEntryCreateComponent } from './general-payment-entry-create/general-payment-entry-create.component';\nimport { GeneralPaymentEntryDeleteAllComponent } from './general-payment-entry-delete-all/general-payment-entry-delete-all.component';\nimport { GeneralPaymentEntryVerificationComponent } from './general-payment-entry-verification/general-payment-entry-verification.component';\nimport { GeneralPaymentEntryReceiptComponent } from './general-payment-entry-receipt/general-payment-entry-receipt.component';\n\nimport { RouteConfigData } from './general-payment-route-data';\n\nconst routes : Routes = [\n\n\t{'path' : '' , \n\n\t'component' : GeneralPaymentHomepageComponent ,\n\n\t'canActivate' : [AuthenticationGuard] ,\n\n\t'canLoad' : [AuthenticationGuard] ,\n\n\t'children' : [\n\n\t\t\t{'path' : '' ,\n\n\t\t\t'canActivateChild' : [AuthenticationGuard] ,\n\n\t\t\t'canLoad' : [AuthenticationGuard] ,\n\n\t\t\t\t'children' : [\n\n\t\t\t\t\t{'path' : '' , 'component' : GeneralPaymentDashboardComponent , 'data' : {'dashboard' : RouteConfigData.dashboard } } ,\n\n\t\t\t\t\t{'path' : 't/:payment' , 'component' : GeneralPaymentEntryDashboardComponent , 'data' : {'dashboard' : RouteConfigData.dashboard } } ,\n\n\t\t\t\t\t{'path' : 't/:payment/entries' , 'component' : GeneralPaymentEntriesComponent , 'data' : {'entries' : RouteConfigData.entries } } ,\n\n\t\t\t\t\t{'path' : 't/:payment/entry/:entry/detail' , 'component' : GeneralPaymentEntryDetailComponent , 'data' : {'detail' : RouteConfigData.detail } } ,\n\n\t\t\t\t\t{'path' : 't/:payment/entry/create' , 'component' : GeneralPaymentEntryCreateComponent , 'canActivate' : [IsStudentGuard] , 'data' : {'create' : RouteConfigData.detail } } ,\n\n\t\t\t\t\t{'path' : 't/:payment/validation' , 'component' : GeneralPaymentEntryVerificationComponent , 'data' : {'validation' : RouteConfigData.validation } } ,\n\n\t\t\t\t\t{'path' : 'verify-status' , 'component' : GeneralPaymentEntryReceiptComponent , 'data' : {'verify' : RouteConfigData.verify } } ,\n\n\t\t\t\t\t{'path' : 'entry/delete/all' , 'component' : GeneralPaymentEntryDeleteAllComponent , 'canActivate' : [EntryDeleteAllGuard] , 'data' : {'deleteAll' : RouteConfigData.deleteAll } }\n\n\t\t\t\t]}\n\t\t]}\n];\n\n@NgModule({\n\n  imports: [RouterModule.forChild(routes)],\n\n  exports: [RouterModule]\n\n})\n\nexport class GeneralPaymentRoutingModule { \n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate , ActivatedRouteSnapshot , Router , RouterStateSnapshot , UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class IsStudentGuard implements CanActivate {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\t}\n\n  canActivate(\n\n    route: ActivatedRouteSnapshot,\n\n    state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n    return this.verifyMemberPrivilege();\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  public verifyMemberPrivilege() : boolean | UrlTree {\n\n    let role = this.aus.userMinorDetails.role;\n\n    let allowedMembers = ['student' , 'departmentPresident' , 'facultyPresident'];\n\n    if (allowedMembers.indexOf(role) < 0) { this.router.navigate(['unauthorized']);\n\n      return false;  }\n\n    else { return true; }\n\n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  \n  'name' : 'acronym'\n\n})\n\nexport class AcronymPipe implements PipeTransform {\n\n  transform(value: string, ...args: string[]) : string {\n\n  \tlet $value = value.replace(/and/gi , '').split(' ');\n\n  \tif ($value.length > 1) {\n\n   return $value.map((item) => {\tif (item) {\treturn item[0];\t}\t\n\n    \t\t\t\t\t\t\telse { return '';  }\t}).join('');\t}\n\t\t\n\t\telse {\treturn $value.join('');\t}\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot , CanActivate , CanActivateChild , CanLoad , Route , RouterStateSnapshot , UrlTree , Router } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n\n  'providedIn' : 'root'\n\n})\n\nexport class AuthenticationGuard implements CanActivate , CanActivateChild , CanLoad {\n\n\tconstructor(private aus : AuthenticationService , private router : Router) {\n\n\n\t}\n  \n  canActivate(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n  \tconst url : string = state.url;\n\n    return this.verifyLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot , state: RouterStateSnapshot) : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.canActivate(route , state);\n  }\n\n  canLoad(route : Route) {\n\n    const url : string = route.path;\n\n    return this.verifyLogin(url);\n  }\n\n  public verifyLogin(url : string) : boolean | UrlTree {\n\n      if (this.aus.isLoggedIn()) { return true; }\n\n      else { this.aus.redirectAddress = url;\n\n        return this.router.parseUrl('/signin');\n\n      }\n  }\n  \n}\n","export interface Role {\r\n\r\n\tname : string;\r\n\r\n\trole : string;\r\n}\r\n\r\nexport const roles : Role[] = [\r\n\r\n{'name' : 'Student' , 'role' : 'student' } ,\r\n\r\n{'name' : 'Department President' , 'role' : 'departmentPresident' } ,\r\n\r\n{ 'name' : 'Faculty President' , 'role' : 'facultyPresident' } ,\r\n\r\n{\t'name' : 'Lecturer' , 'role' : 'lecturer' } ,\r\n\r\n{ 'name' : 'Head of Department' , 'role' : 'hod' } ,\r\n\r\n{ 'name' : 'Dean of Faculty' , 'role' : 'dean' } ,\r\n\r\n{ 'name' : 'Bursar' ,\t'role' : 'bursar' } ,\r\n\r\n{'name' : 'Staff' , 'role' : 'staff' } ,\r\n\r\n{ 'name' : 'Moderator' , 'role' : 'moderator' } ,\r\n\r\n{ 'name' : 'Administrator' , 'role' : 'administrator' } ,\r\n\r\n{ 'name' : 'Super Administrator' , 'role' : 'superAdministrator' }];\r\n\r\nexport const $entryUpdateRole : string[] = ['staff' , 'moderator' , 'administrator' , 'superAdministrator'];\r\n\r\nexport const canUpdate : string[] = ['staff' , 'moderator' , 'administrator' , 'superAdministrator'];","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute , Router , ParamMap } from '@angular/router';\nimport { FormGroup , FormControl } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralPayment } from '../general-payment';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { GeneralPaymentFormService } from '../general-payment-form.service';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-create',\n\n  'templateUrl' : './general-payment-entry-create.component.html',\n\n  'styleUrls' : ['./general-payment-entry-create.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService]\n\n})\n\nexport class GeneralPaymentEntryCreateComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , public router : Router , public ns : NotificationService , public ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate gps : GeneralPaymentService , private gpfs : GeneralPaymentFormService) {\n\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public systemGuideline : string; \n\n  public paymentRule : General;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public $link : string;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  public isFormSubmitted : boolean = false;\n\n  public isFormProcessing : boolean = false\n\n  public submission : boolean = false;\n\n  public entryForm : FormGroup;\n\n  public entry : General;\n\n  public pslug : string;\n\n  public paymentSession : General;\n\n  public paymentType : number;\n\n  public prev_psession : number;\n\n  public paymentSessionCtrl : FormControl = new FormControl();\n\n  ngOnInit() : void {\n\n   let data = this.route.snapshot.data;\n\n     this.systemType = data.create.systemType;\n\n     this.title = data.create.title;\n\n     this.view = data.create.view;\n\n     this.viewWord = data.create.viewWord;\n\n     this.link = data.create.link;\n\n     this.$link = data.create.$link;\n\n     this.systemGuideline = data.create.systemGuideline;\n\n     this.paymentRule = data.create.paymentRule;\n\n    this.gps.$systemType = this.systemType;\n\n    this.gps.$sa = this.$link;\n\n    this.route.paramMap\n\n      .pipe(\n\n          switchMap((params : ParamMap) => {\n\n            let $p = params.get('payment');\n\n            this.pslug = $p;\n\n            return this.gps.addEntry($p);  })\n      )\n      .subscribe((result : { [key : string] : any } ) => {\n\n      if (result == null) {\n\n        this.isError = true;\n\n        this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n      else if (result.permitted == true && result.$data != null && result.$data.status != null) {\n\n          this.router.navigate(['/general-payment' , this.link , 'entry' , 'detail' , result.$data._id ]); }\n\n      else if (result.permitted == true) {\n\n        this.paymentSession = result.$data.payment_session;\n\n        this.paymentType = result.$data.payment_type; } });\n\n  };\n\n  public verifyPaymentSession(evt) : any { let psession : number = 0; \n\n    if (evt.value == '') { return false; }\n\n    if (evt.value == this.prev_psession) { return false; }\n\n    this.prev_psession = evt.value;\n\n    let confirmPayment : { [key : string] : any } = {'payment_type' : this.paymentType , 'payment_session' : evt.value };\n\n    this.gps.checkPayment(this.pslug , confirmPayment)\n\n      .subscribe((value) => { let payload = value.$data;\n\n        if (payload.slug != null) { \n\n          this.router.navigate(['general-payment' , 't' , this.pslug , 'entry' , payload.slug , 'detail']) }\n\n        else {\n\n        this.entry = payload;\n\n        this.entryForm = this.gpfs.$entryForm();\n\n        this.entryForm.patchValue({'description' : payload.description , 'amount' : payload.amount , 'payment_type' : payload.payment_type , 'payment_session' : payload.payment_session }); } })\n  }\n\n  public createEntry(body : { [key : string] : any }) {\n\n\t\tbody.amount = this.entry.amount * 100;\n\n\t\tbody.email = body.payerEmail;\n\n\t\tbody.callback_url = `http://localhost:4200/general-payment/t/${this.pslug}/validation`;\n\n  \tbody.metadata = {\n\n  \t\t\t'full_name' : body.payerName ,\n\n        'email_address' : body.payerEmail ,\n\n  \t\t\t'phone_number' : body.payerPhone ,\n\n        'payment_type' : body.payment_type ,\n\n        'payment_session' : body.payment_session };\n\n    this.submission = true;\n\n    this.isFormSubmitted = true;\n\n    this.error = null;\n\n    this.isError = false;\n\n    this.isFormProcessing = true;\n\n    this.gps.$initializePayment(body)\n\n      .subscribe((result : { [key : string] : any }) => {\n\n        if (result == null) { this.isFormSubmitted = false;\n\n          this.isFormProcessing = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Network error has occured. Payment is only a possiblity when there is Internet connection.`); }\n\n       else if (result != null && result.created == true) {\n\n           this.isFormSubmitted = false;\n\n          this.ns.setNotificationStatus(true);\n\n          this.ns.addNotification(`Operation is successful and ${this.systemType} is added.`);\n\n          return location.href = result.$data.data.authorization_url; } });\n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n  }\n\n  get payerName() : FormControl {\n\n    return this.entryForm.get('payerName') as FormControl;\n  }\n\n  get payerEmail() : FormControl {\n\n    return this.entryForm.get('payerEmail') as FormControl;\n  }\n\n  get payerPhone() : FormControl {\n\n    return this.entryForm.get('payerPhone') as FormControl;\n  }\n\n  get description() : FormControl {\n\n    return this.entryForm.get('description') as FormControl;\n  }\n\n  get amt() : FormControl {\n\n    return this.entryForm.get('amt') as FormControl;\n  }\n\n  get isFormValid() : boolean {\n\n    return this.entryForm.valid;\n  }\n\n\n}\n","<div id ='general-payment'>\n\n<h2> {{title}} </h2>\n\n<app-view-description *ngIf ='view' [view-description] ='view' [system-type] ='systemType' > </app-view-description>\n\n<app-guidelines *ngIf ='systemGuideline' [view] ='view' [system-guideline] ='systemGuideline'> </app-guidelines>\n\n<app-resource-unavailable *ngIf ='error' [error] ='error' > </app-resource-unavailable>\n\n<app-notification-screen *ngIf ='notificationAvailable' [notified] ='notificationAvailable' [message] ='notificationMessage' (finished) ='removeNotification()'> </app-notification-screen>\n\n\t\t\t<ng-container *ngIf ='paymentSession != null && paymentSession?.length > 0'>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='paymentSession' class ='form-label bold'> Payment Session * : </label>\n\n\t\t\t\t<select name ='paymentSession' id ='paymentSession' class ='form-control' required ='required' (change) ='verifyPaymentSession($event.target)' [readOnly] ='noEdit'\n\n\t\t\t\t[formControl] ='paymentSessionCtrl'>\n\n\t\t\t\t\t<option [value] =''> </option> \n\n\t\t\t\t\t<option *ngFor ='let session of paymentSession' [value] ='session._id' > {{session.name}} </option> \n\n\t\t\t\t</select>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n<ng-container *ngIf ='entryForm'>\n\n\t<div id ='general-payment-form' >\n\n\t\t<form method ='post' autocomplete ='off' enctype ='application/x-www-form-urlencoded' \n\n\t\t\t[formGroup] ='entryForm' (ngSubmit) ='createEntry(entryForm.value)'>\n\n\t\t\t<h3> Payment Form </h3>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='payer-name' class ='form-label bold' > Full Name * : </label>\n\n\t\t\t\t<input type ='text' id ='payer-name' name ='payerName' placeholder ='David Muller' class ='form-control' formControlName ='payerName' autocomplete ='new-payerName'/>\n\n\t\t\t\t<app-general-payment-entry-create-validator *ngIf ='payerName' [system-type] ='systemType' [payer-name] ='payerName'> </app-general-payment-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='payer-email' class ='form-label bold' > Email Address * : </label>\n\n\t\t\t\t<input type ='text' id ='payer-email' name ='payerEmail' placeholder ='david@example.com' class ='form-control' formControlName ='payerEmail' autocomplete ='new-payerEmail'/>\n\n\t\t\t\t<app-general-payment-entry-create-validator *ngIf ='payerEmail' [system-type] ='systemType' [payer-email] ='payerEmail'> </app-general-payment-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='payer-phone' class ='form-label bold' > Phone Number * : </label>\n\n\t\t\t\t<input type ='text' id ='payer-phone' name ='payerPhone' placeholder ='09022035587 or +2349022035587' class ='form-control' formControlName ='payerPhone' autocomplete ='new-payerPhone'/>\n\n\t\t\t\t<app-general-payment-entry-create-validator *ngIf ='payerPhone' [system-type] ='systemType' [payer-phone] ='payerPhone'> </app-general-payment-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='description' class ='form-label bold' > Description of Payment * : </label>\n\n\t\t\t\t<input type ='text' id ='description' name ='description' class ='form-control' readonly ='readonly' value ='Departmental Fee Payment' \n\n\t\t\t\tformControlName ='description' autocomplete ='new-description'/>\n\n\t\t\t\t<app-general-payment-entry-create-validator *ngIf ='description' [system-type] ='systemType' [description] ='description'> </app-general-payment-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<div class ='form-group'>\n\n\t\t\t\t<label for ='amount' class ='form-label bold' > Amount * : </label>\n\n\t\t\t\t<input type ='text' id ='amount' name ='amount' class ='form-control' readonly ='readonly' formControlName ='amount' autocomplete ='new-amount'/>\n\n\t\t\t\t<app-general-payment-entry-create-validator *ngIf ='amount' [system-type] ='systemType' [amount] ='amount'> </app-general-payment-entry-create-validator>\n\n\t\t\t</div>\n\n\t\t\t<button *ngIf ='!isFormProcessing' type ='submit' class ='btn-submit' [class] ='{\"disabled\" : !isFormValid }' [disabled] ='!isFormValid' > Submit </button> \n\n\t\t\t<p *ngIf ='isFormSubmitted'> Your form is being processed. Please kindly be patient and wait while it completes. </p>\n\n\t\t</form>\n\n\t\t</div>\n\n\t</ng-container>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GeneralModule } from '../../general/general.module';\nimport { SimplesModule } from '../../shared/module/simples/simples.module';\nimport { PipesModule } from '../../shared/pipes/pipes.module';\nimport { GeneralServicesModule } from '../../shared/services/general-services.module';\n\nimport { GeneralPaymentRoutingModule } from './general-payment-routing.module';\nimport { GeneralPaymentHomepageComponent } from './general-payment-homepage/general-payment-homepage.component';\nimport { GeneralPaymentDashboardComponent } from './general-payment-dashboard/general-payment-dashboard.component';\nimport { GeneralPaymentEntryDashboardComponent } from './general-payment-entry-dashboard/general-payment-entry-dashboard.component';\nimport { GeneralPaymentEntriesComponent } from './general-payment-entries/general-payment-entries.component';\nimport { GeneralPaymentEntryCreateComponent } from './general-payment-entry-create/general-payment-entry-create.component';\nimport { GeneralPaymentEntryDetailComponent } from './general-payment-entry-detail/general-payment-entry-detail.component';\nimport { GeneralPaymentEntryDeleteAllComponent } from './general-payment-entry-delete-all/general-payment-entry-delete-all.component';\nimport { GeneralPaymentEntryCreateValidatorComponent } from './general-payment-entry-create-validator/general-payment-entry-create-validator.component';\nimport { GeneralPaymentEntryVerificationComponent } from './general-payment-entry-verification/general-payment-entry-verification.component';\n\nimport { GeneralPaymentService } from './general-payment.service';\nimport { GeneralPaymentFormService } from './general-payment-form.service';\nimport { GeneralPaymentEntryReceiptComponent } from './general-payment-entry-receipt/general-payment-entry-receipt.component';\n\n@NgModule({\n\n  declarations: [\n\n  \tGeneralPaymentHomepageComponent,\n  \tGeneralPaymentDashboardComponent,\n  \tGeneralPaymentEntryDashboardComponent,\n  \tGeneralPaymentEntriesComponent,\n  \tGeneralPaymentEntryCreateComponent,\n  \tGeneralPaymentEntryDetailComponent,\n  \tGeneralPaymentEntryDeleteAllComponent,\n  \tGeneralPaymentEntryCreateValidatorComponent,\n  \tGeneralPaymentEntryVerificationComponent,\n  \tGeneralPaymentEntryReceiptComponent\n\n  \t],\n  \n  imports: [\n  \n    CommonModule,\n    GeneralPaymentRoutingModule,\n    ReactiveFormsModule,\n    GeneralModule,\n    PipesModule,\n    SimplesModule,\n    GeneralServicesModule\n  ] ,\n\n  providers : [\n\n\t\tGeneralPaymentService,\n\t\tGeneralPaymentFormService\n  ]\n\n})\n\nexport class GeneralPaymentModule { \n\n}\n","import { Component , Input , OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute , ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { General } from '../general';\nimport { GeneralPayment } from '../general-payment';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { GeneralPaymentService } from '../general-payment.service';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-dashboard',\n\n  'templateUrl' : './general-payment-entry-dashboard.component.html',\n\n  'styleUrls' : ['./general-payment-entry-dashboard.component.css'] ,\n\n  'providers' : [ErrorMessagesService]\n\n})\n\nexport class GeneralPaymentEntryDashboardComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute , private ts : Title , private gps : GeneralPaymentService , private ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate aus : AuthenticationService) {\n\n  }\n\n  public systemType : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public entry : GeneralPayment;\n\n  public error : { [key : string] : any };\n\n  public isError : boolean = false\n\n  private pslug : string;\n\n  ngOnInit() : void {\n\n    let data = this.route.snapshot.data;\n\n    this.systemType = data.dashboard.systemType;\n\n    this.title = data.dashboard.title;\n\n    this.view = data.dashboard.view;\n\n    this.link = data.dashboard.link;\n\n    this.gps.$systemType = this.systemType;\n\n    this.route.paramMap\n\n      .pipe(\n\n        switchMap((params : ParamMap) => {\n\n          let $p = params.get('payment');\n\n          this.pslug = $p;\n\n        \treturn this.gps.managePaymentEntry($p); })\n        )\n\n      .subscribe((result : { [key : string] : any }) => {\n\n\t\t\t\tif (result == null) {\n\n          this.isError = true;\n\n          this.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n        else if (result != null) {\n\n          this.entry = result;\n\n          this.ts.setTitle(result.name + ` Payment`); } });\n  }\n\n  get canCreate() : boolean {\n\n    return ['student' , 'departmentPresident' , 'facultyPresident'].indexOf(this.aus.userRole) > -1;\n  }\n\n  get canDeleteAll() : boolean {\n\n    return this.aus.isSuperAdministrator;\n  }\n\n}\n","<h2 *ngIf ='entry && entry?.name'> {{entry.name}} Payment </h2>\n\n<app-view-description *ngIf ='view' [system-type] ='systemType' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n<div *ngIf ='entry' id ='dashboard'>\n\n<ul>\n\n\t<li>\n\n\t\t<a [routerLink] =\"['entries']\" class ='center'> Manage {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li *ngIf ='canCreate'>\n\n\t\t<a [routerLink] =\"['entry' , 'create']\" class ='center'> Create {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] ='[\"../../\"]' class ='center'> Other Payments </a>\n\n\t</li>\n\n\t<li *ngIf ='canDeleteAll'>\n\n\t\t<a [routerLink] =\"['entry' , 'delete' , 'all']\" class ='center'> Delete All {{entry.name}} Entry </a>\n\n\t</li>\n\n\t<li>\n\n\t\t<a [routerLink] =\"['/account' , 'profile']\" class ='center'> Profile </a>\n\n\t</li>\n\n</ul>\n\n</div>","import { Component , Input , OnInit } from '@angular/core';\nimport { ActivatedRoute , Router , Params } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { GeneralPayment } from '../general-payment';\nimport { General } from '../general';\nimport { ErrorMessagesService } from '../../../shared/services/error-messages.service';\nimport { NotificationService } from '../../../shared/services/notification.service';\nimport { GeneralPaymentService } from '../general-payment.service';\n\n@Component({\n\n  'selector' : 'app-general-payment-entry-verification',\n\n  'templateUrl' : './general-payment-entry-verification.component.html',\n\n  'styleUrls' : ['./general-payment-entry-verification.component.css'] ,\n\n  'providers' : [NotificationService , ErrorMessagesService ]\n\n})\n\nexport class GeneralPaymentEntryVerificationComponent implements OnInit {\n\n  constructor(public router : Router , public ns : NotificationService , public ems : ErrorMessagesService ,\n\n  \t\t\t\t\t\tprivate route : ActivatedRoute , private gps: GeneralPaymentService) {\n\n  }\n\n  public systemType : string;\n\n  public viewWord : string;\n\n  public title : string;\n\n  public view : string;\n\n  public link : string;\n\n  public $link : string;\n\n  public error : General;\n\n  public isError : boolean = false\n\n  public pslug : string;\n\n  public entryChangesT : any;\n\n  ngOnInit() : void {\n\n    this.gps.$systemType = this.systemType;\n\n    this.gps.$sa = this.$link;\n\n    this.route.queryParams\n\n      .pipe(\n\n          switchMap((params : Params) => {\n\n          \tlet $e = params.reference;\n\n          \tlet $ps = this.route.snapshot.paramMap;\n\n          \tthis.pslug = $ps.get('payment');\n\n          \treturn this.gps.$verifyPayment($e); })\n        )\n          .subscribe((result : General) => {\n\n  \t\t\t\t\tif (result == null) { \n\n  \t\t\t\t\t\tthis.isError = true;\n\n  \t\t\t\t\t\tthis.error = Object.assign({'resource' : `${this.systemType} Entry`} , this.ems.message); }\n\n             else if (result != null && result.verified == true) {\n        \n              this.ns.setNotificationStatus(true);\n\n              this.ns.addNotification(`Operation is successful and ${this.systemType} is added.`);\n\n              this.entryChanges(result.$data); } });\n  }\n\n  ngOnDestroy() : void {\n\n  \tclearTimeout(this.entryChangesT);\n  }\n\n  public entryChanges(data) {\n\n    this.entryChangesT = setTimeout(() => {\n\n      return this.router.navigate(data && data._id ? \n\n        ['general-payment' , 't' , this.pslug , 'entry' , data.slug , 'detail'] : ['general-payment' , 't' , this.pslug] , {'replaceUrl' : true} ); } \n\n      , 5000); \n  }\n\n  get notificationAvailable() : boolean {\n\n    return this.ns.notificationStatus();\n  }\n\n  get notificationMessage() : string {\n\n    return this.ns.getNotificationMessage();\n  }\n\n  public removeNotification() : void {\n\n     this.ns.removeNotification();\n   }\n\n\n}\n","<div id ='general-payment'>\n\n<h2 *ngIf ='title' > {{title}} </h2>\n\n<p> Kindly be patient while the payment is being processed </p>\n\n<app-view-description *ngIf ='view' [view-type] ='view'> </app-view-description>\n\n<app-resource-unavailable *ngIf ='isError' [error] ='error' > </app-resource-unavailable>\n\n</div>"],"sourceRoot":"webpack:///"}